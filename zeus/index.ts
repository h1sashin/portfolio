/* eslint-disable */

import { AllTypesProps, ReturnTypes, Ops } from './const';
export const HOST = "https://api-eu-central-1.hygraph.com/v2/cl6pf5b2z20oo01szgaeke2r9/master"


export const HEADERS = {}
export const apiSubscription = (options: chainOptions) => (query: string) => {
  try {
    const queryString = options[0] + '?query=' + encodeURIComponent(query);
    const wsString = queryString.replace('http', 'ws');
    const host = (options.length > 1 && options[1]?.websocket?.[0]) || wsString;
    const webSocketOptions = options[1]?.websocket || [host];
    const ws = new WebSocket(...webSocketOptions);
    return {
      ws,
      on: (e: (args: any) => void) => {
        ws.onmessage = (event: any) => {
          if (event.data) {
            const parsed = JSON.parse(event.data);
            const data = parsed.data;
            return e(data);
          }
        };
      },
      off: (e: (args: any) => void) => {
        ws.onclose = e;
      },
      error: (e: (args: any) => void) => {
        ws.onerror = e;
      },
      open: (e: () => void) => {
        ws.onopen = e;
      },
    };
  } catch {
    throw new Error('No websockets implemented');
  }
};
const handleFetchResponse = (response: Response): Promise<GraphQLResponse> => {
  if (!response.ok) {
    return new Promise((_, reject) => {
      response
        .text()
        .then((text) => {
          try {
            reject(JSON.parse(text));
          } catch (err) {
            reject(text);
          }
        })
        .catch(reject);
    });
  }
  return response.json();
};

export const apiFetch =
  (options: fetchOptions) =>
  (query: string, variables: Record<string, unknown> = {}) => {
    const fetchOptions = options[1] || {};
    if (fetchOptions.method && fetchOptions.method === 'GET') {
      return fetch(`${options[0]}?query=${encodeURIComponent(query)}`, fetchOptions)
        .then(handleFetchResponse)
        .then((response: GraphQLResponse) => {
          if (response.errors) {
            throw new GraphQLError(response);
          }
          return response.data;
        });
    }
    return fetch(`${options[0]}`, {
      body: JSON.stringify({ query, variables }),
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      ...fetchOptions,
    })
      .then(handleFetchResponse)
      .then((response: GraphQLResponse) => {
        if (response.errors) {
          throw new GraphQLError(response);
        }
        return response.data;
      });
  };

export const InternalsBuildQuery = ({
  ops,
  props,
  returns,
  options,
  scalars,
}: {
  props: AllTypesPropsType;
  returns: ReturnTypesType;
  ops: Operations;
  options?: OperationOptions;
  scalars?: ScalarDefinition;
}) => {
  const ibb = (
    k: string,
    o: InputValueType | VType,
    p = '',
    root = true,
    vars: Array<{ name: string; graphQLType: string }> = [],
  ): string => {
    const keyForPath = purifyGraphQLKey(k);
    const newPath = [p, keyForPath].join(SEPARATOR);
    if (!o) {
      return '';
    }
    if (typeof o === 'boolean' || typeof o === 'number') {
      return k;
    }
    if (typeof o === 'string') {
      return `${k} ${o}`;
    }
    if (Array.isArray(o)) {
      const args = InternalArgsBuilt({
        props,
        returns,
        ops,
        scalars,
        vars,
      })(o[0], newPath);
      return `${ibb(args ? `${k}(${args})` : k, o[1], p, false, vars)}`;
    }
    if (k === '__alias') {
      return Object.entries(o)
        .map(([alias, objectUnderAlias]) => {
          if (typeof objectUnderAlias !== 'object' || Array.isArray(objectUnderAlias)) {
            throw new Error(
              'Invalid alias it should be __alias:{ YOUR_ALIAS_NAME: { OPERATION_NAME: { ...selectors }}}',
            );
          }
          const operationName = Object.keys(objectUnderAlias)[0];
          const operation = objectUnderAlias[operationName];
          return ibb(`${alias}:${operationName}`, operation, p, false, vars);
        })
        .join('\n');
    }
    const hasOperationName = root && options?.operationName ? ' ' + options.operationName : '';
    const keyForDirectives = o.__directives ?? '';
    const query = `{${Object.entries(o)
      .filter(([k]) => k !== '__directives')
      .map((e) => ibb(...e, [p, `field<>${keyForPath}`].join(SEPARATOR), false, vars))
      .join('\n')}}`;
    if (!root) {
      return `${k} ${keyForDirectives}${hasOperationName} ${query}`;
    }
    const varsString = vars.map((v) => `${v.name}: ${v.graphQLType}`).join(', ');
    return `${k} ${keyForDirectives}${hasOperationName}${varsString ? `(${varsString})` : ''} ${query}`;
  };
  return ibb;
};

export const Thunder =
  (fn: FetchFunction) =>
  <O extends keyof typeof Ops, SCLR extends ScalarDefinition, R extends keyof ValueTypes = GenericOperation<O>>(
    operation: O,
    graphqlOptions?: ThunderGraphQLOptions<SCLR>,
  ) =>
  <Z extends ValueTypes[R]>(o: Z | ValueTypes[R], ops?: OperationOptions & { variables?: Record<string, unknown> }) =>
    fn(
      Zeus(operation, o, {
        operationOptions: ops,
        scalars: graphqlOptions?.scalars,
      }),
      ops?.variables,
    ).then((data) => {
      if (graphqlOptions?.scalars) {
        return decodeScalarsInResponse({
          response: data,
          initialOp: operation,
          initialZeusQuery: o as VType,
          returns: ReturnTypes,
          scalars: graphqlOptions.scalars,
          ops: Ops,
        });
      }
      return data;
    }) as Promise<InputType<GraphQLTypes[R], Z, SCLR>>;

export const Chain = (...options: chainOptions) => Thunder(apiFetch(options));

export const SubscriptionThunder =
  (fn: SubscriptionFunction) =>
  <O extends keyof typeof Ops, SCLR extends ScalarDefinition, R extends keyof ValueTypes = GenericOperation<O>>(
    operation: O,
    graphqlOptions?: ThunderGraphQLOptions<SCLR>,
  ) =>
  <Z extends ValueTypes[R]>(o: Z | ValueTypes[R], ops?: OperationOptions & { variables?: ExtractVariables<Z> }) => {
    const returnedFunction = fn(
      Zeus(operation, o, {
        operationOptions: ops,
        scalars: graphqlOptions?.scalars,
      }),
    ) as SubscriptionToGraphQL<Z, GraphQLTypes[R], SCLR>;
    if (returnedFunction?.on && graphqlOptions?.scalars) {
      const wrapped = returnedFunction.on;
      returnedFunction.on = (fnToCall: (args: InputType<GraphQLTypes[R], Z, SCLR>) => void) =>
        wrapped((data: InputType<GraphQLTypes[R], Z, SCLR>) => {
          if (graphqlOptions?.scalars) {
            return fnToCall(
              decodeScalarsInResponse({
                response: data,
                initialOp: operation,
                initialZeusQuery: o as VType,
                returns: ReturnTypes,
                scalars: graphqlOptions.scalars,
                ops: Ops,
              }),
            );
          }
          return fnToCall(data);
        });
    }
    return returnedFunction;
  };

export const Subscription = (...options: chainOptions) => SubscriptionThunder(apiSubscription(options));
export const Zeus = <
  Z extends ValueTypes[R],
  O extends keyof typeof Ops,
  R extends keyof ValueTypes = GenericOperation<O>,
>(
  operation: O,
  o: Z | ValueTypes[R],
  ops?: {
    operationOptions?: OperationOptions;
    scalars?: ScalarDefinition;
  },
) =>
  InternalsBuildQuery({
    props: AllTypesProps,
    returns: ReturnTypes,
    ops: Ops,
    options: ops?.operationOptions,
    scalars: ops?.scalars,
  })(operation, o as VType);

export const ZeusSelect = <T>() => ((t: unknown) => t) as SelectionFunction<T>;

export const Selector = <T extends keyof ValueTypes>(key: T) => key && ZeusSelect<ValueTypes[T]>();

export const TypeFromSelector = <T extends keyof ValueTypes>(key: T) => key && ZeusSelect<ValueTypes[T]>();
export const Gql = Chain(HOST, {
  headers: {
    'Content-Type': 'application/json',
    ...HEADERS,
  },
});

export const ZeusScalars = ZeusSelect<ScalarCoders>();

export const decodeScalarsInResponse = <O extends Operations>({
  response,
  scalars,
  returns,
  ops,
  initialZeusQuery,
  initialOp,
}: {
  ops: O;
  response: any;
  returns: ReturnTypesType;
  scalars?: Record<string, ScalarResolver | undefined>;
  initialOp: keyof O;
  initialZeusQuery: InputValueType | VType;
}) => {
  if (!scalars) {
    return response;
  }
  const builder = PrepareScalarPaths({
    ops,
    returns,
  });

  const scalarPaths = builder(initialOp as string, ops[initialOp], initialZeusQuery);
  if (scalarPaths) {
    const r = traverseResponse({ scalarPaths, resolvers: scalars })('Query', response, ['Query']);
    return r;
  }
  return response;
};

export const traverseResponse = ({
  resolvers,
  scalarPaths,
}: {
  scalarPaths: { [x: string]: `scalar.${string}` };
  resolvers: {
    [x: string]: ScalarResolver | undefined;
  };
}) => {
  const ibb = (k: string, o: InputValueType | VType, p: string[] = []): unknown => {
    if (Array.isArray(o)) {
      return o.map((eachO) => ibb(k, eachO, p));
    }
    const scalarPathString = p.join(SEPARATOR);
    const currentScalarString = scalarPaths[scalarPathString];
    if (currentScalarString) {
      const currentDecoder = resolvers[currentScalarString.split('.')[1]]?.decode;
      if (currentDecoder) {
        return currentDecoder(o);
      }
    }
    if (typeof o === 'boolean' || typeof o === 'number' || typeof o === 'string' || !o) {
      return o;
    }
    return Object.fromEntries(Object.entries(o).map(([k, v]) => [k, ibb(k, v, [...p, purifyGraphQLKey(k)])]));
  };
  return ibb;
};

export type AllTypesPropsType = {
  [x: string]:
    | undefined
    | `scalar.${string}`
    | 'enum'
    | {
        [x: string]:
          | undefined
          | string
          | {
              [x: string]: string | undefined;
            };
      };
};

export type ReturnTypesType = {
  [x: string]:
    | {
        [x: string]: string | undefined;
      }
    | `scalar.${string}`
    | undefined;
};
export type InputValueType = {
  [x: string]: undefined | boolean | string | number | [any, undefined | boolean | InputValueType] | InputValueType;
};
export type VType =
  | undefined
  | boolean
  | string
  | number
  | [any, undefined | boolean | InputValueType]
  | InputValueType;

export type PlainType = boolean | number | string | null | undefined;
export type ZeusArgsType =
  | PlainType
  | {
      [x: string]: ZeusArgsType;
    }
  | Array<ZeusArgsType>;

export type Operations = Record<string, string>;

export type VariableDefinition = {
  [x: string]: unknown;
};

export const SEPARATOR = '|';

export type fetchOptions = Parameters<typeof fetch>;
type websocketOptions = typeof WebSocket extends new (...args: infer R) => WebSocket ? R : never;
export type chainOptions = [fetchOptions[0], fetchOptions[1] & { websocket?: websocketOptions }] | [fetchOptions[0]];
export type FetchFunction = (query: string, variables?: Record<string, unknown>) => Promise<any>;
export type SubscriptionFunction = (query: string) => any;
type NotUndefined<T> = T extends undefined ? never : T;
export type ResolverType<F> = NotUndefined<F extends [infer ARGS, any] ? ARGS : undefined>;

export type OperationOptions = {
  operationName?: string;
};

export type ScalarCoder = Record<string, (s: unknown) => string>;

export interface GraphQLResponse {
  data?: Record<string, any>;
  errors?: Array<{
    message: string;
  }>;
}
export class GraphQLError extends Error {
  constructor(public response: GraphQLResponse) {
    super('');
    console.error(response);
  }
  toString() {
    return 'GraphQL Response Error';
  }
}
export type GenericOperation<O> = O extends keyof typeof Ops ? typeof Ops[O] : never;
export type ThunderGraphQLOptions<SCLR extends ScalarDefinition> = {
  scalars?: SCLR | ScalarCoders;
};

const ExtractScalar = (mappedParts: string[], returns: ReturnTypesType): `scalar.${string}` | undefined => {
  if (mappedParts.length === 0) {
    return;
  }
  const oKey = mappedParts[0];
  const returnP1 = returns[oKey];
  if (typeof returnP1 === 'object') {
    const returnP2 = returnP1[mappedParts[1]];
    if (returnP2) {
      return ExtractScalar([returnP2, ...mappedParts.slice(2)], returns);
    }
    return undefined;
  }
  return returnP1 as `scalar.${string}` | undefined;
};

export const PrepareScalarPaths = ({ ops, returns }: { returns: ReturnTypesType; ops: Operations }) => {
  const ibb = (
    k: string,
    originalKey: string,
    o: InputValueType | VType,
    p: string[] = [],
    pOriginals: string[] = [],
    root = true,
  ): { [x: string]: `scalar.${string}` } | undefined => {
    if (!o) {
      return;
    }
    if (typeof o === 'boolean' || typeof o === 'number' || typeof o === 'string') {
      const extractionArray = [...pOriginals, originalKey];
      const isScalar = ExtractScalar(extractionArray, returns);
      if (isScalar?.startsWith('scalar')) {
        const partOfTree = {
          [[...p, k].join(SEPARATOR)]: isScalar,
        };
        return partOfTree;
      }
      return {};
    }
    if (Array.isArray(o)) {
      return ibb(k, k, o[1], p, pOriginals, false);
    }
    if (k === '__alias') {
      return Object.entries(o)
        .map(([alias, objectUnderAlias]) => {
          if (typeof objectUnderAlias !== 'object' || Array.isArray(objectUnderAlias)) {
            throw new Error(
              'Invalid alias it should be __alias:{ YOUR_ALIAS_NAME: { OPERATION_NAME: { ...selectors }}}',
            );
          }
          const operationName = Object.keys(objectUnderAlias)[0];
          const operation = objectUnderAlias[operationName];
          return ibb(alias, operationName, operation, p, pOriginals, false);
        })
        .reduce((a, b) => ({
          ...a,
          ...b,
        }));
    }
    const keyName = root ? ops[k] : k;
    return Object.entries(o)
      .filter(([k]) => k !== '__directives')
      .map(([k, v]) =>
        ibb(k, k, v, [...p, purifyGraphQLKey(keyName || k)], [...pOriginals, purifyGraphQLKey(originalKey)], false),
      )
      .reduce((a, b) => ({
        ...a,
        ...b,
      }));
  };
  return ibb;
};

export const purifyGraphQLKey = (k: string) => k.replace(/\([^)]*\)/g, '').replace(/^[^:]*\:/g, '');

const mapPart = (p: string) => {
  const [isArg, isField] = p.split('<>');
  if (isField) {
    return {
      v: isField,
      __type: 'field',
    } as const;
  }
  return {
    v: isArg,
    __type: 'arg',
  } as const;
};

type Part = ReturnType<typeof mapPart>;

export const ResolveFromPath = (props: AllTypesPropsType, returns: ReturnTypesType, ops: Operations) => {
  const ResolvePropsType = (mappedParts: Part[]) => {
    const oKey = ops[mappedParts[0].v];
    const propsP1 = oKey ? props[oKey] : props[mappedParts[0].v];
    if (propsP1 === 'enum' && mappedParts.length === 1) {
      return 'enum';
    }
    if (typeof propsP1 === 'string' && propsP1.startsWith('scalar.') && mappedParts.length === 1) {
      return propsP1;
    }
    if (typeof propsP1 === 'object') {
      if (mappedParts.length < 2) {
        return 'not';
      }
      const propsP2 = propsP1[mappedParts[1].v];
      if (typeof propsP2 === 'string') {
        return rpp(
          `${propsP2}${SEPARATOR}${mappedParts
            .slice(2)
            .map((mp) => mp.v)
            .join(SEPARATOR)}`,
        );
      }
      if (typeof propsP2 === 'object') {
        if (mappedParts.length < 3) {
          return 'not';
        }
        const propsP3 = propsP2[mappedParts[2].v];
        if (propsP3 && mappedParts[2].__type === 'arg') {
          return rpp(
            `${propsP3}${SEPARATOR}${mappedParts
              .slice(3)
              .map((mp) => mp.v)
              .join(SEPARATOR)}`,
          );
        }
      }
    }
  };
  const ResolveReturnType = (mappedParts: Part[]) => {
    if (mappedParts.length === 0) {
      return 'not';
    }
    const oKey = ops[mappedParts[0].v];
    const returnP1 = oKey ? returns[oKey] : returns[mappedParts[0].v];
    if (typeof returnP1 === 'object') {
      const returnP2 = returnP1[mappedParts[1].v];
      if (returnP2) {
        return rpp(
          `${returnP2}${SEPARATOR}${mappedParts
            .slice(2)
            .map((mp) => mp.v)
            .join(SEPARATOR)}`,
        );
      }
    }
  };
  const rpp = (path: string): 'enum' | 'not' | `scalar.${string}` => {
    const parts = path.split(SEPARATOR).filter((l) => l.length > 0);
    const mappedParts = parts.map(mapPart);
    const propsP1 = ResolvePropsType(mappedParts);
    if (propsP1) {
      return propsP1;
    }
    const returnP1 = ResolveReturnType(mappedParts);
    if (returnP1) {
      return returnP1;
    }
    return 'not';
  };
  return rpp;
};

export const InternalArgsBuilt = ({
  props,
  ops,
  returns,
  scalars,
  vars,
}: {
  props: AllTypesPropsType;
  returns: ReturnTypesType;
  ops: Operations;
  scalars?: ScalarDefinition;
  vars: Array<{ name: string; graphQLType: string }>;
}) => {
  const arb = (a: ZeusArgsType, p = '', root = true): string => {
    if (typeof a === 'string') {
      if (a.startsWith(START_VAR_NAME)) {
        const [varName, graphQLType] = a.replace(START_VAR_NAME, '$').split(GRAPHQL_TYPE_SEPARATOR);
        const v = vars.find((v) => v.name === varName);
        if (!v) {
          vars.push({
            name: varName,
            graphQLType,
          });
        } else {
          if (v.graphQLType !== graphQLType) {
            throw new Error(
              `Invalid variable exists with two different GraphQL Types, "${v.graphQLType}" and ${graphQLType}`,
            );
          }
        }
        return varName;
      }
    }
    const checkType = ResolveFromPath(props, returns, ops)(p);
    if (checkType.startsWith('scalar.')) {
      // eslint-disable-next-line @typescript-eslint/no-unused-vars
      const [_, ...splittedScalar] = checkType.split('.');
      const scalarKey = splittedScalar.join('.');
      return (scalars?.[scalarKey]?.encode?.(a) as string) || JSON.stringify(a);
    }
    if (Array.isArray(a)) {
      return `[${a.map((arr) => arb(arr, p, false)).join(', ')}]`;
    }
    if (typeof a === 'string') {
      if (checkType === 'enum') {
        return a;
      }
      return `${JSON.stringify(a)}`;
    }
    if (typeof a === 'object') {
      if (a === null) {
        return `null`;
      }
      const returnedObjectString = Object.entries(a)
        .filter(([, v]) => typeof v !== 'undefined')
        .map(([k, v]) => `${k}: ${arb(v, [p, k].join(SEPARATOR), false)}`)
        .join(',\n');
      if (!root) {
        return `{${returnedObjectString}}`;
      }
      return returnedObjectString;
    }
    return `${a}`;
  };
  return arb;
};

export const resolverFor = <X, T extends keyof ResolverInputTypes, Z extends keyof ResolverInputTypes[T]>(
  type: T,
  field: Z,
  fn: (
    args: Required<ResolverInputTypes[T]>[Z] extends [infer Input, any] ? Input : any,
    source: any,
  ) => Z extends keyof ModelTypes[T] ? ModelTypes[T][Z] | Promise<ModelTypes[T][Z]> | X : any,
) => fn as (args?: any, source?: any) => any;

export type UnwrapPromise<T> = T extends Promise<infer R> ? R : T;
export type ZeusState<T extends (...args: any[]) => Promise<any>> = NonNullable<UnwrapPromise<ReturnType<T>>>;
export type ZeusHook<
  T extends (...args: any[]) => Record<string, (...args: any[]) => Promise<any>>,
  N extends keyof ReturnType<T>,
> = ZeusState<ReturnType<T>[N]>;

export type WithTypeNameValue<T> = T & {
  __typename?: boolean;
  __directives?: string;
};
export type AliasType<T> = WithTypeNameValue<T> & {
  __alias?: Record<string, WithTypeNameValue<T>>;
};
type DeepAnify<T> = {
  [P in keyof T]?: any;
};
type IsPayLoad<T> = T extends [any, infer PayLoad] ? PayLoad : T;
export type ScalarDefinition = Record<string, ScalarResolver>;

type IsScalar<S, SCLR extends ScalarDefinition> = S extends 'scalar' & { name: infer T }
  ? T extends keyof SCLR
    ? SCLR[T]['decode'] extends (s: unknown) => unknown
      ? ReturnType<SCLR[T]['decode']>
      : unknown
    : unknown
  : S;
type IsArray<T, U, SCLR extends ScalarDefinition> = T extends Array<infer R>
  ? InputType<R, U, SCLR>[]
  : InputType<T, U, SCLR>;
type FlattenArray<T> = T extends Array<infer R> ? R : T;
type BaseZeusResolver = boolean | 1 | string | Variable<any, string>;

type IsInterfaced<SRC extends DeepAnify<DST>, DST, SCLR extends ScalarDefinition> = FlattenArray<SRC> extends
  | ZEUS_INTERFACES
  | ZEUS_UNIONS
  ? {
      [P in keyof SRC]: SRC[P] extends '__union' & infer R
        ? P extends keyof DST
          ? IsArray<R, '__typename' extends keyof DST ? DST[P] & { __typename: true } : DST[P], SCLR>
          : Record<string, unknown>
        : never;
    }[keyof DST] & {
      [P in keyof Omit<
        Pick<
          SRC,
          {
            [P in keyof DST]: SRC[P] extends '__union' & infer R ? never : P;
          }[keyof DST]
        >,
        '__typename'
      >]: IsPayLoad<DST[P]> extends BaseZeusResolver ? IsScalar<SRC[P], SCLR> : IsArray<SRC[P], DST[P], SCLR>;
    }
  : {
      [P in keyof Pick<SRC, keyof DST>]: IsPayLoad<DST[P]> extends BaseZeusResolver
        ? IsScalar<SRC[P], SCLR>
        : IsArray<SRC[P], DST[P], SCLR>;
    };

export type MapType<SRC, DST, SCLR extends ScalarDefinition> = SRC extends DeepAnify<DST>
  ? IsInterfaced<SRC, DST, SCLR>
  : never;
// eslint-disable-next-line @typescript-eslint/ban-types
export type InputType<SRC, DST, SCLR extends ScalarDefinition = {}> = IsPayLoad<DST> extends { __alias: infer R }
  ? {
      [P in keyof R]: MapType<SRC, R[P], SCLR>[keyof MapType<SRC, R[P], SCLR>];
    } & MapType<SRC, Omit<IsPayLoad<DST>, '__alias'>, SCLR>
  : MapType<SRC, IsPayLoad<DST>, SCLR>;
export type SubscriptionToGraphQL<Z, T, SCLR extends ScalarDefinition> = {
  ws: WebSocket;
  on: (fn: (args: InputType<T, Z, SCLR>) => void) => void;
  off: (fn: (e: { data?: InputType<T, Z, SCLR>; code?: number; reason?: string; message?: string }) => void) => void;
  error: (fn: (e: { data?: InputType<T, Z, SCLR>; errors?: string[] }) => void) => void;
  open: () => void;
};

// eslint-disable-next-line @typescript-eslint/ban-types
export type FromSelector<SELECTOR, NAME extends keyof GraphQLTypes, SCLR extends ScalarDefinition = {}> = InputType<
  GraphQLTypes[NAME],
  SELECTOR,
  SCLR
>;

export type ScalarResolver = {
  encode?: (s: unknown) => string;
  decode?: (s: unknown) => unknown;
};

export type SelectionFunction<V> = <T>(t: T | V) => T;

type BuiltInVariableTypes = {
  ['String']: string;
  ['Int']: number;
  ['Float']: number;
  ['ID']: unknown;
  ['Boolean']: boolean;
};
type AllVariableTypes = keyof BuiltInVariableTypes | keyof ZEUS_VARIABLES;
type VariableRequired<T extends string> = `${T}!` | T | `[${T}]` | `[${T}]!` | `[${T}!]` | `[${T}!]!`;
type VR<T extends string> = VariableRequired<VariableRequired<T>>;

export type GraphQLVariableType = VR<AllVariableTypes>;

type ExtractVariableTypeString<T extends string> = T extends VR<infer R1>
  ? R1 extends VR<infer R2>
    ? R2 extends VR<infer R3>
      ? R3 extends VR<infer R4>
        ? R4 extends VR<infer R5>
          ? R5
          : R4
        : R3
      : R2
    : R1
  : T;

type DecomposeType<T, Type> = T extends `[${infer R}]`
  ? Array<DecomposeType<R, Type>> | undefined
  : T extends `${infer R}!`
  ? NonNullable<DecomposeType<R, Type>>
  : Type | undefined;

type ExtractTypeFromGraphQLType<T extends string> = T extends keyof ZEUS_VARIABLES
  ? ZEUS_VARIABLES[T]
  : T extends keyof BuiltInVariableTypes
  ? BuiltInVariableTypes[T]
  : any;

export type GetVariableType<T extends string> = DecomposeType<
  T,
  ExtractTypeFromGraphQLType<ExtractVariableTypeString<T>>
>;

type UndefinedKeys<T> = {
  [K in keyof T]-?: T[K] extends NonNullable<T[K]> ? never : K;
}[keyof T];

type WithNullableKeys<T> = Pick<T, UndefinedKeys<T>>;
type WithNonNullableKeys<T> = Omit<T, UndefinedKeys<T>>;

type OptionalKeys<T> = {
  [P in keyof T]?: T[P];
};

export type WithOptionalNullables<T> = OptionalKeys<WithNullableKeys<T>> & WithNonNullableKeys<T>;

export type Variable<T extends GraphQLVariableType, Name extends string> = {
  ' __zeus_name': Name;
  ' __zeus_type': T;
};

export type ExtractVariables<Query> = Query extends Variable<infer VType, infer VName>
  ? { [key in VName]: GetVariableType<VType> }
  : Query extends [infer Inputs, infer Outputs]
  ? ExtractVariables<Inputs> & ExtractVariables<Outputs>
  : Query extends string | number | boolean
  ? // eslint-disable-next-line @typescript-eslint/ban-types
    {}
  : UnionToIntersection<{ [K in keyof Query]: WithOptionalNullables<ExtractVariables<Query[K]>> }[keyof Query]>;

type UnionToIntersection<U> = (U extends any ? (k: U) => void : never) extends (k: infer I) => void ? I : never;

export const START_VAR_NAME = `$ZEUS_VAR`;
export const GRAPHQL_TYPE_SEPARATOR = `__$GRAPHQL__`;

export const $ = <Type extends GraphQLVariableType, Name extends string>(name: Name, graphqlType: Type) => {
  return (START_VAR_NAME + name + GRAPHQL_TYPE_SEPARATOR + graphqlType) as unknown as Variable<Type, Name>;
};
type ZEUS_INTERFACES = GraphQLTypes["Node"]
export type ScalarCoders = {
	Date?: ScalarResolver;
	DateTime?: ScalarResolver;
	Hex?: ScalarResolver;
	Json?: ScalarResolver;
	Long?: ScalarResolver;
	RGBAHue?: ScalarResolver;
	RGBATransparency?: ScalarResolver;
	RichTextAST?: ScalarResolver;
}
type ZEUS_UNIONS = GraphQLTypes["AboutMelinksUnion"] | GraphQLTypes["CompanyParent"] | GraphQLTypes["LinkParent"] | GraphQLTypes["ScheduledOperationAffectedDocument"] | GraphQLTypes["SkillCategoryskillsListUnion"] | GraphQLTypes["SkillParent"]

export type ValueTypes = {
    ["AboutMe"]: AliasType<{
	/** System stage field */
	stage?:boolean | `@${string}`,
documentInStages?: [{	/** Potential stages that should be returned */
	stages: Array<ValueTypes["Stage"]> | Variable<any, string>,	/** Decides if the current stage should be included or not */
	includeCurrent: boolean | Variable<any, string>,	/** Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree */
	inheritLocale: boolean | Variable<any, string>},ValueTypes["AboutMe"]],
	/** The time the document was published. Null on documents in draft stage. */
	publishedAt?:boolean | `@${string}`,
	/** The time the document was updated */
	updatedAt?:boolean | `@${string}`,
	/** The time the document was created */
	createdAt?:boolean | `@${string}`,
	/** The unique identifier */
	id?:boolean | `@${string}`,
	contactEmail?:boolean | `@${string}`,
	description?:boolean | `@${string}`,
company?: [{	/** Allows to optionally override locale filtering behaviour in the query's subtree.

Note that `company` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument will overwrite any existing locale filtering defined in the query's tree for the subtree. */
	locales?: Array<ValueTypes["Locale"]> | undefined | null | Variable<any, string>},ValueTypes["Company"]],
links?: [{	skip?: number | undefined | null | Variable<any, string>,	after?: string | undefined | null | Variable<any, string>,	before?: string | undefined | null | Variable<any, string>,	first?: number | undefined | null | Variable<any, string>,	last?: number | undefined | null | Variable<any, string>,	/** Allows to optionally override locale filtering behaviour in the query's subtree.

Note that `links` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument will overwrite any existing locale filtering defined in the query's tree for the subtree. */
	locales?: Array<ValueTypes["Locale"]> | undefined | null | Variable<any, string>},ValueTypes["AboutMelinksUnion"]],
publishedBy?: [{	/** Allows to optionally override locale filtering behaviour in the query's subtree.

Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument will overwrite any existing locale filtering defined in the query's tree for the subtree. */
	locales?: Array<ValueTypes["Locale"]> | undefined | null | Variable<any, string>},ValueTypes["User"]],
updatedBy?: [{	/** Allows to optionally override locale filtering behaviour in the query's subtree.

Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument will overwrite any existing locale filtering defined in the query's tree for the subtree. */
	locales?: Array<ValueTypes["Locale"]> | undefined | null | Variable<any, string>},ValueTypes["User"]],
createdBy?: [{	/** Allows to optionally override locale filtering behaviour in the query's subtree.

Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument will overwrite any existing locale filtering defined in the query's tree for the subtree. */
	locales?: Array<ValueTypes["Locale"]> | undefined | null | Variable<any, string>},ValueTypes["User"]],
photo?: [{	/** Allows to optionally override locale filtering behaviour in the query's subtree.

Note that `photo` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument will overwrite any existing locale filtering defined in the query's tree for the subtree. */
	locales?: Array<ValueTypes["Locale"]> | undefined | null | Variable<any, string>},ValueTypes["Asset"]],
scheduledIn?: [{	where?: ValueTypes["ScheduledOperationWhereInput"] | undefined | null | Variable<any, string>,	skip?: number | undefined | null | Variable<any, string>,	after?: string | undefined | null | Variable<any, string>,	before?: string | undefined | null | Variable<any, string>,	first?: number | undefined | null | Variable<any, string>,	last?: number | undefined | null | Variable<any, string>,	/** Allows to optionally override locale filtering behaviour in the query's subtree.

Note that `scheduledIn` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument will overwrite any existing locale filtering defined in the query's tree for the subtree. */
	locales?: Array<ValueTypes["Locale"]> | undefined | null | Variable<any, string>},ValueTypes["ScheduledOperation"]],
history?: [{	limit: number | Variable<any, string>,	skip: number | Variable<any, string>,	/** This is optional and can be used to fetch the document version history for a specific stage instead of the current one */
	stageOverride?: ValueTypes["Stage"] | undefined | null | Variable<any, string>},ValueTypes["Version"]],
		__typename?: boolean | `@${string}`
}>;
	["AboutMeConnectInput"]: {
	/** Document to connect */
	where: ValueTypes["AboutMeWhereUniqueInput"] | Variable<any, string>,
	/** Allow to specify document position in list of connected documents, will default to appending at end of list */
	position?: ValueTypes["ConnectPositionInput"] | undefined | null | Variable<any, string>
};
	/** A connection to a list of items. */
["AboutMeConnection"]: AliasType<{
	/** Information to aid in pagination. */
	pageInfo?:ValueTypes["PageInfo"],
	/** A list of edges. */
	edges?:ValueTypes["AboutMeEdge"],
	aggregate?:ValueTypes["Aggregate"],
		__typename?: boolean | `@${string}`
}>;
	["AboutMeCreateInput"]: {
	updatedAt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	createdAt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	contactEmail: string | Variable<any, string>,
	description: string | Variable<any, string>,
	company?: ValueTypes["CompanyCreateOneInlineInput"] | undefined | null | Variable<any, string>,
	links?: ValueTypes["AboutMelinksUnionCreateManyInlineInput"] | undefined | null | Variable<any, string>,
	photo: ValueTypes["AssetCreateOneInlineInput"] | Variable<any, string>
};
	["AboutMeCreateManyInlineInput"]: {
	/** Create and connect multiple existing AboutMe documents */
	create?: Array<ValueTypes["AboutMeCreateInput"]> | undefined | null | Variable<any, string>,
	/** Connect multiple existing AboutMe documents */
	connect?: Array<ValueTypes["AboutMeWhereUniqueInput"]> | undefined | null | Variable<any, string>
};
	["AboutMeCreateOneInlineInput"]: {
	/** Create and connect one AboutMe document */
	create?: ValueTypes["AboutMeCreateInput"] | undefined | null | Variable<any, string>,
	/** Connect one existing AboutMe document */
	connect?: ValueTypes["AboutMeWhereUniqueInput"] | undefined | null | Variable<any, string>
};
	/** An edge in a connection. */
["AboutMeEdge"]: AliasType<{
	/** The item at the end of the edge. */
	node?:ValueTypes["AboutMe"],
	/** A cursor for use in pagination. */
	cursor?:boolean | `@${string}`,
		__typename?: boolean | `@${string}`
}>;
	/** Identifies documents */
["AboutMeManyWhereInput"]: {
	/** Contains search across all appropriate fields. */
	_search?: string | undefined | null | Variable<any, string>,
	/** Logical AND on all given filters. */
	AND?: Array<ValueTypes["AboutMeWhereInput"]> | undefined | null | Variable<any, string>,
	/** Logical OR on all given filters. */
	OR?: Array<ValueTypes["AboutMeWhereInput"]> | undefined | null | Variable<any, string>,
	/** Logical NOT on all given filters combined by AND. */
	NOT?: Array<ValueTypes["AboutMeWhereInput"]> | undefined | null | Variable<any, string>,
	publishedAt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	publishedAt_not?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	publishedAt_in?: Array<ValueTypes["DateTime"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	publishedAt_not_in?: Array<ValueTypes["DateTime"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values less than the given value. */
	publishedAt_lt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values less than or equal the given value. */
	publishedAt_lte?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values greater than the given value. */
	publishedAt_gt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values greater than or equal the given value. */
	publishedAt_gte?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	updatedAt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	updatedAt_not?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	updatedAt_in?: Array<ValueTypes["DateTime"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	updatedAt_not_in?: Array<ValueTypes["DateTime"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values less than the given value. */
	updatedAt_lt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values less than or equal the given value. */
	updatedAt_lte?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values greater than the given value. */
	updatedAt_gt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values greater than or equal the given value. */
	updatedAt_gte?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	createdAt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	createdAt_not?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	createdAt_in?: Array<ValueTypes["DateTime"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	createdAt_not_in?: Array<ValueTypes["DateTime"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values less than the given value. */
	createdAt_lt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values less than or equal the given value. */
	createdAt_lte?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values greater than the given value. */
	createdAt_gt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values greater than or equal the given value. */
	createdAt_gte?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	id?: string | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	id_not?: string | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	id_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	id_not_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values containing the given string. */
	id_contains?: string | undefined | null | Variable<any, string>,
	/** All values not containing the given string. */
	id_not_contains?: string | undefined | null | Variable<any, string>,
	/** All values starting with the given string. */
	id_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values not starting with the given string. */
	id_not_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values ending with the given string. */
	id_ends_with?: string | undefined | null | Variable<any, string>,
	/** All values not ending with the given string */
	id_not_ends_with?: string | undefined | null | Variable<any, string>,
	contactEmail?: string | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	contactEmail_not?: string | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	contactEmail_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	contactEmail_not_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values containing the given string. */
	contactEmail_contains?: string | undefined | null | Variable<any, string>,
	/** All values not containing the given string. */
	contactEmail_not_contains?: string | undefined | null | Variable<any, string>,
	/** All values starting with the given string. */
	contactEmail_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values not starting with the given string. */
	contactEmail_not_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values ending with the given string. */
	contactEmail_ends_with?: string | undefined | null | Variable<any, string>,
	/** All values not ending with the given string */
	contactEmail_not_ends_with?: string | undefined | null | Variable<any, string>,
	description?: string | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	description_not?: string | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	description_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	description_not_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values containing the given string. */
	description_contains?: string | undefined | null | Variable<any, string>,
	/** All values not containing the given string. */
	description_not_contains?: string | undefined | null | Variable<any, string>,
	/** All values starting with the given string. */
	description_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values not starting with the given string. */
	description_not_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values ending with the given string. */
	description_ends_with?: string | undefined | null | Variable<any, string>,
	/** All values not ending with the given string */
	description_not_ends_with?: string | undefined | null | Variable<any, string>,
	company?: ValueTypes["CompanyWhereInput"] | undefined | null | Variable<any, string>,
	publishedBy?: ValueTypes["UserWhereInput"] | undefined | null | Variable<any, string>,
	updatedBy?: ValueTypes["UserWhereInput"] | undefined | null | Variable<any, string>,
	createdBy?: ValueTypes["UserWhereInput"] | undefined | null | Variable<any, string>,
	photo?: ValueTypes["AssetWhereInput"] | undefined | null | Variable<any, string>,
	scheduledIn_every?: ValueTypes["ScheduledOperationWhereInput"] | undefined | null | Variable<any, string>,
	scheduledIn_some?: ValueTypes["ScheduledOperationWhereInput"] | undefined | null | Variable<any, string>,
	scheduledIn_none?: ValueTypes["ScheduledOperationWhereInput"] | undefined | null | Variable<any, string>
};
	["AboutMeOrderByInput"]:AboutMeOrderByInput;
	["AboutMeUpdateInput"]: {
	contactEmail?: string | undefined | null | Variable<any, string>,
	description?: string | undefined | null | Variable<any, string>,
	company?: ValueTypes["CompanyUpdateOneInlineInput"] | undefined | null | Variable<any, string>,
	links?: ValueTypes["AboutMelinksUnionUpdateManyInlineInput"] | undefined | null | Variable<any, string>,
	photo?: ValueTypes["AssetUpdateOneInlineInput"] | undefined | null | Variable<any, string>
};
	["AboutMeUpdateManyInlineInput"]: {
	/** Create and connect multiple AboutMe documents */
	create?: Array<ValueTypes["AboutMeCreateInput"]> | undefined | null | Variable<any, string>,
	/** Connect multiple existing AboutMe documents */
	connect?: Array<ValueTypes["AboutMeConnectInput"]> | undefined | null | Variable<any, string>,
	/** Override currently-connected documents with multiple existing AboutMe documents */
	set?: Array<ValueTypes["AboutMeWhereUniqueInput"]> | undefined | null | Variable<any, string>,
	/** Update multiple AboutMe documents */
	update?: Array<ValueTypes["AboutMeUpdateWithNestedWhereUniqueInput"]> | undefined | null | Variable<any, string>,
	/** Upsert multiple AboutMe documents */
	upsert?: Array<ValueTypes["AboutMeUpsertWithNestedWhereUniqueInput"]> | undefined | null | Variable<any, string>,
	/** Disconnect multiple AboutMe documents */
	disconnect?: Array<ValueTypes["AboutMeWhereUniqueInput"]> | undefined | null | Variable<any, string>,
	/** Delete multiple AboutMe documents */
	delete?: Array<ValueTypes["AboutMeWhereUniqueInput"]> | undefined | null | Variable<any, string>
};
	["AboutMeUpdateManyInput"]: {
	contactEmail?: string | undefined | null | Variable<any, string>,
	description?: string | undefined | null | Variable<any, string>
};
	["AboutMeUpdateManyWithNestedWhereInput"]: {
	/** Document search */
	where: ValueTypes["AboutMeWhereInput"] | Variable<any, string>,
	/** Update many input */
	data: ValueTypes["AboutMeUpdateManyInput"] | Variable<any, string>
};
	["AboutMeUpdateOneInlineInput"]: {
	/** Create and connect one AboutMe document */
	create?: ValueTypes["AboutMeCreateInput"] | undefined | null | Variable<any, string>,
	/** Update single AboutMe document */
	update?: ValueTypes["AboutMeUpdateWithNestedWhereUniqueInput"] | undefined | null | Variable<any, string>,
	/** Upsert single AboutMe document */
	upsert?: ValueTypes["AboutMeUpsertWithNestedWhereUniqueInput"] | undefined | null | Variable<any, string>,
	/** Connect existing AboutMe document */
	connect?: ValueTypes["AboutMeWhereUniqueInput"] | undefined | null | Variable<any, string>,
	/** Disconnect currently connected AboutMe document */
	disconnect?: boolean | undefined | null | Variable<any, string>,
	/** Delete currently connected AboutMe document */
	delete?: boolean | undefined | null | Variable<any, string>
};
	["AboutMeUpdateWithNestedWhereUniqueInput"]: {
	/** Unique document search */
	where: ValueTypes["AboutMeWhereUniqueInput"] | Variable<any, string>,
	/** Document to update */
	data: ValueTypes["AboutMeUpdateInput"] | Variable<any, string>
};
	["AboutMeUpsertInput"]: {
	/** Create document if it didn't exist */
	create: ValueTypes["AboutMeCreateInput"] | Variable<any, string>,
	/** Update document if it exists */
	update: ValueTypes["AboutMeUpdateInput"] | Variable<any, string>
};
	["AboutMeUpsertWithNestedWhereUniqueInput"]: {
	/** Unique document search */
	where: ValueTypes["AboutMeWhereUniqueInput"] | Variable<any, string>,
	/** Upsert data */
	data: ValueTypes["AboutMeUpsertInput"] | Variable<any, string>
};
	/** Identifies documents */
["AboutMeWhereInput"]: {
	/** Contains search across all appropriate fields. */
	_search?: string | undefined | null | Variable<any, string>,
	/** Logical AND on all given filters. */
	AND?: Array<ValueTypes["AboutMeWhereInput"]> | undefined | null | Variable<any, string>,
	/** Logical OR on all given filters. */
	OR?: Array<ValueTypes["AboutMeWhereInput"]> | undefined | null | Variable<any, string>,
	/** Logical NOT on all given filters combined by AND. */
	NOT?: Array<ValueTypes["AboutMeWhereInput"]> | undefined | null | Variable<any, string>,
	publishedAt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	publishedAt_not?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	publishedAt_in?: Array<ValueTypes["DateTime"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	publishedAt_not_in?: Array<ValueTypes["DateTime"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values less than the given value. */
	publishedAt_lt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values less than or equal the given value. */
	publishedAt_lte?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values greater than the given value. */
	publishedAt_gt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values greater than or equal the given value. */
	publishedAt_gte?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	updatedAt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	updatedAt_not?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	updatedAt_in?: Array<ValueTypes["DateTime"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	updatedAt_not_in?: Array<ValueTypes["DateTime"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values less than the given value. */
	updatedAt_lt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values less than or equal the given value. */
	updatedAt_lte?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values greater than the given value. */
	updatedAt_gt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values greater than or equal the given value. */
	updatedAt_gte?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	createdAt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	createdAt_not?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	createdAt_in?: Array<ValueTypes["DateTime"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	createdAt_not_in?: Array<ValueTypes["DateTime"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values less than the given value. */
	createdAt_lt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values less than or equal the given value. */
	createdAt_lte?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values greater than the given value. */
	createdAt_gt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values greater than or equal the given value. */
	createdAt_gte?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	id?: string | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	id_not?: string | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	id_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	id_not_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values containing the given string. */
	id_contains?: string | undefined | null | Variable<any, string>,
	/** All values not containing the given string. */
	id_not_contains?: string | undefined | null | Variable<any, string>,
	/** All values starting with the given string. */
	id_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values not starting with the given string. */
	id_not_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values ending with the given string. */
	id_ends_with?: string | undefined | null | Variable<any, string>,
	/** All values not ending with the given string */
	id_not_ends_with?: string | undefined | null | Variable<any, string>,
	contactEmail?: string | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	contactEmail_not?: string | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	contactEmail_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	contactEmail_not_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values containing the given string. */
	contactEmail_contains?: string | undefined | null | Variable<any, string>,
	/** All values not containing the given string. */
	contactEmail_not_contains?: string | undefined | null | Variable<any, string>,
	/** All values starting with the given string. */
	contactEmail_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values not starting with the given string. */
	contactEmail_not_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values ending with the given string. */
	contactEmail_ends_with?: string | undefined | null | Variable<any, string>,
	/** All values not ending with the given string */
	contactEmail_not_ends_with?: string | undefined | null | Variable<any, string>,
	description?: string | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	description_not?: string | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	description_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	description_not_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values containing the given string. */
	description_contains?: string | undefined | null | Variable<any, string>,
	/** All values not containing the given string. */
	description_not_contains?: string | undefined | null | Variable<any, string>,
	/** All values starting with the given string. */
	description_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values not starting with the given string. */
	description_not_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values ending with the given string. */
	description_ends_with?: string | undefined | null | Variable<any, string>,
	/** All values not ending with the given string */
	description_not_ends_with?: string | undefined | null | Variable<any, string>,
	company?: ValueTypes["CompanyWhereInput"] | undefined | null | Variable<any, string>,
	publishedBy?: ValueTypes["UserWhereInput"] | undefined | null | Variable<any, string>,
	updatedBy?: ValueTypes["UserWhereInput"] | undefined | null | Variable<any, string>,
	createdBy?: ValueTypes["UserWhereInput"] | undefined | null | Variable<any, string>,
	photo?: ValueTypes["AssetWhereInput"] | undefined | null | Variable<any, string>,
	scheduledIn_every?: ValueTypes["ScheduledOperationWhereInput"] | undefined | null | Variable<any, string>,
	scheduledIn_some?: ValueTypes["ScheduledOperationWhereInput"] | undefined | null | Variable<any, string>,
	scheduledIn_none?: ValueTypes["ScheduledOperationWhereInput"] | undefined | null | Variable<any, string>
};
	/** References AboutMe record uniquely */
["AboutMeWhereUniqueInput"]: {
	id?: string | undefined | null | Variable<any, string>
};
	["AboutMelinksUnion"]: AliasType<{		["...on Link"] : ValueTypes["Link"]
		__typename?: boolean | `@${string}`
}>;
	["AboutMelinksUnionConnectInput"]: {
	Link?: ValueTypes["LinkConnectInput"] | undefined | null | Variable<any, string>
};
	["AboutMelinksUnionCreateInput"]: {
	Link?: ValueTypes["LinkCreateInput"] | undefined | null | Variable<any, string>
};
	["AboutMelinksUnionCreateManyInlineInput"]: {
	/** Create and connect multiple existing AboutMelinksUnion documents */
	create?: Array<ValueTypes["AboutMelinksUnionCreateInput"]> | undefined | null | Variable<any, string>
};
	["AboutMelinksUnionCreateOneInlineInput"]: {
	/** Create and connect one AboutMelinksUnion document */
	create?: ValueTypes["AboutMelinksUnionCreateInput"] | undefined | null | Variable<any, string>
};
	["AboutMelinksUnionCreateWithPositionInput"]: {
	Link?: ValueTypes["LinkCreateWithPositionInput"] | undefined | null | Variable<any, string>
};
	["AboutMelinksUnionUpdateInput"]: {
	Link?: ValueTypes["LinkUpdateInput"] | undefined | null | Variable<any, string>
};
	["AboutMelinksUnionUpdateManyInlineInput"]: {
	/** Create and connect multiple AboutMelinksUnion component instances */
	create?: Array<ValueTypes["AboutMelinksUnionCreateWithPositionInput"]> | undefined | null | Variable<any, string>,
	/** Update multiple AboutMelinksUnion component instances */
	update?: Array<ValueTypes["AboutMelinksUnionUpdateWithNestedWhereUniqueAndPositionInput"]> | undefined | null | Variable<any, string>,
	/** Upsert multiple AboutMelinksUnion component instances */
	upsert?: Array<ValueTypes["AboutMelinksUnionUpsertWithNestedWhereUniqueAndPositionInput"]> | undefined | null | Variable<any, string>,
	/** Delete multiple AboutMelinksUnion documents */
	delete?: Array<ValueTypes["AboutMelinksUnionWhereUniqueInput"]> | undefined | null | Variable<any, string>
};
	["AboutMelinksUnionUpdateManyWithNestedWhereInput"]: {
	Link?: ValueTypes["LinkUpdateManyWithNestedWhereInput"] | undefined | null | Variable<any, string>
};
	["AboutMelinksUnionUpdateOneInlineInput"]: {
	/** Create and connect one AboutMelinksUnion document */
	create?: ValueTypes["AboutMelinksUnionCreateInput"] | undefined | null | Variable<any, string>,
	/** Update single AboutMelinksUnion document */
	update?: ValueTypes["AboutMelinksUnionUpdateWithNestedWhereUniqueInput"] | undefined | null | Variable<any, string>,
	/** Upsert single AboutMelinksUnion document */
	upsert?: ValueTypes["AboutMelinksUnionUpsertWithNestedWhereUniqueInput"] | undefined | null | Variable<any, string>,
	/** Delete currently connected AboutMelinksUnion document */
	delete?: boolean | undefined | null | Variable<any, string>
};
	["AboutMelinksUnionUpdateWithNestedWhereUniqueAndPositionInput"]: {
	Link?: ValueTypes["LinkUpdateWithNestedWhereUniqueAndPositionInput"] | undefined | null | Variable<any, string>
};
	["AboutMelinksUnionUpdateWithNestedWhereUniqueInput"]: {
	Link?: ValueTypes["LinkUpdateWithNestedWhereUniqueInput"] | undefined | null | Variable<any, string>
};
	["AboutMelinksUnionUpsertWithNestedWhereUniqueAndPositionInput"]: {
	Link?: ValueTypes["LinkUpsertWithNestedWhereUniqueAndPositionInput"] | undefined | null | Variable<any, string>
};
	["AboutMelinksUnionUpsertWithNestedWhereUniqueInput"]: {
	Link?: ValueTypes["LinkUpsertWithNestedWhereUniqueInput"] | undefined | null | Variable<any, string>
};
	["AboutMelinksUnionWhereInput"]: {
	Link?: ValueTypes["LinkWhereInput"] | undefined | null | Variable<any, string>
};
	["AboutMelinksUnionWhereUniqueInput"]: {
	Link?: ValueTypes["LinkWhereUniqueInput"] | undefined | null | Variable<any, string>
};
	["Aggregate"]: AliasType<{
	count?:boolean | `@${string}`,
		__typename?: boolean | `@${string}`
}>;
	/** Asset system model */
["Asset"]: AliasType<{
	/** System stage field */
	stage?:boolean | `@${string}`,
	/** System Locale field */
	locale?:boolean | `@${string}`,
localizations?: [{	/** Potential locales that should be returned */
	locales: Array<ValueTypes["Locale"]> | Variable<any, string>,	/** Decides if the current locale should be included or not */
	includeCurrent: boolean | Variable<any, string>},ValueTypes["Asset"]],
documentInStages?: [{	/** Potential stages that should be returned */
	stages: Array<ValueTypes["Stage"]> | Variable<any, string>,	/** Decides if the current stage should be included or not */
	includeCurrent: boolean | Variable<any, string>,	/** Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree */
	inheritLocale: boolean | Variable<any, string>},ValueTypes["Asset"]],
	/** The mime type of the file */
	mimeType?:boolean | `@${string}`,
	/** The file size */
	size?:boolean | `@${string}`,
	/** The file width */
	width?:boolean | `@${string}`,
	/** The height of the file */
	height?:boolean | `@${string}`,
	/** The file name */
	fileName?:boolean | `@${string}`,
	/** The file handle */
	handle?:boolean | `@${string}`,
publishedAt?: [{	/** Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both */
	variation: ValueTypes["SystemDateTimeFieldVariation"] | Variable<any, string>},boolean | `@${string}`],
updatedAt?: [{	/** Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both */
	variation: ValueTypes["SystemDateTimeFieldVariation"] | Variable<any, string>},boolean | `@${string}`],
createdAt?: [{	/** Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both */
	variation: ValueTypes["SystemDateTimeFieldVariation"] | Variable<any, string>},boolean | `@${string}`],
	/** The unique identifier */
	id?:boolean | `@${string}`,
publishedBy?: [{	/** Allows to optionally override locale filtering behaviour in the query's subtree.

Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument will overwrite any existing locale filtering defined in the query's tree for the subtree. */
	locales?: Array<ValueTypes["Locale"]> | undefined | null | Variable<any, string>},ValueTypes["User"]],
updatedBy?: [{	/** Allows to optionally override locale filtering behaviour in the query's subtree.

Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument will overwrite any existing locale filtering defined in the query's tree for the subtree. */
	locales?: Array<ValueTypes["Locale"]> | undefined | null | Variable<any, string>},ValueTypes["User"]],
createdBy?: [{	/** Allows to optionally override locale filtering behaviour in the query's subtree.

Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument will overwrite any existing locale filtering defined in the query's tree for the subtree. */
	locales?: Array<ValueTypes["Locale"]> | undefined | null | Variable<any, string>},ValueTypes["User"]],
imageProject?: [{	where?: ValueTypes["ProjectWhereInput"] | undefined | null | Variable<any, string>,	orderBy?: ValueTypes["ProjectOrderByInput"] | undefined | null | Variable<any, string>,	skip?: number | undefined | null | Variable<any, string>,	after?: string | undefined | null | Variable<any, string>,	before?: string | undefined | null | Variable<any, string>,	first?: number | undefined | null | Variable<any, string>,	last?: number | undefined | null | Variable<any, string>,	/** Allows to optionally override locale filtering behaviour in the query's subtree.

Note that `imageProject` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument will overwrite any existing locale filtering defined in the query's tree for the subtree. */
	locales?: Array<ValueTypes["Locale"]> | undefined | null | Variable<any, string>},ValueTypes["Project"]],
og_imageSeo?: [{	where?: ValueTypes["SeoWhereInput"] | undefined | null | Variable<any, string>,	orderBy?: ValueTypes["SeoOrderByInput"] | undefined | null | Variable<any, string>,	skip?: number | undefined | null | Variable<any, string>,	after?: string | undefined | null | Variable<any, string>,	before?: string | undefined | null | Variable<any, string>,	first?: number | undefined | null | Variable<any, string>,	last?: number | undefined | null | Variable<any, string>,	/** Allows to optionally override locale filtering behaviour in the query's subtree.

Note that `og_imageSeo` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument will overwrite any existing locale filtering defined in the query's tree for the subtree. */
	locales?: Array<ValueTypes["Locale"]> | undefined | null | Variable<any, string>},ValueTypes["Seo"]],
photoAboutMe?: [{	where?: ValueTypes["AboutMeWhereInput"] | undefined | null | Variable<any, string>,	orderBy?: ValueTypes["AboutMeOrderByInput"] | undefined | null | Variable<any, string>,	skip?: number | undefined | null | Variable<any, string>,	after?: string | undefined | null | Variable<any, string>,	before?: string | undefined | null | Variable<any, string>,	first?: number | undefined | null | Variable<any, string>,	last?: number | undefined | null | Variable<any, string>,	/** Allows to optionally override locale filtering behaviour in the query's subtree.

Note that `photoAboutMe` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument will overwrite any existing locale filtering defined in the query's tree for the subtree. */
	locales?: Array<ValueTypes["Locale"]> | undefined | null | Variable<any, string>},ValueTypes["AboutMe"]],
scheduledIn?: [{	where?: ValueTypes["ScheduledOperationWhereInput"] | undefined | null | Variable<any, string>,	skip?: number | undefined | null | Variable<any, string>,	after?: string | undefined | null | Variable<any, string>,	before?: string | undefined | null | Variable<any, string>,	first?: number | undefined | null | Variable<any, string>,	last?: number | undefined | null | Variable<any, string>,	/** Allows to optionally override locale filtering behaviour in the query's subtree.

Note that `scheduledIn` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument will overwrite any existing locale filtering defined in the query's tree for the subtree. */
	locales?: Array<ValueTypes["Locale"]> | undefined | null | Variable<any, string>},ValueTypes["ScheduledOperation"]],
history?: [{	limit: number | Variable<any, string>,	skip: number | Variable<any, string>,	/** This is optional and can be used to fetch the document version history for a specific stage instead of the current one */
	stageOverride?: ValueTypes["Stage"] | undefined | null | Variable<any, string>},ValueTypes["Version"]],
url?: [{	transformation?: ValueTypes["AssetTransformationInput"] | undefined | null | Variable<any, string>},boolean | `@${string}`],
		__typename?: boolean | `@${string}`
}>;
	["AssetConnectInput"]: {
	/** Document to connect */
	where: ValueTypes["AssetWhereUniqueInput"] | Variable<any, string>,
	/** Allow to specify document position in list of connected documents, will default to appending at end of list */
	position?: ValueTypes["ConnectPositionInput"] | undefined | null | Variable<any, string>
};
	/** A connection to a list of items. */
["AssetConnection"]: AliasType<{
	/** Information to aid in pagination. */
	pageInfo?:ValueTypes["PageInfo"],
	/** A list of edges. */
	edges?:ValueTypes["AssetEdge"],
	aggregate?:ValueTypes["Aggregate"],
		__typename?: boolean | `@${string}`
}>;
	["AssetCreateInput"]: {
	mimeType?: string | undefined | null | Variable<any, string>,
	size?: number | undefined | null | Variable<any, string>,
	width?: number | undefined | null | Variable<any, string>,
	height?: number | undefined | null | Variable<any, string>,
	fileName: string | Variable<any, string>,
	handle: string | Variable<any, string>,
	updatedAt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	createdAt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	imageProject?: ValueTypes["ProjectCreateManyInlineInput"] | undefined | null | Variable<any, string>,
	og_imageSeo?: ValueTypes["SeoCreateManyInlineInput"] | undefined | null | Variable<any, string>,
	iconLink?: ValueTypes["LinkCreateManyInlineInput"] | undefined | null | Variable<any, string>,
	iconSkill?: ValueTypes["SkillCreateManyInlineInput"] | undefined | null | Variable<any, string>,
	photoAboutMe?: ValueTypes["AboutMeCreateManyInlineInput"] | undefined | null | Variable<any, string>,
	/** Inline mutations for managing document localizations excluding the default locale */
	localizations?: ValueTypes["AssetCreateLocalizationsInput"] | undefined | null | Variable<any, string>
};
	["AssetCreateLocalizationDataInput"]: {
	mimeType?: string | undefined | null | Variable<any, string>,
	size?: number | undefined | null | Variable<any, string>,
	width?: number | undefined | null | Variable<any, string>,
	height?: number | undefined | null | Variable<any, string>,
	fileName: string | Variable<any, string>,
	handle: string | Variable<any, string>,
	updatedAt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	createdAt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>
};
	["AssetCreateLocalizationInput"]: {
	/** Localization input */
	data: ValueTypes["AssetCreateLocalizationDataInput"] | Variable<any, string>,
	locale: ValueTypes["Locale"] | Variable<any, string>
};
	["AssetCreateLocalizationsInput"]: {
	/** Create localizations for the newly-created document */
	create?: Array<ValueTypes["AssetCreateLocalizationInput"]> | undefined | null | Variable<any, string>
};
	["AssetCreateManyInlineInput"]: {
	/** Create and connect multiple existing Asset documents */
	create?: Array<ValueTypes["AssetCreateInput"]> | undefined | null | Variable<any, string>,
	/** Connect multiple existing Asset documents */
	connect?: Array<ValueTypes["AssetWhereUniqueInput"]> | undefined | null | Variable<any, string>
};
	["AssetCreateOneInlineInput"]: {
	/** Create and connect one Asset document */
	create?: ValueTypes["AssetCreateInput"] | undefined | null | Variable<any, string>,
	/** Connect one existing Asset document */
	connect?: ValueTypes["AssetWhereUniqueInput"] | undefined | null | Variable<any, string>
};
	/** An edge in a connection. */
["AssetEdge"]: AliasType<{
	/** The item at the end of the edge. */
	node?:ValueTypes["Asset"],
	/** A cursor for use in pagination. */
	cursor?:boolean | `@${string}`,
		__typename?: boolean | `@${string}`
}>;
	/** Identifies documents */
["AssetManyWhereInput"]: {
	/** Contains search across all appropriate fields. */
	_search?: string | undefined | null | Variable<any, string>,
	/** Logical AND on all given filters. */
	AND?: Array<ValueTypes["AssetWhereInput"]> | undefined | null | Variable<any, string>,
	/** Logical OR on all given filters. */
	OR?: Array<ValueTypes["AssetWhereInput"]> | undefined | null | Variable<any, string>,
	/** Logical NOT on all given filters combined by AND. */
	NOT?: Array<ValueTypes["AssetWhereInput"]> | undefined | null | Variable<any, string>,
	publishedAt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	publishedAt_not?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	publishedAt_in?: Array<ValueTypes["DateTime"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	publishedAt_not_in?: Array<ValueTypes["DateTime"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values less than the given value. */
	publishedAt_lt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values less than or equal the given value. */
	publishedAt_lte?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values greater than the given value. */
	publishedAt_gt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values greater than or equal the given value. */
	publishedAt_gte?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	updatedAt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	updatedAt_not?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	updatedAt_in?: Array<ValueTypes["DateTime"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	updatedAt_not_in?: Array<ValueTypes["DateTime"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values less than the given value. */
	updatedAt_lt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values less than or equal the given value. */
	updatedAt_lte?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values greater than the given value. */
	updatedAt_gt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values greater than or equal the given value. */
	updatedAt_gte?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	createdAt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	createdAt_not?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	createdAt_in?: Array<ValueTypes["DateTime"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	createdAt_not_in?: Array<ValueTypes["DateTime"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values less than the given value. */
	createdAt_lt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values less than or equal the given value. */
	createdAt_lte?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values greater than the given value. */
	createdAt_gt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values greater than or equal the given value. */
	createdAt_gte?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	id?: string | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	id_not?: string | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	id_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	id_not_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values containing the given string. */
	id_contains?: string | undefined | null | Variable<any, string>,
	/** All values not containing the given string. */
	id_not_contains?: string | undefined | null | Variable<any, string>,
	/** All values starting with the given string. */
	id_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values not starting with the given string. */
	id_not_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values ending with the given string. */
	id_ends_with?: string | undefined | null | Variable<any, string>,
	/** All values not ending with the given string */
	id_not_ends_with?: string | undefined | null | Variable<any, string>,
	publishedBy?: ValueTypes["UserWhereInput"] | undefined | null | Variable<any, string>,
	updatedBy?: ValueTypes["UserWhereInput"] | undefined | null | Variable<any, string>,
	createdBy?: ValueTypes["UserWhereInput"] | undefined | null | Variable<any, string>,
	imageProject_every?: ValueTypes["ProjectWhereInput"] | undefined | null | Variable<any, string>,
	imageProject_some?: ValueTypes["ProjectWhereInput"] | undefined | null | Variable<any, string>,
	imageProject_none?: ValueTypes["ProjectWhereInput"] | undefined | null | Variable<any, string>,
	og_imageSeo_every?: ValueTypes["SeoWhereInput"] | undefined | null | Variable<any, string>,
	og_imageSeo_some?: ValueTypes["SeoWhereInput"] | undefined | null | Variable<any, string>,
	og_imageSeo_none?: ValueTypes["SeoWhereInput"] | undefined | null | Variable<any, string>,
	photoAboutMe_every?: ValueTypes["AboutMeWhereInput"] | undefined | null | Variable<any, string>,
	photoAboutMe_some?: ValueTypes["AboutMeWhereInput"] | undefined | null | Variable<any, string>,
	photoAboutMe_none?: ValueTypes["AboutMeWhereInput"] | undefined | null | Variable<any, string>,
	scheduledIn_every?: ValueTypes["ScheduledOperationWhereInput"] | undefined | null | Variable<any, string>,
	scheduledIn_some?: ValueTypes["ScheduledOperationWhereInput"] | undefined | null | Variable<any, string>,
	scheduledIn_none?: ValueTypes["ScheduledOperationWhereInput"] | undefined | null | Variable<any, string>
};
	["AssetOrderByInput"]:AssetOrderByInput;
	/** Transformations for Assets */
["AssetTransformationInput"]: {
	image?: ValueTypes["ImageTransformationInput"] | undefined | null | Variable<any, string>,
	document?: ValueTypes["DocumentTransformationInput"] | undefined | null | Variable<any, string>,
	/** Pass true if you want to validate the passed transformation parameters */
	validateOptions?: boolean | undefined | null | Variable<any, string>
};
	["AssetUpdateInput"]: {
	mimeType?: string | undefined | null | Variable<any, string>,
	size?: number | undefined | null | Variable<any, string>,
	width?: number | undefined | null | Variable<any, string>,
	height?: number | undefined | null | Variable<any, string>,
	fileName?: string | undefined | null | Variable<any, string>,
	handle?: string | undefined | null | Variable<any, string>,
	imageProject?: ValueTypes["ProjectUpdateManyInlineInput"] | undefined | null | Variable<any, string>,
	og_imageSeo?: ValueTypes["SeoUpdateManyInlineInput"] | undefined | null | Variable<any, string>,
	iconLink?: ValueTypes["LinkUpdateManyInlineInput"] | undefined | null | Variable<any, string>,
	iconSkill?: ValueTypes["SkillUpdateManyInlineInput"] | undefined | null | Variable<any, string>,
	photoAboutMe?: ValueTypes["AboutMeUpdateManyInlineInput"] | undefined | null | Variable<any, string>,
	/** Manage document localizations */
	localizations?: ValueTypes["AssetUpdateLocalizationsInput"] | undefined | null | Variable<any, string>
};
	["AssetUpdateLocalizationDataInput"]: {
	mimeType?: string | undefined | null | Variable<any, string>,
	size?: number | undefined | null | Variable<any, string>,
	width?: number | undefined | null | Variable<any, string>,
	height?: number | undefined | null | Variable<any, string>,
	fileName?: string | undefined | null | Variable<any, string>,
	handle?: string | undefined | null | Variable<any, string>
};
	["AssetUpdateLocalizationInput"]: {
	data: ValueTypes["AssetUpdateLocalizationDataInput"] | Variable<any, string>,
	locale: ValueTypes["Locale"] | Variable<any, string>
};
	["AssetUpdateLocalizationsInput"]: {
	/** Localizations to create */
	create?: Array<ValueTypes["AssetCreateLocalizationInput"]> | undefined | null | Variable<any, string>,
	/** Localizations to update */
	update?: Array<ValueTypes["AssetUpdateLocalizationInput"]> | undefined | null | Variable<any, string>,
	upsert?: Array<ValueTypes["AssetUpsertLocalizationInput"]> | undefined | null | Variable<any, string>,
	/** Localizations to delete */
	delete?: Array<ValueTypes["Locale"]> | undefined | null | Variable<any, string>
};
	["AssetUpdateManyInlineInput"]: {
	/** Create and connect multiple Asset documents */
	create?: Array<ValueTypes["AssetCreateInput"]> | undefined | null | Variable<any, string>,
	/** Connect multiple existing Asset documents */
	connect?: Array<ValueTypes["AssetConnectInput"]> | undefined | null | Variable<any, string>,
	/** Override currently-connected documents with multiple existing Asset documents */
	set?: Array<ValueTypes["AssetWhereUniqueInput"]> | undefined | null | Variable<any, string>,
	/** Update multiple Asset documents */
	update?: Array<ValueTypes["AssetUpdateWithNestedWhereUniqueInput"]> | undefined | null | Variable<any, string>,
	/** Upsert multiple Asset documents */
	upsert?: Array<ValueTypes["AssetUpsertWithNestedWhereUniqueInput"]> | undefined | null | Variable<any, string>,
	/** Disconnect multiple Asset documents */
	disconnect?: Array<ValueTypes["AssetWhereUniqueInput"]> | undefined | null | Variable<any, string>,
	/** Delete multiple Asset documents */
	delete?: Array<ValueTypes["AssetWhereUniqueInput"]> | undefined | null | Variable<any, string>
};
	["AssetUpdateManyInput"]: {
	mimeType?: string | undefined | null | Variable<any, string>,
	size?: number | undefined | null | Variable<any, string>,
	width?: number | undefined | null | Variable<any, string>,
	height?: number | undefined | null | Variable<any, string>,
	fileName?: string | undefined | null | Variable<any, string>,
	/** Optional updates to localizations */
	localizations?: ValueTypes["AssetUpdateManyLocalizationsInput"] | undefined | null | Variable<any, string>
};
	["AssetUpdateManyLocalizationDataInput"]: {
	mimeType?: string | undefined | null | Variable<any, string>,
	size?: number | undefined | null | Variable<any, string>,
	width?: number | undefined | null | Variable<any, string>,
	height?: number | undefined | null | Variable<any, string>,
	fileName?: string | undefined | null | Variable<any, string>
};
	["AssetUpdateManyLocalizationInput"]: {
	data: ValueTypes["AssetUpdateManyLocalizationDataInput"] | Variable<any, string>,
	locale: ValueTypes["Locale"] | Variable<any, string>
};
	["AssetUpdateManyLocalizationsInput"]: {
	/** Localizations to update */
	update?: Array<ValueTypes["AssetUpdateManyLocalizationInput"]> | undefined | null | Variable<any, string>
};
	["AssetUpdateManyWithNestedWhereInput"]: {
	/** Document search */
	where: ValueTypes["AssetWhereInput"] | Variable<any, string>,
	/** Update many input */
	data: ValueTypes["AssetUpdateManyInput"] | Variable<any, string>
};
	["AssetUpdateOneInlineInput"]: {
	/** Create and connect one Asset document */
	create?: ValueTypes["AssetCreateInput"] | undefined | null | Variable<any, string>,
	/** Update single Asset document */
	update?: ValueTypes["AssetUpdateWithNestedWhereUniqueInput"] | undefined | null | Variable<any, string>,
	/** Upsert single Asset document */
	upsert?: ValueTypes["AssetUpsertWithNestedWhereUniqueInput"] | undefined | null | Variable<any, string>,
	/** Connect existing Asset document */
	connect?: ValueTypes["AssetWhereUniqueInput"] | undefined | null | Variable<any, string>,
	/** Disconnect currently connected Asset document */
	disconnect?: boolean | undefined | null | Variable<any, string>,
	/** Delete currently connected Asset document */
	delete?: boolean | undefined | null | Variable<any, string>
};
	["AssetUpdateWithNestedWhereUniqueInput"]: {
	/** Unique document search */
	where: ValueTypes["AssetWhereUniqueInput"] | Variable<any, string>,
	/** Document to update */
	data: ValueTypes["AssetUpdateInput"] | Variable<any, string>
};
	["AssetUpsertInput"]: {
	/** Create document if it didn't exist */
	create: ValueTypes["AssetCreateInput"] | Variable<any, string>,
	/** Update document if it exists */
	update: ValueTypes["AssetUpdateInput"] | Variable<any, string>
};
	["AssetUpsertLocalizationInput"]: {
	update: ValueTypes["AssetUpdateLocalizationDataInput"] | Variable<any, string>,
	create: ValueTypes["AssetCreateLocalizationDataInput"] | Variable<any, string>,
	locale: ValueTypes["Locale"] | Variable<any, string>
};
	["AssetUpsertWithNestedWhereUniqueInput"]: {
	/** Unique document search */
	where: ValueTypes["AssetWhereUniqueInput"] | Variable<any, string>,
	/** Upsert data */
	data: ValueTypes["AssetUpsertInput"] | Variable<any, string>
};
	/** Identifies documents */
["AssetWhereInput"]: {
	/** Contains search across all appropriate fields. */
	_search?: string | undefined | null | Variable<any, string>,
	/** Logical AND on all given filters. */
	AND?: Array<ValueTypes["AssetWhereInput"]> | undefined | null | Variable<any, string>,
	/** Logical OR on all given filters. */
	OR?: Array<ValueTypes["AssetWhereInput"]> | undefined | null | Variable<any, string>,
	/** Logical NOT on all given filters combined by AND. */
	NOT?: Array<ValueTypes["AssetWhereInput"]> | undefined | null | Variable<any, string>,
	mimeType?: string | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	mimeType_not?: string | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	mimeType_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	mimeType_not_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values containing the given string. */
	mimeType_contains?: string | undefined | null | Variable<any, string>,
	/** All values not containing the given string. */
	mimeType_not_contains?: string | undefined | null | Variable<any, string>,
	/** All values starting with the given string. */
	mimeType_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values not starting with the given string. */
	mimeType_not_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values ending with the given string. */
	mimeType_ends_with?: string | undefined | null | Variable<any, string>,
	/** All values not ending with the given string */
	mimeType_not_ends_with?: string | undefined | null | Variable<any, string>,
	size?: number | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	size_not?: number | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	size_in?: Array<number | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	size_not_in?: Array<number | undefined | null> | undefined | null | Variable<any, string>,
	/** All values less than the given value. */
	size_lt?: number | undefined | null | Variable<any, string>,
	/** All values less than or equal the given value. */
	size_lte?: number | undefined | null | Variable<any, string>,
	/** All values greater than the given value. */
	size_gt?: number | undefined | null | Variable<any, string>,
	/** All values greater than or equal the given value. */
	size_gte?: number | undefined | null | Variable<any, string>,
	width?: number | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	width_not?: number | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	width_in?: Array<number | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	width_not_in?: Array<number | undefined | null> | undefined | null | Variable<any, string>,
	/** All values less than the given value. */
	width_lt?: number | undefined | null | Variable<any, string>,
	/** All values less than or equal the given value. */
	width_lte?: number | undefined | null | Variable<any, string>,
	/** All values greater than the given value. */
	width_gt?: number | undefined | null | Variable<any, string>,
	/** All values greater than or equal the given value. */
	width_gte?: number | undefined | null | Variable<any, string>,
	height?: number | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	height_not?: number | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	height_in?: Array<number | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	height_not_in?: Array<number | undefined | null> | undefined | null | Variable<any, string>,
	/** All values less than the given value. */
	height_lt?: number | undefined | null | Variable<any, string>,
	/** All values less than or equal the given value. */
	height_lte?: number | undefined | null | Variable<any, string>,
	/** All values greater than the given value. */
	height_gt?: number | undefined | null | Variable<any, string>,
	/** All values greater than or equal the given value. */
	height_gte?: number | undefined | null | Variable<any, string>,
	fileName?: string | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	fileName_not?: string | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	fileName_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	fileName_not_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values containing the given string. */
	fileName_contains?: string | undefined | null | Variable<any, string>,
	/** All values not containing the given string. */
	fileName_not_contains?: string | undefined | null | Variable<any, string>,
	/** All values starting with the given string. */
	fileName_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values not starting with the given string. */
	fileName_not_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values ending with the given string. */
	fileName_ends_with?: string | undefined | null | Variable<any, string>,
	/** All values not ending with the given string */
	fileName_not_ends_with?: string | undefined | null | Variable<any, string>,
	handle?: string | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	handle_not?: string | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	handle_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	handle_not_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values containing the given string. */
	handle_contains?: string | undefined | null | Variable<any, string>,
	/** All values not containing the given string. */
	handle_not_contains?: string | undefined | null | Variable<any, string>,
	/** All values starting with the given string. */
	handle_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values not starting with the given string. */
	handle_not_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values ending with the given string. */
	handle_ends_with?: string | undefined | null | Variable<any, string>,
	/** All values not ending with the given string */
	handle_not_ends_with?: string | undefined | null | Variable<any, string>,
	publishedAt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	publishedAt_not?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	publishedAt_in?: Array<ValueTypes["DateTime"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	publishedAt_not_in?: Array<ValueTypes["DateTime"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values less than the given value. */
	publishedAt_lt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values less than or equal the given value. */
	publishedAt_lte?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values greater than the given value. */
	publishedAt_gt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values greater than or equal the given value. */
	publishedAt_gte?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	updatedAt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	updatedAt_not?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	updatedAt_in?: Array<ValueTypes["DateTime"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	updatedAt_not_in?: Array<ValueTypes["DateTime"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values less than the given value. */
	updatedAt_lt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values less than or equal the given value. */
	updatedAt_lte?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values greater than the given value. */
	updatedAt_gt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values greater than or equal the given value. */
	updatedAt_gte?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	createdAt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	createdAt_not?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	createdAt_in?: Array<ValueTypes["DateTime"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	createdAt_not_in?: Array<ValueTypes["DateTime"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values less than the given value. */
	createdAt_lt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values less than or equal the given value. */
	createdAt_lte?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values greater than the given value. */
	createdAt_gt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values greater than or equal the given value. */
	createdAt_gte?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	id?: string | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	id_not?: string | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	id_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	id_not_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values containing the given string. */
	id_contains?: string | undefined | null | Variable<any, string>,
	/** All values not containing the given string. */
	id_not_contains?: string | undefined | null | Variable<any, string>,
	/** All values starting with the given string. */
	id_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values not starting with the given string. */
	id_not_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values ending with the given string. */
	id_ends_with?: string | undefined | null | Variable<any, string>,
	/** All values not ending with the given string */
	id_not_ends_with?: string | undefined | null | Variable<any, string>,
	publishedBy?: ValueTypes["UserWhereInput"] | undefined | null | Variable<any, string>,
	updatedBy?: ValueTypes["UserWhereInput"] | undefined | null | Variable<any, string>,
	createdBy?: ValueTypes["UserWhereInput"] | undefined | null | Variable<any, string>,
	imageProject_every?: ValueTypes["ProjectWhereInput"] | undefined | null | Variable<any, string>,
	imageProject_some?: ValueTypes["ProjectWhereInput"] | undefined | null | Variable<any, string>,
	imageProject_none?: ValueTypes["ProjectWhereInput"] | undefined | null | Variable<any, string>,
	og_imageSeo_every?: ValueTypes["SeoWhereInput"] | undefined | null | Variable<any, string>,
	og_imageSeo_some?: ValueTypes["SeoWhereInput"] | undefined | null | Variable<any, string>,
	og_imageSeo_none?: ValueTypes["SeoWhereInput"] | undefined | null | Variable<any, string>,
	photoAboutMe_every?: ValueTypes["AboutMeWhereInput"] | undefined | null | Variable<any, string>,
	photoAboutMe_some?: ValueTypes["AboutMeWhereInput"] | undefined | null | Variable<any, string>,
	photoAboutMe_none?: ValueTypes["AboutMeWhereInput"] | undefined | null | Variable<any, string>,
	scheduledIn_every?: ValueTypes["ScheduledOperationWhereInput"] | undefined | null | Variable<any, string>,
	scheduledIn_some?: ValueTypes["ScheduledOperationWhereInput"] | undefined | null | Variable<any, string>,
	scheduledIn_none?: ValueTypes["ScheduledOperationWhereInput"] | undefined | null | Variable<any, string>
};
	/** References Asset record uniquely */
["AssetWhereUniqueInput"]: {
	id?: string | undefined | null | Variable<any, string>
};
	["BatchPayload"]: AliasType<{
	/** The number of nodes that have been affected by the Batch operation. */
	count?:boolean | `@${string}`,
		__typename?: boolean | `@${string}`
}>;
	/** Representing a color value comprising of HEX, RGBA and css color values */
["Color"]: AliasType<{
	hex?:boolean | `@${string}`,
	rgba?:ValueTypes["RGBA"],
	css?:boolean | `@${string}`,
		__typename?: boolean | `@${string}`
}>;
	/** Accepts either HEX or RGBA color value. At least one of hex or rgba value should be passed. If both are passed RGBA is used. */
["ColorInput"]: {
	hex?: ValueTypes["Hex"] | undefined | null | Variable<any, string>,
	rgba?: ValueTypes["RGBAInput"] | undefined | null | Variable<any, string>
};
	["Company"]: AliasType<{
	/** System stage field */
	stage?:boolean | `@${string}`,
	/** The unique identifier */
	id?:boolean | `@${string}`,
	companyName?:boolean | `@${string}`,
	companyWebsite?:boolean | `@${string}`,
		__typename?: boolean | `@${string}`
}>;
	["CompanyConnectInput"]: {
	/** Document to connect */
	where: ValueTypes["CompanyWhereUniqueInput"] | Variable<any, string>,
	/** Allow to specify document position in list of connected documents, will default to appending at end of list */
	position?: ValueTypes["ConnectPositionInput"] | undefined | null | Variable<any, string>
};
	/** A connection to a list of items. */
["CompanyConnection"]: AliasType<{
	/** Information to aid in pagination. */
	pageInfo?:ValueTypes["PageInfo"],
	/** A list of edges. */
	edges?:ValueTypes["CompanyEdge"],
	aggregate?:ValueTypes["Aggregate"],
		__typename?: boolean | `@${string}`
}>;
	["CompanyCreateInput"]: {
	companyName: string | Variable<any, string>,
	companyWebsite: string | Variable<any, string>
};
	["CompanyCreateManyInlineInput"]: {
	/** Create and connect multiple existing Company documents */
	create?: Array<ValueTypes["CompanyCreateInput"]> | undefined | null | Variable<any, string>
};
	["CompanyCreateOneInlineInput"]: {
	/** Create and connect one Company document */
	create?: ValueTypes["CompanyCreateInput"] | undefined | null | Variable<any, string>
};
	["CompanyCreateWithPositionInput"]: {
	/** Position in the list of existing component instances, will default to appending at the end of list */
	position?: ValueTypes["ConnectPositionInput"] | undefined | null | Variable<any, string>,
	/** Document to create */
	data: ValueTypes["CompanyCreateInput"] | Variable<any, string>
};
	/** An edge in a connection. */
["CompanyEdge"]: AliasType<{
	/** The item at the end of the edge. */
	node?:ValueTypes["Company"],
	/** A cursor for use in pagination. */
	cursor?:boolean | `@${string}`,
		__typename?: boolean | `@${string}`
}>;
	/** Identifies documents */
["CompanyManyWhereInput"]: {
	/** Contains search across all appropriate fields. */
	_search?: string | undefined | null | Variable<any, string>,
	/** Logical AND on all given filters. */
	AND?: Array<ValueTypes["CompanyWhereInput"]> | undefined | null | Variable<any, string>,
	/** Logical OR on all given filters. */
	OR?: Array<ValueTypes["CompanyWhereInput"]> | undefined | null | Variable<any, string>,
	/** Logical NOT on all given filters combined by AND. */
	NOT?: Array<ValueTypes["CompanyWhereInput"]> | undefined | null | Variable<any, string>,
	id?: string | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	id_not?: string | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	id_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	id_not_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values containing the given string. */
	id_contains?: string | undefined | null | Variable<any, string>,
	/** All values not containing the given string. */
	id_not_contains?: string | undefined | null | Variable<any, string>,
	/** All values starting with the given string. */
	id_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values not starting with the given string. */
	id_not_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values ending with the given string. */
	id_ends_with?: string | undefined | null | Variable<any, string>,
	/** All values not ending with the given string */
	id_not_ends_with?: string | undefined | null | Variable<any, string>,
	companyName?: string | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	companyName_not?: string | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	companyName_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	companyName_not_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values containing the given string. */
	companyName_contains?: string | undefined | null | Variable<any, string>,
	/** All values not containing the given string. */
	companyName_not_contains?: string | undefined | null | Variable<any, string>,
	/** All values starting with the given string. */
	companyName_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values not starting with the given string. */
	companyName_not_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values ending with the given string. */
	companyName_ends_with?: string | undefined | null | Variable<any, string>,
	/** All values not ending with the given string */
	companyName_not_ends_with?: string | undefined | null | Variable<any, string>,
	companyWebsite?: string | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	companyWebsite_not?: string | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	companyWebsite_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	companyWebsite_not_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values containing the given string. */
	companyWebsite_contains?: string | undefined | null | Variable<any, string>,
	/** All values not containing the given string. */
	companyWebsite_not_contains?: string | undefined | null | Variable<any, string>,
	/** All values starting with the given string. */
	companyWebsite_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values not starting with the given string. */
	companyWebsite_not_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values ending with the given string. */
	companyWebsite_ends_with?: string | undefined | null | Variable<any, string>,
	/** All values not ending with the given string */
	companyWebsite_not_ends_with?: string | undefined | null | Variable<any, string>
};
	["CompanyOrderByInput"]:CompanyOrderByInput;
	["CompanyParent"]: AliasType<{		["...on AboutMe"] : ValueTypes["AboutMe"]
		__typename?: boolean | `@${string}`
}>;
	["CompanyParentConnectInput"]: {
	AboutMe?: ValueTypes["AboutMeConnectInput"] | undefined | null | Variable<any, string>
};
	["CompanyParentCreateInput"]: {
	AboutMe?: ValueTypes["AboutMeCreateInput"] | undefined | null | Variable<any, string>
};
	["CompanyParentCreateManyInlineInput"]: {
	/** Create and connect multiple existing CompanyParent documents */
	create?: Array<ValueTypes["CompanyParentCreateInput"]> | undefined | null | Variable<any, string>,
	/** Connect multiple existing CompanyParent documents */
	connect?: Array<ValueTypes["CompanyParentWhereUniqueInput"]> | undefined | null | Variable<any, string>
};
	["CompanyParentCreateOneInlineInput"]: {
	/** Create and connect one CompanyParent document */
	create?: ValueTypes["CompanyParentCreateInput"] | undefined | null | Variable<any, string>,
	/** Connect one existing CompanyParent document */
	connect?: ValueTypes["CompanyParentWhereUniqueInput"] | undefined | null | Variable<any, string>
};
	["CompanyParentUpdateInput"]: {
	AboutMe?: ValueTypes["AboutMeUpdateInput"] | undefined | null | Variable<any, string>
};
	["CompanyParentUpdateManyInlineInput"]: {
	/** Create and connect multiple CompanyParent documents */
	create?: Array<ValueTypes["CompanyParentCreateInput"]> | undefined | null | Variable<any, string>,
	/** Connect multiple existing CompanyParent documents */
	connect?: Array<ValueTypes["CompanyParentConnectInput"]> | undefined | null | Variable<any, string>,
	/** Override currently-connected documents with multiple existing CompanyParent documents */
	set?: Array<ValueTypes["CompanyParentWhereUniqueInput"]> | undefined | null | Variable<any, string>,
	/** Update multiple CompanyParent documents */
	update?: Array<ValueTypes["CompanyParentUpdateWithNestedWhereUniqueInput"]> | undefined | null | Variable<any, string>,
	/** Upsert multiple CompanyParent documents */
	upsert?: Array<ValueTypes["CompanyParentUpsertWithNestedWhereUniqueInput"]> | undefined | null | Variable<any, string>,
	/** Disconnect multiple CompanyParent documents */
	disconnect?: Array<ValueTypes["CompanyParentWhereUniqueInput"]> | undefined | null | Variable<any, string>,
	/** Delete multiple CompanyParent documents */
	delete?: Array<ValueTypes["CompanyParentWhereUniqueInput"]> | undefined | null | Variable<any, string>
};
	["CompanyParentUpdateManyWithNestedWhereInput"]: {
	AboutMe?: ValueTypes["AboutMeUpdateManyWithNestedWhereInput"] | undefined | null | Variable<any, string>
};
	["CompanyParentUpdateOneInlineInput"]: {
	/** Create and connect one CompanyParent document */
	create?: ValueTypes["CompanyParentCreateInput"] | undefined | null | Variable<any, string>,
	/** Update single CompanyParent document */
	update?: ValueTypes["CompanyParentUpdateWithNestedWhereUniqueInput"] | undefined | null | Variable<any, string>,
	/** Upsert single CompanyParent document */
	upsert?: ValueTypes["CompanyParentUpsertWithNestedWhereUniqueInput"] | undefined | null | Variable<any, string>,
	/** Connect existing CompanyParent document */
	connect?: ValueTypes["CompanyParentWhereUniqueInput"] | undefined | null | Variable<any, string>,
	/** Disconnect currently connected CompanyParent document */
	disconnect?: boolean | undefined | null | Variable<any, string>,
	/** Delete currently connected CompanyParent document */
	delete?: boolean | undefined | null | Variable<any, string>
};
	["CompanyParentUpdateWithNestedWhereUniqueInput"]: {
	AboutMe?: ValueTypes["AboutMeUpdateWithNestedWhereUniqueInput"] | undefined | null | Variable<any, string>
};
	["CompanyParentUpsertWithNestedWhereUniqueInput"]: {
	AboutMe?: ValueTypes["AboutMeUpsertWithNestedWhereUniqueInput"] | undefined | null | Variable<any, string>
};
	["CompanyParentWhereInput"]: {
	AboutMe?: ValueTypes["AboutMeWhereInput"] | undefined | null | Variable<any, string>
};
	["CompanyParentWhereUniqueInput"]: {
	AboutMe?: ValueTypes["AboutMeWhereUniqueInput"] | undefined | null | Variable<any, string>
};
	["CompanyUpdateInput"]: {
	companyName?: string | undefined | null | Variable<any, string>,
	companyWebsite?: string | undefined | null | Variable<any, string>
};
	["CompanyUpdateManyInlineInput"]: {
	/** Create and connect multiple Company component instances */
	create?: Array<ValueTypes["CompanyCreateWithPositionInput"]> | undefined | null | Variable<any, string>,
	/** Update multiple Company component instances */
	update?: Array<ValueTypes["CompanyUpdateWithNestedWhereUniqueAndPositionInput"]> | undefined | null | Variable<any, string>,
	/** Upsert multiple Company component instances */
	upsert?: Array<ValueTypes["CompanyUpsertWithNestedWhereUniqueAndPositionInput"]> | undefined | null | Variable<any, string>,
	/** Delete multiple Company documents */
	delete?: Array<ValueTypes["CompanyWhereUniqueInput"]> | undefined | null | Variable<any, string>
};
	["CompanyUpdateManyInput"]: {
	companyName?: string | undefined | null | Variable<any, string>,
	companyWebsite?: string | undefined | null | Variable<any, string>
};
	["CompanyUpdateManyWithNestedWhereInput"]: {
	/** Document search */
	where: ValueTypes["CompanyWhereInput"] | Variable<any, string>,
	/** Update many input */
	data: ValueTypes["CompanyUpdateManyInput"] | Variable<any, string>
};
	["CompanyUpdateOneInlineInput"]: {
	/** Create and connect one Company document */
	create?: ValueTypes["CompanyCreateInput"] | undefined | null | Variable<any, string>,
	/** Update single Company document */
	update?: ValueTypes["CompanyUpdateWithNestedWhereUniqueInput"] | undefined | null | Variable<any, string>,
	/** Upsert single Company document */
	upsert?: ValueTypes["CompanyUpsertWithNestedWhereUniqueInput"] | undefined | null | Variable<any, string>,
	/** Delete currently connected Company document */
	delete?: boolean | undefined | null | Variable<any, string>
};
	["CompanyUpdateWithNestedWhereUniqueAndPositionInput"]: {
	/** Unique component instance search */
	where: ValueTypes["CompanyWhereUniqueInput"] | Variable<any, string>,
	/** Position in the list of existing component instances, will default to appending at the end of list */
	position?: ValueTypes["ConnectPositionInput"] | undefined | null | Variable<any, string>,
	/** Document to update */
	data?: ValueTypes["CompanyUpdateInput"] | undefined | null | Variable<any, string>
};
	["CompanyUpdateWithNestedWhereUniqueInput"]: {
	/** Unique document search */
	where: ValueTypes["CompanyWhereUniqueInput"] | Variable<any, string>,
	/** Document to update */
	data: ValueTypes["CompanyUpdateInput"] | Variable<any, string>
};
	["CompanyUpsertInput"]: {
	/** Create document if it didn't exist */
	create: ValueTypes["CompanyCreateInput"] | Variable<any, string>,
	/** Update document if it exists */
	update: ValueTypes["CompanyUpdateInput"] | Variable<any, string>
};
	["CompanyUpsertWithNestedWhereUniqueAndPositionInput"]: {
	/** Unique component instance search */
	where: ValueTypes["CompanyWhereUniqueInput"] | Variable<any, string>,
	/** Position in the list of existing component instances, will default to appending at the end of list */
	position?: ValueTypes["ConnectPositionInput"] | undefined | null | Variable<any, string>,
	/** Document to upsert */
	data?: ValueTypes["CompanyUpsertInput"] | undefined | null | Variable<any, string>
};
	["CompanyUpsertWithNestedWhereUniqueInput"]: {
	/** Unique document search */
	where: ValueTypes["CompanyWhereUniqueInput"] | Variable<any, string>,
	/** Upsert data */
	data: ValueTypes["CompanyUpsertInput"] | Variable<any, string>
};
	/** Identifies documents */
["CompanyWhereInput"]: {
	/** Contains search across all appropriate fields. */
	_search?: string | undefined | null | Variable<any, string>,
	/** Logical AND on all given filters. */
	AND?: Array<ValueTypes["CompanyWhereInput"]> | undefined | null | Variable<any, string>,
	/** Logical OR on all given filters. */
	OR?: Array<ValueTypes["CompanyWhereInput"]> | undefined | null | Variable<any, string>,
	/** Logical NOT on all given filters combined by AND. */
	NOT?: Array<ValueTypes["CompanyWhereInput"]> | undefined | null | Variable<any, string>,
	id?: string | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	id_not?: string | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	id_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	id_not_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values containing the given string. */
	id_contains?: string | undefined | null | Variable<any, string>,
	/** All values not containing the given string. */
	id_not_contains?: string | undefined | null | Variable<any, string>,
	/** All values starting with the given string. */
	id_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values not starting with the given string. */
	id_not_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values ending with the given string. */
	id_ends_with?: string | undefined | null | Variable<any, string>,
	/** All values not ending with the given string */
	id_not_ends_with?: string | undefined | null | Variable<any, string>,
	companyName?: string | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	companyName_not?: string | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	companyName_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	companyName_not_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values containing the given string. */
	companyName_contains?: string | undefined | null | Variable<any, string>,
	/** All values not containing the given string. */
	companyName_not_contains?: string | undefined | null | Variable<any, string>,
	/** All values starting with the given string. */
	companyName_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values not starting with the given string. */
	companyName_not_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values ending with the given string. */
	companyName_ends_with?: string | undefined | null | Variable<any, string>,
	/** All values not ending with the given string */
	companyName_not_ends_with?: string | undefined | null | Variable<any, string>,
	companyWebsite?: string | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	companyWebsite_not?: string | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	companyWebsite_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	companyWebsite_not_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values containing the given string. */
	companyWebsite_contains?: string | undefined | null | Variable<any, string>,
	/** All values not containing the given string. */
	companyWebsite_not_contains?: string | undefined | null | Variable<any, string>,
	/** All values starting with the given string. */
	companyWebsite_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values not starting with the given string. */
	companyWebsite_not_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values ending with the given string. */
	companyWebsite_ends_with?: string | undefined | null | Variable<any, string>,
	/** All values not ending with the given string */
	companyWebsite_not_ends_with?: string | undefined | null | Variable<any, string>
};
	/** References Company record uniquely */
["CompanyWhereUniqueInput"]: {
	id?: string | undefined | null | Variable<any, string>
};
	["ConnectPositionInput"]: {
	/** Connect document after specified document */
	after?: string | undefined | null | Variable<any, string>,
	/** Connect document before specified document */
	before?: string | undefined | null | Variable<any, string>,
	/** Connect document at first position */
	start?: boolean | undefined | null | Variable<any, string>,
	/** Connect document at last position */
	end?: boolean | undefined | null | Variable<any, string>
};
	/** A date string, such as 2007-12-03 (YYYY-MM-DD), compliant with ISO 8601 standard for representation of dates using the Gregorian calendar. */
["Date"]:unknown;
	/** A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the date-timeformat outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representationof dates and times using the Gregorian calendar. */
["DateTime"]:unknown;
	["DocumentFileTypes"]:DocumentFileTypes;
	["DocumentOutputInput"]: {
	/** Transforms a document into a desired file type.
See this matrix for format support:

PDF:	jpg, odp, ods, odt, png, svg, txt, and webp
DOC:	docx, html, jpg, odt, pdf, png, svg, txt, and webp
DOCX:	doc, html, jpg, odt, pdf, png, svg, txt, and webp
ODT:	doc, docx, html, jpg, pdf, png, svg, txt, and webp
XLS:	jpg, pdf, ods, png, svg, xlsx, and webp
XLSX:	jpg, pdf, ods, png, svg, xls, and webp
ODS:	jpg, pdf, png, xls, svg, xlsx, and webp
PPT:	jpg, odp, pdf, png, svg, pptx, and webp
PPTX:	jpg, odp, pdf, png, svg, ppt, and webp
ODP:	jpg, pdf, png, ppt, svg, pptx, and webp
BMP:	jpg, odp, ods, odt, pdf, png, svg, and webp
GIF:	jpg, odp, ods, odt, pdf, png, svg, and webp
JPG:	jpg, odp, ods, odt, pdf, png, svg, and webp
PNG:	jpg, odp, ods, odt, pdf, png, svg, and webp
WEBP:	jpg, odp, ods, odt, pdf, png, svg, and webp
TIFF:	jpg, odp, ods, odt, pdf, png, svg, and webp
AI:	    jpg, odp, ods, odt, pdf, png, svg, and webp
PSD:	jpg, odp, ods, odt, pdf, png, svg, and webp
SVG:	jpg, odp, ods, odt, pdf, png, and webp
HTML:	jpg, odt, pdf, svg, txt, and webp
TXT:	jpg, html, odt, pdf, svg, and webp */
	format?: ValueTypes["DocumentFileTypes"] | undefined | null | Variable<any, string>
};
	/** Transformations for Documents */
["DocumentTransformationInput"]: {
	/** Changes the output for the file. */
	output?: ValueTypes["DocumentOutputInput"] | undefined | null | Variable<any, string>
};
	["DocumentVersion"]: AliasType<{
	id?:boolean | `@${string}`,
	stage?:boolean | `@${string}`,
	revision?:boolean | `@${string}`,
	createdAt?:boolean | `@${string}`,
	data?:boolean | `@${string}`,
		__typename?: boolean | `@${string}`
}>;
	["Hex"]:unknown;
	["ImageFit"]:ImageFit;
	["ImageResizeInput"]: {
	/** The width in pixels to resize the image to. The value must be an integer from 1 to 10000. */
	width?: number | undefined | null | Variable<any, string>,
	/** The height in pixels to resize the image to. The value must be an integer from 1 to 10000. */
	height?: number | undefined | null | Variable<any, string>,
	/** The default value for the fit parameter is fit:clip. */
	fit?: ValueTypes["ImageFit"] | undefined | null | Variable<any, string>
};
	/** Transformations for Images */
["ImageTransformationInput"]: {
	/** Resizes the image */
	resize?: ValueTypes["ImageResizeInput"] | undefined | null | Variable<any, string>
};
	/** Raw JSON value */
["Json"]:unknown;
	["Link"]: AliasType<{
	/** System stage field */
	stage?:boolean | `@${string}`,
	/** The unique identifier */
	id?:boolean | `@${string}`,
	name?:boolean | `@${string}`,
	url?:boolean | `@${string}`,
icon?: [{	/** Allows to optionally override locale filtering behaviour in the query's subtree.

Note that `icon` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument will overwrite any existing locale filtering defined in the query's tree for the subtree. */
	locales?: Array<ValueTypes["Locale"]> | undefined | null | Variable<any, string>},ValueTypes["Asset"]],
		__typename?: boolean | `@${string}`
}>;
	["LinkConnectInput"]: {
	/** Document to connect */
	where: ValueTypes["LinkWhereUniqueInput"] | Variable<any, string>,
	/** Allow to specify document position in list of connected documents, will default to appending at end of list */
	position?: ValueTypes["ConnectPositionInput"] | undefined | null | Variable<any, string>
};
	/** A connection to a list of items. */
["LinkConnection"]: AliasType<{
	/** Information to aid in pagination. */
	pageInfo?:ValueTypes["PageInfo"],
	/** A list of edges. */
	edges?:ValueTypes["LinkEdge"],
	aggregate?:ValueTypes["Aggregate"],
		__typename?: boolean | `@${string}`
}>;
	["LinkCreateInput"]: {
	name: string | Variable<any, string>,
	url: string | Variable<any, string>,
	icon?: ValueTypes["AssetCreateOneInlineInput"] | undefined | null | Variable<any, string>
};
	["LinkCreateManyInlineInput"]: {
	/** Create and connect multiple existing Link documents */
	create?: Array<ValueTypes["LinkCreateInput"]> | undefined | null | Variable<any, string>
};
	["LinkCreateOneInlineInput"]: {
	/** Create and connect one Link document */
	create?: ValueTypes["LinkCreateInput"] | undefined | null | Variable<any, string>
};
	["LinkCreateWithPositionInput"]: {
	/** Position in the list of existing component instances, will default to appending at the end of list */
	position?: ValueTypes["ConnectPositionInput"] | undefined | null | Variable<any, string>,
	/** Document to create */
	data: ValueTypes["LinkCreateInput"] | Variable<any, string>
};
	/** An edge in a connection. */
["LinkEdge"]: AliasType<{
	/** The item at the end of the edge. */
	node?:ValueTypes["Link"],
	/** A cursor for use in pagination. */
	cursor?:boolean | `@${string}`,
		__typename?: boolean | `@${string}`
}>;
	/** Identifies documents */
["LinkManyWhereInput"]: {
	/** Contains search across all appropriate fields. */
	_search?: string | undefined | null | Variable<any, string>,
	/** Logical AND on all given filters. */
	AND?: Array<ValueTypes["LinkWhereInput"]> | undefined | null | Variable<any, string>,
	/** Logical OR on all given filters. */
	OR?: Array<ValueTypes["LinkWhereInput"]> | undefined | null | Variable<any, string>,
	/** Logical NOT on all given filters combined by AND. */
	NOT?: Array<ValueTypes["LinkWhereInput"]> | undefined | null | Variable<any, string>,
	id?: string | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	id_not?: string | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	id_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	id_not_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values containing the given string. */
	id_contains?: string | undefined | null | Variable<any, string>,
	/** All values not containing the given string. */
	id_not_contains?: string | undefined | null | Variable<any, string>,
	/** All values starting with the given string. */
	id_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values not starting with the given string. */
	id_not_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values ending with the given string. */
	id_ends_with?: string | undefined | null | Variable<any, string>,
	/** All values not ending with the given string */
	id_not_ends_with?: string | undefined | null | Variable<any, string>,
	name?: string | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	name_not?: string | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	name_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	name_not_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values containing the given string. */
	name_contains?: string | undefined | null | Variable<any, string>,
	/** All values not containing the given string. */
	name_not_contains?: string | undefined | null | Variable<any, string>,
	/** All values starting with the given string. */
	name_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values not starting with the given string. */
	name_not_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values ending with the given string. */
	name_ends_with?: string | undefined | null | Variable<any, string>,
	/** All values not ending with the given string */
	name_not_ends_with?: string | undefined | null | Variable<any, string>,
	url?: string | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	url_not?: string | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	url_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	url_not_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values containing the given string. */
	url_contains?: string | undefined | null | Variable<any, string>,
	/** All values not containing the given string. */
	url_not_contains?: string | undefined | null | Variable<any, string>,
	/** All values starting with the given string. */
	url_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values not starting with the given string. */
	url_not_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values ending with the given string. */
	url_ends_with?: string | undefined | null | Variable<any, string>,
	/** All values not ending with the given string */
	url_not_ends_with?: string | undefined | null | Variable<any, string>,
	icon?: ValueTypes["AssetWhereInput"] | undefined | null | Variable<any, string>
};
	["LinkOrderByInput"]:LinkOrderByInput;
	["LinkParent"]: AliasType<{		["...on AboutMe"] : ValueTypes["AboutMe"]
		__typename?: boolean | `@${string}`
}>;
	["LinkParentConnectInput"]: {
	AboutMe?: ValueTypes["AboutMeConnectInput"] | undefined | null | Variable<any, string>
};
	["LinkParentCreateInput"]: {
	AboutMe?: ValueTypes["AboutMeCreateInput"] | undefined | null | Variable<any, string>
};
	["LinkParentCreateManyInlineInput"]: {
	/** Create and connect multiple existing LinkParent documents */
	create?: Array<ValueTypes["LinkParentCreateInput"]> | undefined | null | Variable<any, string>,
	/** Connect multiple existing LinkParent documents */
	connect?: Array<ValueTypes["LinkParentWhereUniqueInput"]> | undefined | null | Variable<any, string>
};
	["LinkParentCreateOneInlineInput"]: {
	/** Create and connect one LinkParent document */
	create?: ValueTypes["LinkParentCreateInput"] | undefined | null | Variable<any, string>,
	/** Connect one existing LinkParent document */
	connect?: ValueTypes["LinkParentWhereUniqueInput"] | undefined | null | Variable<any, string>
};
	["LinkParentUpdateInput"]: {
	AboutMe?: ValueTypes["AboutMeUpdateInput"] | undefined | null | Variable<any, string>
};
	["LinkParentUpdateManyInlineInput"]: {
	/** Create and connect multiple LinkParent documents */
	create?: Array<ValueTypes["LinkParentCreateInput"]> | undefined | null | Variable<any, string>,
	/** Connect multiple existing LinkParent documents */
	connect?: Array<ValueTypes["LinkParentConnectInput"]> | undefined | null | Variable<any, string>,
	/** Override currently-connected documents with multiple existing LinkParent documents */
	set?: Array<ValueTypes["LinkParentWhereUniqueInput"]> | undefined | null | Variable<any, string>,
	/** Update multiple LinkParent documents */
	update?: Array<ValueTypes["LinkParentUpdateWithNestedWhereUniqueInput"]> | undefined | null | Variable<any, string>,
	/** Upsert multiple LinkParent documents */
	upsert?: Array<ValueTypes["LinkParentUpsertWithNestedWhereUniqueInput"]> | undefined | null | Variable<any, string>,
	/** Disconnect multiple LinkParent documents */
	disconnect?: Array<ValueTypes["LinkParentWhereUniqueInput"]> | undefined | null | Variable<any, string>,
	/** Delete multiple LinkParent documents */
	delete?: Array<ValueTypes["LinkParentWhereUniqueInput"]> | undefined | null | Variable<any, string>
};
	["LinkParentUpdateManyWithNestedWhereInput"]: {
	AboutMe?: ValueTypes["AboutMeUpdateManyWithNestedWhereInput"] | undefined | null | Variable<any, string>
};
	["LinkParentUpdateOneInlineInput"]: {
	/** Create and connect one LinkParent document */
	create?: ValueTypes["LinkParentCreateInput"] | undefined | null | Variable<any, string>,
	/** Update single LinkParent document */
	update?: ValueTypes["LinkParentUpdateWithNestedWhereUniqueInput"] | undefined | null | Variable<any, string>,
	/** Upsert single LinkParent document */
	upsert?: ValueTypes["LinkParentUpsertWithNestedWhereUniqueInput"] | undefined | null | Variable<any, string>,
	/** Connect existing LinkParent document */
	connect?: ValueTypes["LinkParentWhereUniqueInput"] | undefined | null | Variable<any, string>,
	/** Disconnect currently connected LinkParent document */
	disconnect?: boolean | undefined | null | Variable<any, string>,
	/** Delete currently connected LinkParent document */
	delete?: boolean | undefined | null | Variable<any, string>
};
	["LinkParentUpdateWithNestedWhereUniqueInput"]: {
	AboutMe?: ValueTypes["AboutMeUpdateWithNestedWhereUniqueInput"] | undefined | null | Variable<any, string>
};
	["LinkParentUpsertWithNestedWhereUniqueInput"]: {
	AboutMe?: ValueTypes["AboutMeUpsertWithNestedWhereUniqueInput"] | undefined | null | Variable<any, string>
};
	["LinkParentWhereInput"]: {
	AboutMe?: ValueTypes["AboutMeWhereInput"] | undefined | null | Variable<any, string>
};
	["LinkParentWhereUniqueInput"]: {
	AboutMe?: ValueTypes["AboutMeWhereUniqueInput"] | undefined | null | Variable<any, string>
};
	["LinkUpdateInput"]: {
	name?: string | undefined | null | Variable<any, string>,
	url?: string | undefined | null | Variable<any, string>,
	icon?: ValueTypes["AssetUpdateOneInlineInput"] | undefined | null | Variable<any, string>
};
	["LinkUpdateManyInlineInput"]: {
	/** Create and connect multiple Link component instances */
	create?: Array<ValueTypes["LinkCreateWithPositionInput"]> | undefined | null | Variable<any, string>,
	/** Update multiple Link component instances */
	update?: Array<ValueTypes["LinkUpdateWithNestedWhereUniqueAndPositionInput"]> | undefined | null | Variable<any, string>,
	/** Upsert multiple Link component instances */
	upsert?: Array<ValueTypes["LinkUpsertWithNestedWhereUniqueAndPositionInput"]> | undefined | null | Variable<any, string>,
	/** Delete multiple Link documents */
	delete?: Array<ValueTypes["LinkWhereUniqueInput"]> | undefined | null | Variable<any, string>
};
	["LinkUpdateManyInput"]: {
	url?: string | undefined | null | Variable<any, string>
};
	["LinkUpdateManyWithNestedWhereInput"]: {
	/** Document search */
	where: ValueTypes["LinkWhereInput"] | Variable<any, string>,
	/** Update many input */
	data: ValueTypes["LinkUpdateManyInput"] | Variable<any, string>
};
	["LinkUpdateOneInlineInput"]: {
	/** Create and connect one Link document */
	create?: ValueTypes["LinkCreateInput"] | undefined | null | Variable<any, string>,
	/** Update single Link document */
	update?: ValueTypes["LinkUpdateWithNestedWhereUniqueInput"] | undefined | null | Variable<any, string>,
	/** Upsert single Link document */
	upsert?: ValueTypes["LinkUpsertWithNestedWhereUniqueInput"] | undefined | null | Variable<any, string>,
	/** Delete currently connected Link document */
	delete?: boolean | undefined | null | Variable<any, string>
};
	["LinkUpdateWithNestedWhereUniqueAndPositionInput"]: {
	/** Unique component instance search */
	where: ValueTypes["LinkWhereUniqueInput"] | Variable<any, string>,
	/** Position in the list of existing component instances, will default to appending at the end of list */
	position?: ValueTypes["ConnectPositionInput"] | undefined | null | Variable<any, string>,
	/** Document to update */
	data?: ValueTypes["LinkUpdateInput"] | undefined | null | Variable<any, string>
};
	["LinkUpdateWithNestedWhereUniqueInput"]: {
	/** Unique document search */
	where: ValueTypes["LinkWhereUniqueInput"] | Variable<any, string>,
	/** Document to update */
	data: ValueTypes["LinkUpdateInput"] | Variable<any, string>
};
	["LinkUpsertInput"]: {
	/** Create document if it didn't exist */
	create: ValueTypes["LinkCreateInput"] | Variable<any, string>,
	/** Update document if it exists */
	update: ValueTypes["LinkUpdateInput"] | Variable<any, string>
};
	["LinkUpsertWithNestedWhereUniqueAndPositionInput"]: {
	/** Unique component instance search */
	where: ValueTypes["LinkWhereUniqueInput"] | Variable<any, string>,
	/** Position in the list of existing component instances, will default to appending at the end of list */
	position?: ValueTypes["ConnectPositionInput"] | undefined | null | Variable<any, string>,
	/** Document to upsert */
	data?: ValueTypes["LinkUpsertInput"] | undefined | null | Variable<any, string>
};
	["LinkUpsertWithNestedWhereUniqueInput"]: {
	/** Unique document search */
	where: ValueTypes["LinkWhereUniqueInput"] | Variable<any, string>,
	/** Upsert data */
	data: ValueTypes["LinkUpsertInput"] | Variable<any, string>
};
	/** Identifies documents */
["LinkWhereInput"]: {
	/** Contains search across all appropriate fields. */
	_search?: string | undefined | null | Variable<any, string>,
	/** Logical AND on all given filters. */
	AND?: Array<ValueTypes["LinkWhereInput"]> | undefined | null | Variable<any, string>,
	/** Logical OR on all given filters. */
	OR?: Array<ValueTypes["LinkWhereInput"]> | undefined | null | Variable<any, string>,
	/** Logical NOT on all given filters combined by AND. */
	NOT?: Array<ValueTypes["LinkWhereInput"]> | undefined | null | Variable<any, string>,
	id?: string | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	id_not?: string | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	id_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	id_not_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values containing the given string. */
	id_contains?: string | undefined | null | Variable<any, string>,
	/** All values not containing the given string. */
	id_not_contains?: string | undefined | null | Variable<any, string>,
	/** All values starting with the given string. */
	id_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values not starting with the given string. */
	id_not_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values ending with the given string. */
	id_ends_with?: string | undefined | null | Variable<any, string>,
	/** All values not ending with the given string */
	id_not_ends_with?: string | undefined | null | Variable<any, string>,
	name?: string | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	name_not?: string | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	name_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	name_not_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values containing the given string. */
	name_contains?: string | undefined | null | Variable<any, string>,
	/** All values not containing the given string. */
	name_not_contains?: string | undefined | null | Variable<any, string>,
	/** All values starting with the given string. */
	name_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values not starting with the given string. */
	name_not_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values ending with the given string. */
	name_ends_with?: string | undefined | null | Variable<any, string>,
	/** All values not ending with the given string */
	name_not_ends_with?: string | undefined | null | Variable<any, string>,
	url?: string | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	url_not?: string | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	url_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	url_not_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values containing the given string. */
	url_contains?: string | undefined | null | Variable<any, string>,
	/** All values not containing the given string. */
	url_not_contains?: string | undefined | null | Variable<any, string>,
	/** All values starting with the given string. */
	url_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values not starting with the given string. */
	url_not_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values ending with the given string. */
	url_ends_with?: string | undefined | null | Variable<any, string>,
	/** All values not ending with the given string */
	url_not_ends_with?: string | undefined | null | Variable<any, string>,
	icon?: ValueTypes["AssetWhereInput"] | undefined | null | Variable<any, string>
};
	/** References Link record uniquely */
["LinkWhereUniqueInput"]: {
	id?: string | undefined | null | Variable<any, string>,
	name?: string | undefined | null | Variable<any, string>
};
	/** Locale system enumeration */
["Locale"]:Locale;
	/** Representing a geolocation point with latitude and longitude */
["Location"]: AliasType<{
	latitude?:boolean | `@${string}`,
	longitude?:boolean | `@${string}`,
distance?: [{	from: ValueTypes["LocationInput"] | Variable<any, string>},boolean | `@${string}`],
		__typename?: boolean | `@${string}`
}>;
	/** Input for a geolocation point with latitude and longitude */
["LocationInput"]: {
	latitude: number | Variable<any, string>,
	longitude: number | Variable<any, string>
};
	/** The Long scalar type represents non-fractional signed whole numeric values. Long can represent values between -(2^63) and 2^63 - 1. */
["Long"]:unknown;
	["Mutation"]: AliasType<{
createAsset?: [{	data: ValueTypes["AssetCreateInput"] | Variable<any, string>},ValueTypes["Asset"]],
updateAsset?: [{	where: ValueTypes["AssetWhereUniqueInput"] | Variable<any, string>,	data: ValueTypes["AssetUpdateInput"] | Variable<any, string>},ValueTypes["Asset"]],
deleteAsset?: [{	/** Document to delete */
	where: ValueTypes["AssetWhereUniqueInput"] | Variable<any, string>},ValueTypes["Asset"]],
upsertAsset?: [{	where: ValueTypes["AssetWhereUniqueInput"] | Variable<any, string>,	upsert: ValueTypes["AssetUpsertInput"] | Variable<any, string>},ValueTypes["Asset"]],
publishAsset?: [{	/** Document to publish */
	where: ValueTypes["AssetWhereUniqueInput"] | Variable<any, string>,	/** Optional localizations to publish */
	locales?: Array<ValueTypes["Locale"]> | undefined | null | Variable<any, string>,	/** Whether to publish the base document */
	publishBase?: boolean | undefined | null | Variable<any, string>,	/** Whether to include the default locale when publishBase is set */
	withDefaultLocale?: boolean | undefined | null | Variable<any, string>,	/** Publishing target stage */
	to: Array<ValueTypes["Stage"]> | Variable<any, string>},ValueTypes["Asset"]],
unpublishAsset?: [{	/** Document to unpublish */
	where: ValueTypes["AssetWhereUniqueInput"] | Variable<any, string>,	/** Stages to unpublish document from */
	from: Array<ValueTypes["Stage"]> | Variable<any, string>,	/** Optional locales to unpublish. Unpublishing the default locale will completely remove the document from the selected stages */
	locales?: Array<ValueTypes["Locale"]> | undefined | null | Variable<any, string>,	/** Unpublish complete document including default localization and relations from stages. Can be disabled. */
	unpublishBase?: boolean | undefined | null | Variable<any, string>},ValueTypes["Asset"]],
updateManyAssetsConnection?: [{	/** Documents to apply update on */
	where?: ValueTypes["AssetManyWhereInput"] | undefined | null | Variable<any, string>,	/** Updates to document content */
	data: ValueTypes["AssetUpdateManyInput"] | Variable<any, string>,	skip?: number | undefined | null | Variable<any, string>,	first?: number | undefined | null | Variable<any, string>,	last?: number | undefined | null | Variable<any, string>,	before?: string | undefined | null | Variable<any, string>,	after?: string | undefined | null | Variable<any, string>},ValueTypes["AssetConnection"]],
deleteManyAssetsConnection?: [{	/** Documents to delete */
	where?: ValueTypes["AssetManyWhereInput"] | undefined | null | Variable<any, string>,	skip?: number | undefined | null | Variable<any, string>,	first?: number | undefined | null | Variable<any, string>,	last?: number | undefined | null | Variable<any, string>,	before?: string | undefined | null | Variable<any, string>,	after?: string | undefined | null | Variable<any, string>},ValueTypes["AssetConnection"]],
publishManyAssetsConnection?: [{	/** Identifies documents in each stage to be published */
	where?: ValueTypes["AssetManyWhereInput"] | undefined | null | Variable<any, string>,	/** Stage to find matching documents in */
	from?: ValueTypes["Stage"] | undefined | null | Variable<any, string>,	/** Stages to publish documents to */
	to: Array<ValueTypes["Stage"]> | Variable<any, string>,	skip?: number | undefined | null | Variable<any, string>,	first?: number | undefined | null | Variable<any, string>,	last?: number | undefined | null | Variable<any, string>,	before?: string | undefined | null | Variable<any, string>,	after?: string | undefined | null | Variable<any, string>,	/** Document localizations to publish */
	locales?: Array<ValueTypes["Locale"]> | undefined | null | Variable<any, string>,	/** Whether to publish the base document */
	publishBase?: boolean | undefined | null | Variable<any, string>,	/** Whether to include the default locale when publishBase is true */
	withDefaultLocale?: boolean | undefined | null | Variable<any, string>},ValueTypes["AssetConnection"]],
unpublishManyAssetsConnection?: [{	/** Identifies documents in draft stage */
	where?: ValueTypes["AssetManyWhereInput"] | undefined | null | Variable<any, string>,	/** Stage to find matching documents in */
	stage?: ValueTypes["Stage"] | undefined | null | Variable<any, string>,	/** Stages to unpublish documents from */
	from: Array<ValueTypes["Stage"]> | Variable<any, string>,	skip?: number | undefined | null | Variable<any, string>,	first?: number | undefined | null | Variable<any, string>,	last?: number | undefined | null | Variable<any, string>,	before?: string | undefined | null | Variable<any, string>,	after?: string | undefined | null | Variable<any, string>,	/** Locales to unpublish */
	locales?: Array<ValueTypes["Locale"]> | undefined | null | Variable<any, string>,	/** Whether to unpublish the base document and default localization */
	unpublishBase?: boolean | undefined | null | Variable<any, string>},ValueTypes["AssetConnection"]],
updateManyAssets?: [{	/** Documents to apply update on */
	where?: ValueTypes["AssetManyWhereInput"] | undefined | null | Variable<any, string>,	/** Updates to document content */
	data: ValueTypes["AssetUpdateManyInput"] | Variable<any, string>},ValueTypes["BatchPayload"]],
deleteManyAssets?: [{	/** Documents to delete */
	where?: ValueTypes["AssetManyWhereInput"] | undefined | null | Variable<any, string>},ValueTypes["BatchPayload"]],
publishManyAssets?: [{	/** Identifies documents in each stage to be published */
	where?: ValueTypes["AssetManyWhereInput"] | undefined | null | Variable<any, string>,	/** Stages to publish documents to */
	to: Array<ValueTypes["Stage"]> | Variable<any, string>,	/** Document localizations to publish */
	locales?: Array<ValueTypes["Locale"]> | undefined | null | Variable<any, string>,	/** Whether to publish the base document */
	publishBase?: boolean | undefined | null | Variable<any, string>,	/** Whether to include the default locale when publishBase is true */
	withDefaultLocale?: boolean | undefined | null | Variable<any, string>},ValueTypes["BatchPayload"]],
unpublishManyAssets?: [{	/** Identifies documents in each stage */
	where?: ValueTypes["AssetManyWhereInput"] | undefined | null | Variable<any, string>,	/** Stages to unpublish documents from */
	from: Array<ValueTypes["Stage"]> | Variable<any, string>,	/** Locales to unpublish */
	locales?: Array<ValueTypes["Locale"]> | undefined | null | Variable<any, string>,	/** Whether to unpublish the base document and default localization */
	unpublishBase?: boolean | undefined | null | Variable<any, string>},ValueTypes["BatchPayload"]],
schedulePublishAsset?: [{	/** Document to publish */
	where: ValueTypes["AssetWhereUniqueInput"] | Variable<any, string>,	/** Optional localizations to publish */
	locales?: Array<ValueTypes["Locale"]> | undefined | null | Variable<any, string>,	/** Whether to publish the base document */
	publishBase?: boolean | undefined | null | Variable<any, string>,	/** Whether to include the default locale when publishBase is set */
	withDefaultLocale?: boolean | undefined | null | Variable<any, string>,	/** Publishing target stage */
	to: Array<ValueTypes["Stage"]> | Variable<any, string>,	/** Release at point in time, will create new release containing this operation */
	releaseAt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,	/** Optionally attach this scheduled operation to an existing release */
	releaseId?: string | undefined | null | Variable<any, string>},ValueTypes["Asset"]],
scheduleUnpublishAsset?: [{	/** Document to unpublish */
	where: ValueTypes["AssetWhereUniqueInput"] | Variable<any, string>,	/** Stages to unpublish document from */
	from: Array<ValueTypes["Stage"]> | Variable<any, string>,	/** Release at point in time, will create new release containing this operation */
	releaseAt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,	/** Optionally attach this scheduled operation to an existing release */
	releaseId?: string | undefined | null | Variable<any, string>,	/** Optional locales to unpublish. Unpublishing the default locale will completely remove the document from the selected stages */
	locales?: Array<ValueTypes["Locale"]> | undefined | null | Variable<any, string>,	/** Unpublish complete document including default localization and relations from stages. Can be disabled. */
	unpublishBase?: boolean | undefined | null | Variable<any, string>},ValueTypes["Asset"]],
deleteScheduledOperation?: [{	/** Document to delete */
	where: ValueTypes["ScheduledOperationWhereUniqueInput"] | Variable<any, string>},ValueTypes["ScheduledOperation"]],
createScheduledRelease?: [{	data: ValueTypes["ScheduledReleaseCreateInput"] | Variable<any, string>},ValueTypes["ScheduledRelease"]],
updateScheduledRelease?: [{	where: ValueTypes["ScheduledReleaseWhereUniqueInput"] | Variable<any, string>,	data: ValueTypes["ScheduledReleaseUpdateInput"] | Variable<any, string>},ValueTypes["ScheduledRelease"]],
deleteScheduledRelease?: [{	/** Document to delete */
	where: ValueTypes["ScheduledReleaseWhereUniqueInput"] | Variable<any, string>},ValueTypes["ScheduledRelease"]],
createProject?: [{	data: ValueTypes["ProjectCreateInput"] | Variable<any, string>},ValueTypes["Project"]],
updateProject?: [{	where: ValueTypes["ProjectWhereUniqueInput"] | Variable<any, string>,	data: ValueTypes["ProjectUpdateInput"] | Variable<any, string>},ValueTypes["Project"]],
deleteProject?: [{	/** Document to delete */
	where: ValueTypes["ProjectWhereUniqueInput"] | Variable<any, string>},ValueTypes["Project"]],
upsertProject?: [{	where: ValueTypes["ProjectWhereUniqueInput"] | Variable<any, string>,	upsert: ValueTypes["ProjectUpsertInput"] | Variable<any, string>},ValueTypes["Project"]],
publishProject?: [{	/** Document to publish */
	where: ValueTypes["ProjectWhereUniqueInput"] | Variable<any, string>,	/** Publishing target stage */
	to: Array<ValueTypes["Stage"]> | Variable<any, string>},ValueTypes["Project"]],
unpublishProject?: [{	/** Document to unpublish */
	where: ValueTypes["ProjectWhereUniqueInput"] | Variable<any, string>,	/** Stages to unpublish document from */
	from: Array<ValueTypes["Stage"]> | Variable<any, string>},ValueTypes["Project"]],
updateManyProjectsConnection?: [{	/** Documents to apply update on */
	where?: ValueTypes["ProjectManyWhereInput"] | undefined | null | Variable<any, string>,	/** Updates to document content */
	data: ValueTypes["ProjectUpdateManyInput"] | Variable<any, string>,	skip?: number | undefined | null | Variable<any, string>,	first?: number | undefined | null | Variable<any, string>,	last?: number | undefined | null | Variable<any, string>,	before?: string | undefined | null | Variable<any, string>,	after?: string | undefined | null | Variable<any, string>},ValueTypes["ProjectConnection"]],
deleteManyProjectsConnection?: [{	/** Documents to delete */
	where?: ValueTypes["ProjectManyWhereInput"] | undefined | null | Variable<any, string>,	skip?: number | undefined | null | Variable<any, string>,	first?: number | undefined | null | Variable<any, string>,	last?: number | undefined | null | Variable<any, string>,	before?: string | undefined | null | Variable<any, string>,	after?: string | undefined | null | Variable<any, string>},ValueTypes["ProjectConnection"]],
publishManyProjectsConnection?: [{	/** Identifies documents in each stage to be published */
	where?: ValueTypes["ProjectManyWhereInput"] | undefined | null | Variable<any, string>,	/** Stage to find matching documents in */
	from?: ValueTypes["Stage"] | undefined | null | Variable<any, string>,	/** Stages to publish documents to */
	to: Array<ValueTypes["Stage"]> | Variable<any, string>,	skip?: number | undefined | null | Variable<any, string>,	first?: number | undefined | null | Variable<any, string>,	last?: number | undefined | null | Variable<any, string>,	before?: string | undefined | null | Variable<any, string>,	after?: string | undefined | null | Variable<any, string>},ValueTypes["ProjectConnection"]],
unpublishManyProjectsConnection?: [{	/** Identifies documents in draft stage */
	where?: ValueTypes["ProjectManyWhereInput"] | undefined | null | Variable<any, string>,	/** Stage to find matching documents in */
	stage?: ValueTypes["Stage"] | undefined | null | Variable<any, string>,	/** Stages to unpublish documents from */
	from: Array<ValueTypes["Stage"]> | Variable<any, string>,	skip?: number | undefined | null | Variable<any, string>,	first?: number | undefined | null | Variable<any, string>,	last?: number | undefined | null | Variable<any, string>,	before?: string | undefined | null | Variable<any, string>,	after?: string | undefined | null | Variable<any, string>},ValueTypes["ProjectConnection"]],
updateManyProjects?: [{	/** Documents to apply update on */
	where?: ValueTypes["ProjectManyWhereInput"] | undefined | null | Variable<any, string>,	/** Updates to document content */
	data: ValueTypes["ProjectUpdateManyInput"] | Variable<any, string>},ValueTypes["BatchPayload"]],
deleteManyProjects?: [{	/** Documents to delete */
	where?: ValueTypes["ProjectManyWhereInput"] | undefined | null | Variable<any, string>},ValueTypes["BatchPayload"]],
publishManyProjects?: [{	/** Identifies documents in each stage to be published */
	where?: ValueTypes["ProjectManyWhereInput"] | undefined | null | Variable<any, string>,	/** Stages to publish documents to */
	to: Array<ValueTypes["Stage"]> | Variable<any, string>},ValueTypes["BatchPayload"]],
unpublishManyProjects?: [{	/** Identifies documents in each stage */
	where?: ValueTypes["ProjectManyWhereInput"] | undefined | null | Variable<any, string>,	/** Stages to unpublish documents from */
	from: Array<ValueTypes["Stage"]> | Variable<any, string>},ValueTypes["BatchPayload"]],
schedulePublishProject?: [{	/** Document to publish */
	where: ValueTypes["ProjectWhereUniqueInput"] | Variable<any, string>,	/** Publishing target stage */
	to: Array<ValueTypes["Stage"]> | Variable<any, string>,	/** Release at point in time, will create new release containing this operation */
	releaseAt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,	/** Optionally attach this scheduled operation to an existing release */
	releaseId?: string | undefined | null | Variable<any, string>},ValueTypes["Project"]],
scheduleUnpublishProject?: [{	/** Document to unpublish */
	where: ValueTypes["ProjectWhereUniqueInput"] | Variable<any, string>,	/** Stages to unpublish document from */
	from: Array<ValueTypes["Stage"]> | Variable<any, string>,	/** Release at point in time, will create new release containing this operation */
	releaseAt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,	/** Optionally attach this scheduled operation to an existing release */
	releaseId?: string | undefined | null | Variable<any, string>},ValueTypes["Project"]],
createSeo?: [{	data: ValueTypes["SeoCreateInput"] | Variable<any, string>},ValueTypes["Seo"]],
updateSeo?: [{	where: ValueTypes["SeoWhereUniqueInput"] | Variable<any, string>,	data: ValueTypes["SeoUpdateInput"] | Variable<any, string>},ValueTypes["Seo"]],
deleteSeo?: [{	/** Document to delete */
	where: ValueTypes["SeoWhereUniqueInput"] | Variable<any, string>},ValueTypes["Seo"]],
upsertSeo?: [{	where: ValueTypes["SeoWhereUniqueInput"] | Variable<any, string>,	upsert: ValueTypes["SeoUpsertInput"] | Variable<any, string>},ValueTypes["Seo"]],
publishSeo?: [{	/** Document to publish */
	where: ValueTypes["SeoWhereUniqueInput"] | Variable<any, string>,	/** Publishing target stage */
	to: Array<ValueTypes["Stage"]> | Variable<any, string>},ValueTypes["Seo"]],
unpublishSeo?: [{	/** Document to unpublish */
	where: ValueTypes["SeoWhereUniqueInput"] | Variable<any, string>,	/** Stages to unpublish document from */
	from: Array<ValueTypes["Stage"]> | Variable<any, string>},ValueTypes["Seo"]],
updateManySeosConnection?: [{	/** Documents to apply update on */
	where?: ValueTypes["SeoManyWhereInput"] | undefined | null | Variable<any, string>,	/** Updates to document content */
	data: ValueTypes["SeoUpdateManyInput"] | Variable<any, string>,	skip?: number | undefined | null | Variable<any, string>,	first?: number | undefined | null | Variable<any, string>,	last?: number | undefined | null | Variable<any, string>,	before?: string | undefined | null | Variable<any, string>,	after?: string | undefined | null | Variable<any, string>},ValueTypes["SeoConnection"]],
deleteManySeosConnection?: [{	/** Documents to delete */
	where?: ValueTypes["SeoManyWhereInput"] | undefined | null | Variable<any, string>,	skip?: number | undefined | null | Variable<any, string>,	first?: number | undefined | null | Variable<any, string>,	last?: number | undefined | null | Variable<any, string>,	before?: string | undefined | null | Variable<any, string>,	after?: string | undefined | null | Variable<any, string>},ValueTypes["SeoConnection"]],
publishManySeosConnection?: [{	/** Identifies documents in each stage to be published */
	where?: ValueTypes["SeoManyWhereInput"] | undefined | null | Variable<any, string>,	/** Stage to find matching documents in */
	from?: ValueTypes["Stage"] | undefined | null | Variable<any, string>,	/** Stages to publish documents to */
	to: Array<ValueTypes["Stage"]> | Variable<any, string>,	skip?: number | undefined | null | Variable<any, string>,	first?: number | undefined | null | Variable<any, string>,	last?: number | undefined | null | Variable<any, string>,	before?: string | undefined | null | Variable<any, string>,	after?: string | undefined | null | Variable<any, string>},ValueTypes["SeoConnection"]],
unpublishManySeosConnection?: [{	/** Identifies documents in draft stage */
	where?: ValueTypes["SeoManyWhereInput"] | undefined | null | Variable<any, string>,	/** Stage to find matching documents in */
	stage?: ValueTypes["Stage"] | undefined | null | Variable<any, string>,	/** Stages to unpublish documents from */
	from: Array<ValueTypes["Stage"]> | Variable<any, string>,	skip?: number | undefined | null | Variable<any, string>,	first?: number | undefined | null | Variable<any, string>,	last?: number | undefined | null | Variable<any, string>,	before?: string | undefined | null | Variable<any, string>,	after?: string | undefined | null | Variable<any, string>},ValueTypes["SeoConnection"]],
updateManySeos?: [{	/** Documents to apply update on */
	where?: ValueTypes["SeoManyWhereInput"] | undefined | null | Variable<any, string>,	/** Updates to document content */
	data: ValueTypes["SeoUpdateManyInput"] | Variable<any, string>},ValueTypes["BatchPayload"]],
deleteManySeos?: [{	/** Documents to delete */
	where?: ValueTypes["SeoManyWhereInput"] | undefined | null | Variable<any, string>},ValueTypes["BatchPayload"]],
publishManySeos?: [{	/** Identifies documents in each stage to be published */
	where?: ValueTypes["SeoManyWhereInput"] | undefined | null | Variable<any, string>,	/** Stages to publish documents to */
	to: Array<ValueTypes["Stage"]> | Variable<any, string>},ValueTypes["BatchPayload"]],
unpublishManySeos?: [{	/** Identifies documents in each stage */
	where?: ValueTypes["SeoManyWhereInput"] | undefined | null | Variable<any, string>,	/** Stages to unpublish documents from */
	from: Array<ValueTypes["Stage"]> | Variable<any, string>},ValueTypes["BatchPayload"]],
schedulePublishSeo?: [{	/** Document to publish */
	where: ValueTypes["SeoWhereUniqueInput"] | Variable<any, string>,	/** Publishing target stage */
	to: Array<ValueTypes["Stage"]> | Variable<any, string>,	/** Release at point in time, will create new release containing this operation */
	releaseAt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,	/** Optionally attach this scheduled operation to an existing release */
	releaseId?: string | undefined | null | Variable<any, string>},ValueTypes["Seo"]],
scheduleUnpublishSeo?: [{	/** Document to unpublish */
	where: ValueTypes["SeoWhereUniqueInput"] | Variable<any, string>,	/** Stages to unpublish document from */
	from: Array<ValueTypes["Stage"]> | Variable<any, string>,	/** Release at point in time, will create new release containing this operation */
	releaseAt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,	/** Optionally attach this scheduled operation to an existing release */
	releaseId?: string | undefined | null | Variable<any, string>},ValueTypes["Seo"]],
createAboutMe?: [{	data: ValueTypes["AboutMeCreateInput"] | Variable<any, string>},ValueTypes["AboutMe"]],
updateAboutMe?: [{	where: ValueTypes["AboutMeWhereUniqueInput"] | Variable<any, string>,	data: ValueTypes["AboutMeUpdateInput"] | Variable<any, string>},ValueTypes["AboutMe"]],
deleteAboutMe?: [{	/** Document to delete */
	where: ValueTypes["AboutMeWhereUniqueInput"] | Variable<any, string>},ValueTypes["AboutMe"]],
upsertAboutMe?: [{	where: ValueTypes["AboutMeWhereUniqueInput"] | Variable<any, string>,	upsert: ValueTypes["AboutMeUpsertInput"] | Variable<any, string>},ValueTypes["AboutMe"]],
publishAboutMe?: [{	/** Document to publish */
	where: ValueTypes["AboutMeWhereUniqueInput"] | Variable<any, string>,	/** Publishing target stage */
	to: Array<ValueTypes["Stage"]> | Variable<any, string>},ValueTypes["AboutMe"]],
unpublishAboutMe?: [{	/** Document to unpublish */
	where: ValueTypes["AboutMeWhereUniqueInput"] | Variable<any, string>,	/** Stages to unpublish document from */
	from: Array<ValueTypes["Stage"]> | Variable<any, string>},ValueTypes["AboutMe"]],
updateManyAboutMesConnection?: [{	/** Documents to apply update on */
	where?: ValueTypes["AboutMeManyWhereInput"] | undefined | null | Variable<any, string>,	/** Updates to document content */
	data: ValueTypes["AboutMeUpdateManyInput"] | Variable<any, string>,	skip?: number | undefined | null | Variable<any, string>,	first?: number | undefined | null | Variable<any, string>,	last?: number | undefined | null | Variable<any, string>,	before?: string | undefined | null | Variable<any, string>,	after?: string | undefined | null | Variable<any, string>},ValueTypes["AboutMeConnection"]],
deleteManyAboutMesConnection?: [{	/** Documents to delete */
	where?: ValueTypes["AboutMeManyWhereInput"] | undefined | null | Variable<any, string>,	skip?: number | undefined | null | Variable<any, string>,	first?: number | undefined | null | Variable<any, string>,	last?: number | undefined | null | Variable<any, string>,	before?: string | undefined | null | Variable<any, string>,	after?: string | undefined | null | Variable<any, string>},ValueTypes["AboutMeConnection"]],
publishManyAboutMesConnection?: [{	/** Identifies documents in each stage to be published */
	where?: ValueTypes["AboutMeManyWhereInput"] | undefined | null | Variable<any, string>,	/** Stage to find matching documents in */
	from?: ValueTypes["Stage"] | undefined | null | Variable<any, string>,	/** Stages to publish documents to */
	to: Array<ValueTypes["Stage"]> | Variable<any, string>,	skip?: number | undefined | null | Variable<any, string>,	first?: number | undefined | null | Variable<any, string>,	last?: number | undefined | null | Variable<any, string>,	before?: string | undefined | null | Variable<any, string>,	after?: string | undefined | null | Variable<any, string>},ValueTypes["AboutMeConnection"]],
unpublishManyAboutMesConnection?: [{	/** Identifies documents in draft stage */
	where?: ValueTypes["AboutMeManyWhereInput"] | undefined | null | Variable<any, string>,	/** Stage to find matching documents in */
	stage?: ValueTypes["Stage"] | undefined | null | Variable<any, string>,	/** Stages to unpublish documents from */
	from: Array<ValueTypes["Stage"]> | Variable<any, string>,	skip?: number | undefined | null | Variable<any, string>,	first?: number | undefined | null | Variable<any, string>,	last?: number | undefined | null | Variable<any, string>,	before?: string | undefined | null | Variable<any, string>,	after?: string | undefined | null | Variable<any, string>},ValueTypes["AboutMeConnection"]],
updateManyAboutMes?: [{	/** Documents to apply update on */
	where?: ValueTypes["AboutMeManyWhereInput"] | undefined | null | Variable<any, string>,	/** Updates to document content */
	data: ValueTypes["AboutMeUpdateManyInput"] | Variable<any, string>},ValueTypes["BatchPayload"]],
deleteManyAboutMes?: [{	/** Documents to delete */
	where?: ValueTypes["AboutMeManyWhereInput"] | undefined | null | Variable<any, string>},ValueTypes["BatchPayload"]],
publishManyAboutMes?: [{	/** Identifies documents in each stage to be published */
	where?: ValueTypes["AboutMeManyWhereInput"] | undefined | null | Variable<any, string>,	/** Stages to publish documents to */
	to: Array<ValueTypes["Stage"]> | Variable<any, string>},ValueTypes["BatchPayload"]],
unpublishManyAboutMes?: [{	/** Identifies documents in each stage */
	where?: ValueTypes["AboutMeManyWhereInput"] | undefined | null | Variable<any, string>,	/** Stages to unpublish documents from */
	from: Array<ValueTypes["Stage"]> | Variable<any, string>},ValueTypes["BatchPayload"]],
schedulePublishAboutMe?: [{	/** Document to publish */
	where: ValueTypes["AboutMeWhereUniqueInput"] | Variable<any, string>,	/** Publishing target stage */
	to: Array<ValueTypes["Stage"]> | Variable<any, string>,	/** Release at point in time, will create new release containing this operation */
	releaseAt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,	/** Optionally attach this scheduled operation to an existing release */
	releaseId?: string | undefined | null | Variable<any, string>},ValueTypes["AboutMe"]],
scheduleUnpublishAboutMe?: [{	/** Document to unpublish */
	where: ValueTypes["AboutMeWhereUniqueInput"] | Variable<any, string>,	/** Stages to unpublish document from */
	from: Array<ValueTypes["Stage"]> | Variable<any, string>,	/** Release at point in time, will create new release containing this operation */
	releaseAt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,	/** Optionally attach this scheduled operation to an existing release */
	releaseId?: string | undefined | null | Variable<any, string>},ValueTypes["AboutMe"]],
createSkillCategory?: [{	data: ValueTypes["SkillCategoryCreateInput"] | Variable<any, string>},ValueTypes["SkillCategory"]],
updateSkillCategory?: [{	where: ValueTypes["SkillCategoryWhereUniqueInput"] | Variable<any, string>,	data: ValueTypes["SkillCategoryUpdateInput"] | Variable<any, string>},ValueTypes["SkillCategory"]],
deleteSkillCategory?: [{	/** Document to delete */
	where: ValueTypes["SkillCategoryWhereUniqueInput"] | Variable<any, string>},ValueTypes["SkillCategory"]],
upsertSkillCategory?: [{	where: ValueTypes["SkillCategoryWhereUniqueInput"] | Variable<any, string>,	upsert: ValueTypes["SkillCategoryUpsertInput"] | Variable<any, string>},ValueTypes["SkillCategory"]],
publishSkillCategory?: [{	/** Document to publish */
	where: ValueTypes["SkillCategoryWhereUniqueInput"] | Variable<any, string>,	/** Publishing target stage */
	to: Array<ValueTypes["Stage"]> | Variable<any, string>},ValueTypes["SkillCategory"]],
unpublishSkillCategory?: [{	/** Document to unpublish */
	where: ValueTypes["SkillCategoryWhereUniqueInput"] | Variable<any, string>,	/** Stages to unpublish document from */
	from: Array<ValueTypes["Stage"]> | Variable<any, string>},ValueTypes["SkillCategory"]],
updateManySkillCategoriesConnection?: [{	/** Documents to apply update on */
	where?: ValueTypes["SkillCategoryManyWhereInput"] | undefined | null | Variable<any, string>,	/** Updates to document content */
	data: ValueTypes["SkillCategoryUpdateManyInput"] | Variable<any, string>,	skip?: number | undefined | null | Variable<any, string>,	first?: number | undefined | null | Variable<any, string>,	last?: number | undefined | null | Variable<any, string>,	before?: string | undefined | null | Variable<any, string>,	after?: string | undefined | null | Variable<any, string>},ValueTypes["SkillCategoryConnection"]],
deleteManySkillCategoriesConnection?: [{	/** Documents to delete */
	where?: ValueTypes["SkillCategoryManyWhereInput"] | undefined | null | Variable<any, string>,	skip?: number | undefined | null | Variable<any, string>,	first?: number | undefined | null | Variable<any, string>,	last?: number | undefined | null | Variable<any, string>,	before?: string | undefined | null | Variable<any, string>,	after?: string | undefined | null | Variable<any, string>},ValueTypes["SkillCategoryConnection"]],
publishManySkillCategoriesConnection?: [{	/** Identifies documents in each stage to be published */
	where?: ValueTypes["SkillCategoryManyWhereInput"] | undefined | null | Variable<any, string>,	/** Stage to find matching documents in */
	from?: ValueTypes["Stage"] | undefined | null | Variable<any, string>,	/** Stages to publish documents to */
	to: Array<ValueTypes["Stage"]> | Variable<any, string>,	skip?: number | undefined | null | Variable<any, string>,	first?: number | undefined | null | Variable<any, string>,	last?: number | undefined | null | Variable<any, string>,	before?: string | undefined | null | Variable<any, string>,	after?: string | undefined | null | Variable<any, string>},ValueTypes["SkillCategoryConnection"]],
unpublishManySkillCategoriesConnection?: [{	/** Identifies documents in draft stage */
	where?: ValueTypes["SkillCategoryManyWhereInput"] | undefined | null | Variable<any, string>,	/** Stage to find matching documents in */
	stage?: ValueTypes["Stage"] | undefined | null | Variable<any, string>,	/** Stages to unpublish documents from */
	from: Array<ValueTypes["Stage"]> | Variable<any, string>,	skip?: number | undefined | null | Variable<any, string>,	first?: number | undefined | null | Variable<any, string>,	last?: number | undefined | null | Variable<any, string>,	before?: string | undefined | null | Variable<any, string>,	after?: string | undefined | null | Variable<any, string>},ValueTypes["SkillCategoryConnection"]],
updateManySkillCategories?: [{	/** Documents to apply update on */
	where?: ValueTypes["SkillCategoryManyWhereInput"] | undefined | null | Variable<any, string>,	/** Updates to document content */
	data: ValueTypes["SkillCategoryUpdateManyInput"] | Variable<any, string>},ValueTypes["BatchPayload"]],
deleteManySkillCategories?: [{	/** Documents to delete */
	where?: ValueTypes["SkillCategoryManyWhereInput"] | undefined | null | Variable<any, string>},ValueTypes["BatchPayload"]],
publishManySkillCategories?: [{	/** Identifies documents in each stage to be published */
	where?: ValueTypes["SkillCategoryManyWhereInput"] | undefined | null | Variable<any, string>,	/** Stages to publish documents to */
	to: Array<ValueTypes["Stage"]> | Variable<any, string>},ValueTypes["BatchPayload"]],
unpublishManySkillCategories?: [{	/** Identifies documents in each stage */
	where?: ValueTypes["SkillCategoryManyWhereInput"] | undefined | null | Variable<any, string>,	/** Stages to unpublish documents from */
	from: Array<ValueTypes["Stage"]> | Variable<any, string>},ValueTypes["BatchPayload"]],
schedulePublishSkillCategory?: [{	/** Document to publish */
	where: ValueTypes["SkillCategoryWhereUniqueInput"] | Variable<any, string>,	/** Publishing target stage */
	to: Array<ValueTypes["Stage"]> | Variable<any, string>,	/** Release at point in time, will create new release containing this operation */
	releaseAt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,	/** Optionally attach this scheduled operation to an existing release */
	releaseId?: string | undefined | null | Variable<any, string>},ValueTypes["SkillCategory"]],
scheduleUnpublishSkillCategory?: [{	/** Document to unpublish */
	where: ValueTypes["SkillCategoryWhereUniqueInput"] | Variable<any, string>,	/** Stages to unpublish document from */
	from: Array<ValueTypes["Stage"]> | Variable<any, string>,	/** Release at point in time, will create new release containing this operation */
	releaseAt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,	/** Optionally attach this scheduled operation to an existing release */
	releaseId?: string | undefined | null | Variable<any, string>},ValueTypes["SkillCategory"]],
		__typename?: boolean | `@${string}`
}>;
	/** An object with an ID */
["Node"]:AliasType<{
		/** The id of the object. */
	id?:boolean | `@${string}`,
	/** The Stage of an object */
	stage?:boolean | `@${string}`;
		['...on AboutMe']?: Omit<ValueTypes["AboutMe"],keyof ValueTypes["Node"]>;
		['...on Asset']?: Omit<ValueTypes["Asset"],keyof ValueTypes["Node"]>;
		['...on Project']?: Omit<ValueTypes["Project"],keyof ValueTypes["Node"]>;
		['...on ScheduledOperation']?: Omit<ValueTypes["ScheduledOperation"],keyof ValueTypes["Node"]>;
		['...on ScheduledRelease']?: Omit<ValueTypes["ScheduledRelease"],keyof ValueTypes["Node"]>;
		['...on Seo']?: Omit<ValueTypes["Seo"],keyof ValueTypes["Node"]>;
		['...on SkillCategory']?: Omit<ValueTypes["SkillCategory"],keyof ValueTypes["Node"]>;
		['...on User']?: Omit<ValueTypes["User"],keyof ValueTypes["Node"]>;
		__typename?: boolean | `@${string}`
}>;
	/** Information about pagination in a connection. */
["PageInfo"]: AliasType<{
	/** When paginating forwards, are there more items? */
	hasNextPage?:boolean | `@${string}`,
	/** When paginating backwards, are there more items? */
	hasPreviousPage?:boolean | `@${string}`,
	/** When paginating backwards, the cursor to continue. */
	startCursor?:boolean | `@${string}`,
	/** When paginating forwards, the cursor to continue. */
	endCursor?:boolean | `@${string}`,
	/** Number of items in the current page. */
	pageSize?:boolean | `@${string}`,
		__typename?: boolean | `@${string}`
}>;
	["Project"]: AliasType<{
	/** System stage field */
	stage?:boolean | `@${string}`,
documentInStages?: [{	/** Potential stages that should be returned */
	stages: Array<ValueTypes["Stage"]> | Variable<any, string>,	/** Decides if the current stage should be included or not */
	includeCurrent: boolean | Variable<any, string>,	/** Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree */
	inheritLocale: boolean | Variable<any, string>},ValueTypes["Project"]],
	/** The time the document was published. Null on documents in draft stage. */
	publishedAt?:boolean | `@${string}`,
	/** The time the document was updated */
	updatedAt?:boolean | `@${string}`,
	/** The time the document was created */
	createdAt?:boolean | `@${string}`,
	/** The unique identifier */
	id?:boolean | `@${string}`,
	name?:boolean | `@${string}`,
	description?:boolean | `@${string}`,
	demo?:boolean | `@${string}`,
	sourceCode?:boolean | `@${string}`,
publishedBy?: [{	/** Allows to optionally override locale filtering behaviour in the query's subtree.

Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument will overwrite any existing locale filtering defined in the query's tree for the subtree. */
	locales?: Array<ValueTypes["Locale"]> | undefined | null | Variable<any, string>},ValueTypes["User"]],
updatedBy?: [{	/** Allows to optionally override locale filtering behaviour in the query's subtree.

Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument will overwrite any existing locale filtering defined in the query's tree for the subtree. */
	locales?: Array<ValueTypes["Locale"]> | undefined | null | Variable<any, string>},ValueTypes["User"]],
createdBy?: [{	/** Allows to optionally override locale filtering behaviour in the query's subtree.

Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument will overwrite any existing locale filtering defined in the query's tree for the subtree. */
	locales?: Array<ValueTypes["Locale"]> | undefined | null | Variable<any, string>},ValueTypes["User"]],
image?: [{	where?: ValueTypes["AssetWhereInput"] | undefined | null | Variable<any, string>,	orderBy?: ValueTypes["AssetOrderByInput"] | undefined | null | Variable<any, string>,	skip?: number | undefined | null | Variable<any, string>,	after?: string | undefined | null | Variable<any, string>,	before?: string | undefined | null | Variable<any, string>,	first?: number | undefined | null | Variable<any, string>,	last?: number | undefined | null | Variable<any, string>,	/** Allows to optionally override locale filtering behaviour in the query's subtree.

Note that `image` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument will overwrite any existing locale filtering defined in the query's tree for the subtree. */
	locales?: Array<ValueTypes["Locale"]> | undefined | null | Variable<any, string>},ValueTypes["Asset"]],
	/** Tech stack for project */
	stack?:boolean | `@${string}`,
scheduledIn?: [{	where?: ValueTypes["ScheduledOperationWhereInput"] | undefined | null | Variable<any, string>,	skip?: number | undefined | null | Variable<any, string>,	after?: string | undefined | null | Variable<any, string>,	before?: string | undefined | null | Variable<any, string>,	first?: number | undefined | null | Variable<any, string>,	last?: number | undefined | null | Variable<any, string>,	/** Allows to optionally override locale filtering behaviour in the query's subtree.

Note that `scheduledIn` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument will overwrite any existing locale filtering defined in the query's tree for the subtree. */
	locales?: Array<ValueTypes["Locale"]> | undefined | null | Variable<any, string>},ValueTypes["ScheduledOperation"]],
history?: [{	limit: number | Variable<any, string>,	skip: number | Variable<any, string>,	/** This is optional and can be used to fetch the document version history for a specific stage instead of the current one */
	stageOverride?: ValueTypes["Stage"] | undefined | null | Variable<any, string>},ValueTypes["Version"]],
		__typename?: boolean | `@${string}`
}>;
	["ProjectConnectInput"]: {
	/** Document to connect */
	where: ValueTypes["ProjectWhereUniqueInput"] | Variable<any, string>,
	/** Allow to specify document position in list of connected documents, will default to appending at end of list */
	position?: ValueTypes["ConnectPositionInput"] | undefined | null | Variable<any, string>
};
	/** A connection to a list of items. */
["ProjectConnection"]: AliasType<{
	/** Information to aid in pagination. */
	pageInfo?:ValueTypes["PageInfo"],
	/** A list of edges. */
	edges?:ValueTypes["ProjectEdge"],
	aggregate?:ValueTypes["Aggregate"],
		__typename?: boolean | `@${string}`
}>;
	["ProjectCreateInput"]: {
	updatedAt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	createdAt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	name: string | Variable<any, string>,
	description: string | Variable<any, string>,
	demo?: string | undefined | null | Variable<any, string>,
	sourceCode?: string | undefined | null | Variable<any, string>,
	image: ValueTypes["AssetCreateManyInlineInput"] | Variable<any, string>,
	stack?: Array<ValueTypes["Technologies"]> | undefined | null | Variable<any, string>
};
	["ProjectCreateManyInlineInput"]: {
	/** Create and connect multiple existing Project documents */
	create?: Array<ValueTypes["ProjectCreateInput"]> | undefined | null | Variable<any, string>,
	/** Connect multiple existing Project documents */
	connect?: Array<ValueTypes["ProjectWhereUniqueInput"]> | undefined | null | Variable<any, string>
};
	["ProjectCreateOneInlineInput"]: {
	/** Create and connect one Project document */
	create?: ValueTypes["ProjectCreateInput"] | undefined | null | Variable<any, string>,
	/** Connect one existing Project document */
	connect?: ValueTypes["ProjectWhereUniqueInput"] | undefined | null | Variable<any, string>
};
	/** An edge in a connection. */
["ProjectEdge"]: AliasType<{
	/** The item at the end of the edge. */
	node?:ValueTypes["Project"],
	/** A cursor for use in pagination. */
	cursor?:boolean | `@${string}`,
		__typename?: boolean | `@${string}`
}>;
	/** Identifies documents */
["ProjectManyWhereInput"]: {
	/** Contains search across all appropriate fields. */
	_search?: string | undefined | null | Variable<any, string>,
	/** Logical AND on all given filters. */
	AND?: Array<ValueTypes["ProjectWhereInput"]> | undefined | null | Variable<any, string>,
	/** Logical OR on all given filters. */
	OR?: Array<ValueTypes["ProjectWhereInput"]> | undefined | null | Variable<any, string>,
	/** Logical NOT on all given filters combined by AND. */
	NOT?: Array<ValueTypes["ProjectWhereInput"]> | undefined | null | Variable<any, string>,
	publishedAt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	publishedAt_not?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	publishedAt_in?: Array<ValueTypes["DateTime"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	publishedAt_not_in?: Array<ValueTypes["DateTime"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values less than the given value. */
	publishedAt_lt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values less than or equal the given value. */
	publishedAt_lte?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values greater than the given value. */
	publishedAt_gt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values greater than or equal the given value. */
	publishedAt_gte?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	updatedAt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	updatedAt_not?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	updatedAt_in?: Array<ValueTypes["DateTime"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	updatedAt_not_in?: Array<ValueTypes["DateTime"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values less than the given value. */
	updatedAt_lt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values less than or equal the given value. */
	updatedAt_lte?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values greater than the given value. */
	updatedAt_gt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values greater than or equal the given value. */
	updatedAt_gte?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	createdAt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	createdAt_not?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	createdAt_in?: Array<ValueTypes["DateTime"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	createdAt_not_in?: Array<ValueTypes["DateTime"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values less than the given value. */
	createdAt_lt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values less than or equal the given value. */
	createdAt_lte?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values greater than the given value. */
	createdAt_gt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values greater than or equal the given value. */
	createdAt_gte?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	id?: string | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	id_not?: string | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	id_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	id_not_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values containing the given string. */
	id_contains?: string | undefined | null | Variable<any, string>,
	/** All values not containing the given string. */
	id_not_contains?: string | undefined | null | Variable<any, string>,
	/** All values starting with the given string. */
	id_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values not starting with the given string. */
	id_not_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values ending with the given string. */
	id_ends_with?: string | undefined | null | Variable<any, string>,
	/** All values not ending with the given string */
	id_not_ends_with?: string | undefined | null | Variable<any, string>,
	name?: string | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	name_not?: string | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	name_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	name_not_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values containing the given string. */
	name_contains?: string | undefined | null | Variable<any, string>,
	/** All values not containing the given string. */
	name_not_contains?: string | undefined | null | Variable<any, string>,
	/** All values starting with the given string. */
	name_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values not starting with the given string. */
	name_not_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values ending with the given string. */
	name_ends_with?: string | undefined | null | Variable<any, string>,
	/** All values not ending with the given string */
	name_not_ends_with?: string | undefined | null | Variable<any, string>,
	description?: string | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	description_not?: string | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	description_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	description_not_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values containing the given string. */
	description_contains?: string | undefined | null | Variable<any, string>,
	/** All values not containing the given string. */
	description_not_contains?: string | undefined | null | Variable<any, string>,
	/** All values starting with the given string. */
	description_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values not starting with the given string. */
	description_not_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values ending with the given string. */
	description_ends_with?: string | undefined | null | Variable<any, string>,
	/** All values not ending with the given string */
	description_not_ends_with?: string | undefined | null | Variable<any, string>,
	demo?: string | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	demo_not?: string | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	demo_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	demo_not_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values containing the given string. */
	demo_contains?: string | undefined | null | Variable<any, string>,
	/** All values not containing the given string. */
	demo_not_contains?: string | undefined | null | Variable<any, string>,
	/** All values starting with the given string. */
	demo_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values not starting with the given string. */
	demo_not_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values ending with the given string. */
	demo_ends_with?: string | undefined | null | Variable<any, string>,
	/** All values not ending with the given string */
	demo_not_ends_with?: string | undefined | null | Variable<any, string>,
	sourceCode?: string | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	sourceCode_not?: string | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	sourceCode_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	sourceCode_not_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values containing the given string. */
	sourceCode_contains?: string | undefined | null | Variable<any, string>,
	/** All values not containing the given string. */
	sourceCode_not_contains?: string | undefined | null | Variable<any, string>,
	/** All values starting with the given string. */
	sourceCode_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values not starting with the given string. */
	sourceCode_not_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values ending with the given string. */
	sourceCode_ends_with?: string | undefined | null | Variable<any, string>,
	/** All values not ending with the given string */
	sourceCode_not_ends_with?: string | undefined | null | Variable<any, string>,
	publishedBy?: ValueTypes["UserWhereInput"] | undefined | null | Variable<any, string>,
	updatedBy?: ValueTypes["UserWhereInput"] | undefined | null | Variable<any, string>,
	createdBy?: ValueTypes["UserWhereInput"] | undefined | null | Variable<any, string>,
	image_every?: ValueTypes["AssetWhereInput"] | undefined | null | Variable<any, string>,
	image_some?: ValueTypes["AssetWhereInput"] | undefined | null | Variable<any, string>,
	image_none?: ValueTypes["AssetWhereInput"] | undefined | null | Variable<any, string>,
	/** Matches if the field array contains *all* items provided to the filter and order does match */
	stack?: Array<ValueTypes["Technologies"]> | undefined | null | Variable<any, string>,
	/** Matches if the field array does not contains *all* items provided to the filter or order does not match */
	stack_not?: Array<ValueTypes["Technologies"]> | undefined | null | Variable<any, string>,
	/** Matches if the field array contains *all* items provided to the filter */
	stack_contains_all?: Array<ValueTypes["Technologies"]> | undefined | null | Variable<any, string>,
	/** Matches if the field array contains at least one item provided to the filter */
	stack_contains_some?: Array<ValueTypes["Technologies"]> | undefined | null | Variable<any, string>,
	/** Matches if the field array does not contain any of the items provided to the filter */
	stack_contains_none?: Array<ValueTypes["Technologies"]> | undefined | null | Variable<any, string>,
	scheduledIn_every?: ValueTypes["ScheduledOperationWhereInput"] | undefined | null | Variable<any, string>,
	scheduledIn_some?: ValueTypes["ScheduledOperationWhereInput"] | undefined | null | Variable<any, string>,
	scheduledIn_none?: ValueTypes["ScheduledOperationWhereInput"] | undefined | null | Variable<any, string>
};
	["ProjectOrderByInput"]:ProjectOrderByInput;
	["ProjectUpdateInput"]: {
	name?: string | undefined | null | Variable<any, string>,
	description?: string | undefined | null | Variable<any, string>,
	demo?: string | undefined | null | Variable<any, string>,
	sourceCode?: string | undefined | null | Variable<any, string>,
	image?: ValueTypes["AssetUpdateManyInlineInput"] | undefined | null | Variable<any, string>,
	stack?: Array<ValueTypes["Technologies"]> | undefined | null | Variable<any, string>
};
	["ProjectUpdateManyInlineInput"]: {
	/** Create and connect multiple Project documents */
	create?: Array<ValueTypes["ProjectCreateInput"]> | undefined | null | Variable<any, string>,
	/** Connect multiple existing Project documents */
	connect?: Array<ValueTypes["ProjectConnectInput"]> | undefined | null | Variable<any, string>,
	/** Override currently-connected documents with multiple existing Project documents */
	set?: Array<ValueTypes["ProjectWhereUniqueInput"]> | undefined | null | Variable<any, string>,
	/** Update multiple Project documents */
	update?: Array<ValueTypes["ProjectUpdateWithNestedWhereUniqueInput"]> | undefined | null | Variable<any, string>,
	/** Upsert multiple Project documents */
	upsert?: Array<ValueTypes["ProjectUpsertWithNestedWhereUniqueInput"]> | undefined | null | Variable<any, string>,
	/** Disconnect multiple Project documents */
	disconnect?: Array<ValueTypes["ProjectWhereUniqueInput"]> | undefined | null | Variable<any, string>,
	/** Delete multiple Project documents */
	delete?: Array<ValueTypes["ProjectWhereUniqueInput"]> | undefined | null | Variable<any, string>
};
	["ProjectUpdateManyInput"]: {
	description?: string | undefined | null | Variable<any, string>,
	demo?: string | undefined | null | Variable<any, string>,
	sourceCode?: string | undefined | null | Variable<any, string>,
	stack?: Array<ValueTypes["Technologies"]> | undefined | null | Variable<any, string>
};
	["ProjectUpdateManyWithNestedWhereInput"]: {
	/** Document search */
	where: ValueTypes["ProjectWhereInput"] | Variable<any, string>,
	/** Update many input */
	data: ValueTypes["ProjectUpdateManyInput"] | Variable<any, string>
};
	["ProjectUpdateOneInlineInput"]: {
	/** Create and connect one Project document */
	create?: ValueTypes["ProjectCreateInput"] | undefined | null | Variable<any, string>,
	/** Update single Project document */
	update?: ValueTypes["ProjectUpdateWithNestedWhereUniqueInput"] | undefined | null | Variable<any, string>,
	/** Upsert single Project document */
	upsert?: ValueTypes["ProjectUpsertWithNestedWhereUniqueInput"] | undefined | null | Variable<any, string>,
	/** Connect existing Project document */
	connect?: ValueTypes["ProjectWhereUniqueInput"] | undefined | null | Variable<any, string>,
	/** Disconnect currently connected Project document */
	disconnect?: boolean | undefined | null | Variable<any, string>,
	/** Delete currently connected Project document */
	delete?: boolean | undefined | null | Variable<any, string>
};
	["ProjectUpdateWithNestedWhereUniqueInput"]: {
	/** Unique document search */
	where: ValueTypes["ProjectWhereUniqueInput"] | Variable<any, string>,
	/** Document to update */
	data: ValueTypes["ProjectUpdateInput"] | Variable<any, string>
};
	["ProjectUpsertInput"]: {
	/** Create document if it didn't exist */
	create: ValueTypes["ProjectCreateInput"] | Variable<any, string>,
	/** Update document if it exists */
	update: ValueTypes["ProjectUpdateInput"] | Variable<any, string>
};
	["ProjectUpsertWithNestedWhereUniqueInput"]: {
	/** Unique document search */
	where: ValueTypes["ProjectWhereUniqueInput"] | Variable<any, string>,
	/** Upsert data */
	data: ValueTypes["ProjectUpsertInput"] | Variable<any, string>
};
	/** Identifies documents */
["ProjectWhereInput"]: {
	/** Contains search across all appropriate fields. */
	_search?: string | undefined | null | Variable<any, string>,
	/** Logical AND on all given filters. */
	AND?: Array<ValueTypes["ProjectWhereInput"]> | undefined | null | Variable<any, string>,
	/** Logical OR on all given filters. */
	OR?: Array<ValueTypes["ProjectWhereInput"]> | undefined | null | Variable<any, string>,
	/** Logical NOT on all given filters combined by AND. */
	NOT?: Array<ValueTypes["ProjectWhereInput"]> | undefined | null | Variable<any, string>,
	publishedAt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	publishedAt_not?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	publishedAt_in?: Array<ValueTypes["DateTime"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	publishedAt_not_in?: Array<ValueTypes["DateTime"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values less than the given value. */
	publishedAt_lt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values less than or equal the given value. */
	publishedAt_lte?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values greater than the given value. */
	publishedAt_gt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values greater than or equal the given value. */
	publishedAt_gte?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	updatedAt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	updatedAt_not?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	updatedAt_in?: Array<ValueTypes["DateTime"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	updatedAt_not_in?: Array<ValueTypes["DateTime"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values less than the given value. */
	updatedAt_lt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values less than or equal the given value. */
	updatedAt_lte?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values greater than the given value. */
	updatedAt_gt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values greater than or equal the given value. */
	updatedAt_gte?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	createdAt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	createdAt_not?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	createdAt_in?: Array<ValueTypes["DateTime"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	createdAt_not_in?: Array<ValueTypes["DateTime"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values less than the given value. */
	createdAt_lt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values less than or equal the given value. */
	createdAt_lte?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values greater than the given value. */
	createdAt_gt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values greater than or equal the given value. */
	createdAt_gte?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	id?: string | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	id_not?: string | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	id_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	id_not_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values containing the given string. */
	id_contains?: string | undefined | null | Variable<any, string>,
	/** All values not containing the given string. */
	id_not_contains?: string | undefined | null | Variable<any, string>,
	/** All values starting with the given string. */
	id_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values not starting with the given string. */
	id_not_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values ending with the given string. */
	id_ends_with?: string | undefined | null | Variable<any, string>,
	/** All values not ending with the given string */
	id_not_ends_with?: string | undefined | null | Variable<any, string>,
	name?: string | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	name_not?: string | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	name_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	name_not_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values containing the given string. */
	name_contains?: string | undefined | null | Variable<any, string>,
	/** All values not containing the given string. */
	name_not_contains?: string | undefined | null | Variable<any, string>,
	/** All values starting with the given string. */
	name_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values not starting with the given string. */
	name_not_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values ending with the given string. */
	name_ends_with?: string | undefined | null | Variable<any, string>,
	/** All values not ending with the given string */
	name_not_ends_with?: string | undefined | null | Variable<any, string>,
	description?: string | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	description_not?: string | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	description_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	description_not_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values containing the given string. */
	description_contains?: string | undefined | null | Variable<any, string>,
	/** All values not containing the given string. */
	description_not_contains?: string | undefined | null | Variable<any, string>,
	/** All values starting with the given string. */
	description_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values not starting with the given string. */
	description_not_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values ending with the given string. */
	description_ends_with?: string | undefined | null | Variable<any, string>,
	/** All values not ending with the given string */
	description_not_ends_with?: string | undefined | null | Variable<any, string>,
	demo?: string | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	demo_not?: string | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	demo_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	demo_not_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values containing the given string. */
	demo_contains?: string | undefined | null | Variable<any, string>,
	/** All values not containing the given string. */
	demo_not_contains?: string | undefined | null | Variable<any, string>,
	/** All values starting with the given string. */
	demo_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values not starting with the given string. */
	demo_not_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values ending with the given string. */
	demo_ends_with?: string | undefined | null | Variable<any, string>,
	/** All values not ending with the given string */
	demo_not_ends_with?: string | undefined | null | Variable<any, string>,
	sourceCode?: string | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	sourceCode_not?: string | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	sourceCode_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	sourceCode_not_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values containing the given string. */
	sourceCode_contains?: string | undefined | null | Variable<any, string>,
	/** All values not containing the given string. */
	sourceCode_not_contains?: string | undefined | null | Variable<any, string>,
	/** All values starting with the given string. */
	sourceCode_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values not starting with the given string. */
	sourceCode_not_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values ending with the given string. */
	sourceCode_ends_with?: string | undefined | null | Variable<any, string>,
	/** All values not ending with the given string */
	sourceCode_not_ends_with?: string | undefined | null | Variable<any, string>,
	publishedBy?: ValueTypes["UserWhereInput"] | undefined | null | Variable<any, string>,
	updatedBy?: ValueTypes["UserWhereInput"] | undefined | null | Variable<any, string>,
	createdBy?: ValueTypes["UserWhereInput"] | undefined | null | Variable<any, string>,
	image_every?: ValueTypes["AssetWhereInput"] | undefined | null | Variable<any, string>,
	image_some?: ValueTypes["AssetWhereInput"] | undefined | null | Variable<any, string>,
	image_none?: ValueTypes["AssetWhereInput"] | undefined | null | Variable<any, string>,
	/** Matches if the field array contains *all* items provided to the filter and order does match */
	stack?: Array<ValueTypes["Technologies"]> | undefined | null | Variable<any, string>,
	/** Matches if the field array does not contains *all* items provided to the filter or order does not match */
	stack_not?: Array<ValueTypes["Technologies"]> | undefined | null | Variable<any, string>,
	/** Matches if the field array contains *all* items provided to the filter */
	stack_contains_all?: Array<ValueTypes["Technologies"]> | undefined | null | Variable<any, string>,
	/** Matches if the field array contains at least one item provided to the filter */
	stack_contains_some?: Array<ValueTypes["Technologies"]> | undefined | null | Variable<any, string>,
	/** Matches if the field array does not contain any of the items provided to the filter */
	stack_contains_none?: Array<ValueTypes["Technologies"]> | undefined | null | Variable<any, string>,
	scheduledIn_every?: ValueTypes["ScheduledOperationWhereInput"] | undefined | null | Variable<any, string>,
	scheduledIn_some?: ValueTypes["ScheduledOperationWhereInput"] | undefined | null | Variable<any, string>,
	scheduledIn_none?: ValueTypes["ScheduledOperationWhereInput"] | undefined | null | Variable<any, string>
};
	/** References Project record uniquely */
["ProjectWhereUniqueInput"]: {
	id?: string | undefined | null | Variable<any, string>,
	name?: string | undefined | null | Variable<any, string>
};
	["PublishLocaleInput"]: {
	/** Locales to publish */
	locale: ValueTypes["Locale"] | Variable<any, string>,
	/** Stages to publish selected locales to */
	stages: Array<ValueTypes["Stage"]> | Variable<any, string>
};
	["Query"]: AliasType<{
node?: [{	/** The ID of an object */
	id: string | Variable<any, string>,	stage: ValueTypes["Stage"] | Variable<any, string>,	/** Defines which locales should be returned.

Note that `Node` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree. */
	locales: Array<ValueTypes["Locale"]> | Variable<any, string>},ValueTypes["Node"]],
users?: [{	where?: ValueTypes["UserWhereInput"] | undefined | null | Variable<any, string>,	orderBy?: ValueTypes["UserOrderByInput"] | undefined | null | Variable<any, string>,	skip?: number | undefined | null | Variable<any, string>,	after?: string | undefined | null | Variable<any, string>,	before?: string | undefined | null | Variable<any, string>,	first?: number | undefined | null | Variable<any, string>,	last?: number | undefined | null | Variable<any, string>,	stage: ValueTypes["Stage"] | Variable<any, string>,	/** Defines which locales should be returned.

Note that `User` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree. */
	locales: Array<ValueTypes["Locale"]> | Variable<any, string>},ValueTypes["User"]],
user?: [{	where: ValueTypes["UserWhereUniqueInput"] | Variable<any, string>,	stage: ValueTypes["Stage"] | Variable<any, string>,	/** Defines which locales should be returned.

Note that `User` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree. */
	locales: Array<ValueTypes["Locale"]> | Variable<any, string>},ValueTypes["User"]],
usersConnection?: [{	where?: ValueTypes["UserWhereInput"] | undefined | null | Variable<any, string>,	orderBy?: ValueTypes["UserOrderByInput"] | undefined | null | Variable<any, string>,	skip?: number | undefined | null | Variable<any, string>,	after?: string | undefined | null | Variable<any, string>,	before?: string | undefined | null | Variable<any, string>,	first?: number | undefined | null | Variable<any, string>,	last?: number | undefined | null | Variable<any, string>,	stage: ValueTypes["Stage"] | Variable<any, string>,	/** Defines which locales should be returned.

Note that `User` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree. */
	locales: Array<ValueTypes["Locale"]> | Variable<any, string>},ValueTypes["UserConnection"]],
assets?: [{	where?: ValueTypes["AssetWhereInput"] | undefined | null | Variable<any, string>,	orderBy?: ValueTypes["AssetOrderByInput"] | undefined | null | Variable<any, string>,	skip?: number | undefined | null | Variable<any, string>,	after?: string | undefined | null | Variable<any, string>,	before?: string | undefined | null | Variable<any, string>,	first?: number | undefined | null | Variable<any, string>,	last?: number | undefined | null | Variable<any, string>,	stage: ValueTypes["Stage"] | Variable<any, string>,	/** Defines which locales should be returned.

Note that `Asset` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.

This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree. */
	locales: Array<ValueTypes["Locale"]> | Variable<any, string>},ValueTypes["Asset"]],
asset?: [{	where: ValueTypes["AssetWhereUniqueInput"] | Variable<any, string>,	stage: ValueTypes["Stage"] | Variable<any, string>,	/** Defines which locales should be returned.

Note that `Asset` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.

This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree. */
	locales: Array<ValueTypes["Locale"]> | Variable<any, string>},ValueTypes["Asset"]],
assetsConnection?: [{	where?: ValueTypes["AssetWhereInput"] | undefined | null | Variable<any, string>,	orderBy?: ValueTypes["AssetOrderByInput"] | undefined | null | Variable<any, string>,	skip?: number | undefined | null | Variable<any, string>,	after?: string | undefined | null | Variable<any, string>,	before?: string | undefined | null | Variable<any, string>,	first?: number | undefined | null | Variable<any, string>,	last?: number | undefined | null | Variable<any, string>,	stage: ValueTypes["Stage"] | Variable<any, string>,	/** Defines which locales should be returned.

Note that `Asset` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.

This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree. */
	locales: Array<ValueTypes["Locale"]> | Variable<any, string>},ValueTypes["AssetConnection"]],
assetVersion?: [{	where: ValueTypes["VersionWhereInput"] | Variable<any, string>},ValueTypes["DocumentVersion"]],
scheduledOperations?: [{	where?: ValueTypes["ScheduledOperationWhereInput"] | undefined | null | Variable<any, string>,	orderBy?: ValueTypes["ScheduledOperationOrderByInput"] | undefined | null | Variable<any, string>,	skip?: number | undefined | null | Variable<any, string>,	after?: string | undefined | null | Variable<any, string>,	before?: string | undefined | null | Variable<any, string>,	first?: number | undefined | null | Variable<any, string>,	last?: number | undefined | null | Variable<any, string>,	stage: ValueTypes["Stage"] | Variable<any, string>,	/** Defines which locales should be returned.

Note that `ScheduledOperation` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree. */
	locales: Array<ValueTypes["Locale"]> | Variable<any, string>},ValueTypes["ScheduledOperation"]],
scheduledOperation?: [{	where: ValueTypes["ScheduledOperationWhereUniqueInput"] | Variable<any, string>,	stage: ValueTypes["Stage"] | Variable<any, string>,	/** Defines which locales should be returned.

Note that `ScheduledOperation` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree. */
	locales: Array<ValueTypes["Locale"]> | Variable<any, string>},ValueTypes["ScheduledOperation"]],
scheduledOperationsConnection?: [{	where?: ValueTypes["ScheduledOperationWhereInput"] | undefined | null | Variable<any, string>,	orderBy?: ValueTypes["ScheduledOperationOrderByInput"] | undefined | null | Variable<any, string>,	skip?: number | undefined | null | Variable<any, string>,	after?: string | undefined | null | Variable<any, string>,	before?: string | undefined | null | Variable<any, string>,	first?: number | undefined | null | Variable<any, string>,	last?: number | undefined | null | Variable<any, string>,	stage: ValueTypes["Stage"] | Variable<any, string>,	/** Defines which locales should be returned.

Note that `ScheduledOperation` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree. */
	locales: Array<ValueTypes["Locale"]> | Variable<any, string>},ValueTypes["ScheduledOperationConnection"]],
scheduledReleases?: [{	where?: ValueTypes["ScheduledReleaseWhereInput"] | undefined | null | Variable<any, string>,	orderBy?: ValueTypes["ScheduledReleaseOrderByInput"] | undefined | null | Variable<any, string>,	skip?: number | undefined | null | Variable<any, string>,	after?: string | undefined | null | Variable<any, string>,	before?: string | undefined | null | Variable<any, string>,	first?: number | undefined | null | Variable<any, string>,	last?: number | undefined | null | Variable<any, string>,	stage: ValueTypes["Stage"] | Variable<any, string>,	/** Defines which locales should be returned.

Note that `ScheduledRelease` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree. */
	locales: Array<ValueTypes["Locale"]> | Variable<any, string>},ValueTypes["ScheduledRelease"]],
scheduledRelease?: [{	where: ValueTypes["ScheduledReleaseWhereUniqueInput"] | Variable<any, string>,	stage: ValueTypes["Stage"] | Variable<any, string>,	/** Defines which locales should be returned.

Note that `ScheduledRelease` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree. */
	locales: Array<ValueTypes["Locale"]> | Variable<any, string>},ValueTypes["ScheduledRelease"]],
scheduledReleasesConnection?: [{	where?: ValueTypes["ScheduledReleaseWhereInput"] | undefined | null | Variable<any, string>,	orderBy?: ValueTypes["ScheduledReleaseOrderByInput"] | undefined | null | Variable<any, string>,	skip?: number | undefined | null | Variable<any, string>,	after?: string | undefined | null | Variable<any, string>,	before?: string | undefined | null | Variable<any, string>,	first?: number | undefined | null | Variable<any, string>,	last?: number | undefined | null | Variable<any, string>,	stage: ValueTypes["Stage"] | Variable<any, string>,	/** Defines which locales should be returned.

Note that `ScheduledRelease` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree. */
	locales: Array<ValueTypes["Locale"]> | Variable<any, string>},ValueTypes["ScheduledReleaseConnection"]],
projects?: [{	where?: ValueTypes["ProjectWhereInput"] | undefined | null | Variable<any, string>,	orderBy?: ValueTypes["ProjectOrderByInput"] | undefined | null | Variable<any, string>,	skip?: number | undefined | null | Variable<any, string>,	after?: string | undefined | null | Variable<any, string>,	before?: string | undefined | null | Variable<any, string>,	first?: number | undefined | null | Variable<any, string>,	last?: number | undefined | null | Variable<any, string>,	stage: ValueTypes["Stage"] | Variable<any, string>,	/** Defines which locales should be returned.

Note that `Project` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree. */
	locales: Array<ValueTypes["Locale"]> | Variable<any, string>},ValueTypes["Project"]],
project?: [{	where: ValueTypes["ProjectWhereUniqueInput"] | Variable<any, string>,	stage: ValueTypes["Stage"] | Variable<any, string>,	/** Defines which locales should be returned.

Note that `Project` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree. */
	locales: Array<ValueTypes["Locale"]> | Variable<any, string>},ValueTypes["Project"]],
projectsConnection?: [{	where?: ValueTypes["ProjectWhereInput"] | undefined | null | Variable<any, string>,	orderBy?: ValueTypes["ProjectOrderByInput"] | undefined | null | Variable<any, string>,	skip?: number | undefined | null | Variable<any, string>,	after?: string | undefined | null | Variable<any, string>,	before?: string | undefined | null | Variable<any, string>,	first?: number | undefined | null | Variable<any, string>,	last?: number | undefined | null | Variable<any, string>,	stage: ValueTypes["Stage"] | Variable<any, string>,	/** Defines which locales should be returned.

Note that `Project` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree. */
	locales: Array<ValueTypes["Locale"]> | Variable<any, string>},ValueTypes["ProjectConnection"]],
projectVersion?: [{	where: ValueTypes["VersionWhereInput"] | Variable<any, string>},ValueTypes["DocumentVersion"]],
seos?: [{	where?: ValueTypes["SeoWhereInput"] | undefined | null | Variable<any, string>,	orderBy?: ValueTypes["SeoOrderByInput"] | undefined | null | Variable<any, string>,	skip?: number | undefined | null | Variable<any, string>,	after?: string | undefined | null | Variable<any, string>,	before?: string | undefined | null | Variable<any, string>,	first?: number | undefined | null | Variable<any, string>,	last?: number | undefined | null | Variable<any, string>,	stage: ValueTypes["Stage"] | Variable<any, string>,	/** Defines which locales should be returned.

Note that `Seo` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree. */
	locales: Array<ValueTypes["Locale"]> | Variable<any, string>},ValueTypes["Seo"]],
seo?: [{	where: ValueTypes["SeoWhereUniqueInput"] | Variable<any, string>,	stage: ValueTypes["Stage"] | Variable<any, string>,	/** Defines which locales should be returned.

Note that `Seo` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree. */
	locales: Array<ValueTypes["Locale"]> | Variable<any, string>},ValueTypes["Seo"]],
seosConnection?: [{	where?: ValueTypes["SeoWhereInput"] | undefined | null | Variable<any, string>,	orderBy?: ValueTypes["SeoOrderByInput"] | undefined | null | Variable<any, string>,	skip?: number | undefined | null | Variable<any, string>,	after?: string | undefined | null | Variable<any, string>,	before?: string | undefined | null | Variable<any, string>,	first?: number | undefined | null | Variable<any, string>,	last?: number | undefined | null | Variable<any, string>,	stage: ValueTypes["Stage"] | Variable<any, string>,	/** Defines which locales should be returned.

Note that `Seo` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree. */
	locales: Array<ValueTypes["Locale"]> | Variable<any, string>},ValueTypes["SeoConnection"]],
seoVersion?: [{	where: ValueTypes["VersionWhereInput"] | Variable<any, string>},ValueTypes["DocumentVersion"]],
aboutMes?: [{	where?: ValueTypes["AboutMeWhereInput"] | undefined | null | Variable<any, string>,	orderBy?: ValueTypes["AboutMeOrderByInput"] | undefined | null | Variable<any, string>,	skip?: number | undefined | null | Variable<any, string>,	after?: string | undefined | null | Variable<any, string>,	before?: string | undefined | null | Variable<any, string>,	first?: number | undefined | null | Variable<any, string>,	last?: number | undefined | null | Variable<any, string>,	stage: ValueTypes["Stage"] | Variable<any, string>,	/** Defines which locales should be returned.

Note that `AboutMe` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree. */
	locales: Array<ValueTypes["Locale"]> | Variable<any, string>},ValueTypes["AboutMe"]],
aboutMe?: [{	where: ValueTypes["AboutMeWhereUniqueInput"] | Variable<any, string>,	stage: ValueTypes["Stage"] | Variable<any, string>,	/** Defines which locales should be returned.

Note that `AboutMe` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree. */
	locales: Array<ValueTypes["Locale"]> | Variable<any, string>},ValueTypes["AboutMe"]],
aboutMesConnection?: [{	where?: ValueTypes["AboutMeWhereInput"] | undefined | null | Variable<any, string>,	orderBy?: ValueTypes["AboutMeOrderByInput"] | undefined | null | Variable<any, string>,	skip?: number | undefined | null | Variable<any, string>,	after?: string | undefined | null | Variable<any, string>,	before?: string | undefined | null | Variable<any, string>,	first?: number | undefined | null | Variable<any, string>,	last?: number | undefined | null | Variable<any, string>,	stage: ValueTypes["Stage"] | Variable<any, string>,	/** Defines which locales should be returned.

Note that `AboutMe` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree. */
	locales: Array<ValueTypes["Locale"]> | Variable<any, string>},ValueTypes["AboutMeConnection"]],
aboutMeVersion?: [{	where: ValueTypes["VersionWhereInput"] | Variable<any, string>},ValueTypes["DocumentVersion"]],
skillCategories?: [{	where?: ValueTypes["SkillCategoryWhereInput"] | undefined | null | Variable<any, string>,	orderBy?: ValueTypes["SkillCategoryOrderByInput"] | undefined | null | Variable<any, string>,	skip?: number | undefined | null | Variable<any, string>,	after?: string | undefined | null | Variable<any, string>,	before?: string | undefined | null | Variable<any, string>,	first?: number | undefined | null | Variable<any, string>,	last?: number | undefined | null | Variable<any, string>,	stage: ValueTypes["Stage"] | Variable<any, string>,	/** Defines which locales should be returned.

Note that `SkillCategory` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree. */
	locales: Array<ValueTypes["Locale"]> | Variable<any, string>},ValueTypes["SkillCategory"]],
skillCategory?: [{	where: ValueTypes["SkillCategoryWhereUniqueInput"] | Variable<any, string>,	stage: ValueTypes["Stage"] | Variable<any, string>,	/** Defines which locales should be returned.

Note that `SkillCategory` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree. */
	locales: Array<ValueTypes["Locale"]> | Variable<any, string>},ValueTypes["SkillCategory"]],
skillCategoriesConnection?: [{	where?: ValueTypes["SkillCategoryWhereInput"] | undefined | null | Variable<any, string>,	orderBy?: ValueTypes["SkillCategoryOrderByInput"] | undefined | null | Variable<any, string>,	skip?: number | undefined | null | Variable<any, string>,	after?: string | undefined | null | Variable<any, string>,	before?: string | undefined | null | Variable<any, string>,	first?: number | undefined | null | Variable<any, string>,	last?: number | undefined | null | Variable<any, string>,	stage: ValueTypes["Stage"] | Variable<any, string>,	/** Defines which locales should be returned.

Note that `SkillCategory` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree. */
	locales: Array<ValueTypes["Locale"]> | Variable<any, string>},ValueTypes["SkillCategoryConnection"]],
skillCategoryVersion?: [{	where: ValueTypes["VersionWhereInput"] | Variable<any, string>},ValueTypes["DocumentVersion"]],
		__typename?: boolean | `@${string}`
}>;
	/** Representing a RGBA color value: https://developer.mozilla.org/en-US/docs/Web/CSS/color_value#rgb()_and_rgba() */
["RGBA"]: AliasType<{
	r?:boolean | `@${string}`,
	g?:boolean | `@${string}`,
	b?:boolean | `@${string}`,
	a?:boolean | `@${string}`,
		__typename?: boolean | `@${string}`
}>;
	["RGBAHue"]:unknown;
	/** Input type representing a RGBA color value: https://developer.mozilla.org/en-US/docs/Web/CSS/color_value#rgb()_and_rgba() */
["RGBAInput"]: {
	r: ValueTypes["RGBAHue"] | Variable<any, string>,
	g: ValueTypes["RGBAHue"] | Variable<any, string>,
	b: ValueTypes["RGBAHue"] | Variable<any, string>,
	a: ValueTypes["RGBATransparency"] | Variable<any, string>
};
	["RGBATransparency"]:unknown;
	/** Custom type representing a rich text value comprising of raw rich text ast, html, markdown and text values */
["RichText"]: AliasType<{
	/** Returns AST representation */
	raw?:boolean | `@${string}`,
	/** Returns HTMl representation */
	html?:boolean | `@${string}`,
	/** Returns Markdown representation */
	markdown?:boolean | `@${string}`,
	/** Returns plain-text contents of RichText */
	text?:boolean | `@${string}`,
		__typename?: boolean | `@${string}`
}>;
	/** Slate-compatible RichText AST */
["RichTextAST"]:unknown;
	/** Scheduled Operation system model */
["ScheduledOperation"]: AliasType<{
	/** System stage field */
	stage?:boolean | `@${string}`,
documentInStages?: [{	/** Potential stages that should be returned */
	stages: Array<ValueTypes["Stage"]> | Variable<any, string>,	/** Decides if the current stage should be included or not */
	includeCurrent: boolean | Variable<any, string>,	/** Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree */
	inheritLocale: boolean | Variable<any, string>},ValueTypes["ScheduledOperation"]],
	/** Raw operation payload including all details, this field is subject to change */
	rawPayload?:boolean | `@${string}`,
	/** Operation error message */
	errorMessage?:boolean | `@${string}`,
	/** Operation description */
	description?:boolean | `@${string}`,
	/** The time the document was published. Null on documents in draft stage. */
	publishedAt?:boolean | `@${string}`,
	/** The time the document was updated */
	updatedAt?:boolean | `@${string}`,
	/** The time the document was created */
	createdAt?:boolean | `@${string}`,
	/** The unique identifier */
	id?:boolean | `@${string}`,
release?: [{	/** Allows to optionally override locale filtering behaviour in the query's subtree.

Note that `release` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument will overwrite any existing locale filtering defined in the query's tree for the subtree. */
	locales?: Array<ValueTypes["Locale"]> | undefined | null | Variable<any, string>},ValueTypes["ScheduledRelease"]],
publishedBy?: [{	/** Allows to optionally override locale filtering behaviour in the query's subtree.

Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument will overwrite any existing locale filtering defined in the query's tree for the subtree. */
	locales?: Array<ValueTypes["Locale"]> | undefined | null | Variable<any, string>},ValueTypes["User"]],
updatedBy?: [{	/** Allows to optionally override locale filtering behaviour in the query's subtree.

Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument will overwrite any existing locale filtering defined in the query's tree for the subtree. */
	locales?: Array<ValueTypes["Locale"]> | undefined | null | Variable<any, string>},ValueTypes["User"]],
createdBy?: [{	/** Allows to optionally override locale filtering behaviour in the query's subtree.

Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument will overwrite any existing locale filtering defined in the query's tree for the subtree. */
	locales?: Array<ValueTypes["Locale"]> | undefined | null | Variable<any, string>},ValueTypes["User"]],
	/** operation Status */
	status?:boolean | `@${string}`,
affectedDocuments?: [{	skip?: number | undefined | null | Variable<any, string>,	after?: string | undefined | null | Variable<any, string>,	before?: string | undefined | null | Variable<any, string>,	first?: number | undefined | null | Variable<any, string>,	last?: number | undefined | null | Variable<any, string>,	/** Allows to optionally override locale filtering behaviour in the query's subtree.

Note that `affectedDocuments` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument will overwrite any existing locale filtering defined in the query's tree for the subtree. */
	locales?: Array<ValueTypes["Locale"]> | undefined | null | Variable<any, string>},ValueTypes["ScheduledOperationAffectedDocument"]],
		__typename?: boolean | `@${string}`
}>;
	["ScheduledOperationAffectedDocument"]: AliasType<{		["...on AboutMe"] : ValueTypes["AboutMe"],
		["...on Asset"] : ValueTypes["Asset"],
		["...on Project"] : ValueTypes["Project"],
		["...on Seo"] : ValueTypes["Seo"],
		["...on SkillCategory"] : ValueTypes["SkillCategory"]
		__typename?: boolean | `@${string}`
}>;
	["ScheduledOperationConnectInput"]: {
	/** Document to connect */
	where: ValueTypes["ScheduledOperationWhereUniqueInput"] | Variable<any, string>,
	/** Allow to specify document position in list of connected documents, will default to appending at end of list */
	position?: ValueTypes["ConnectPositionInput"] | undefined | null | Variable<any, string>
};
	/** A connection to a list of items. */
["ScheduledOperationConnection"]: AliasType<{
	/** Information to aid in pagination. */
	pageInfo?:ValueTypes["PageInfo"],
	/** A list of edges. */
	edges?:ValueTypes["ScheduledOperationEdge"],
	aggregate?:ValueTypes["Aggregate"],
		__typename?: boolean | `@${string}`
}>;
	["ScheduledOperationCreateManyInlineInput"]: {
	/** Connect multiple existing ScheduledOperation documents */
	connect?: Array<ValueTypes["ScheduledOperationWhereUniqueInput"]> | undefined | null | Variable<any, string>
};
	["ScheduledOperationCreateOneInlineInput"]: {
	/** Connect one existing ScheduledOperation document */
	connect?: ValueTypes["ScheduledOperationWhereUniqueInput"] | undefined | null | Variable<any, string>
};
	/** An edge in a connection. */
["ScheduledOperationEdge"]: AliasType<{
	/** The item at the end of the edge. */
	node?:ValueTypes["ScheduledOperation"],
	/** A cursor for use in pagination. */
	cursor?:boolean | `@${string}`,
		__typename?: boolean | `@${string}`
}>;
	/** Identifies documents */
["ScheduledOperationManyWhereInput"]: {
	/** Contains search across all appropriate fields. */
	_search?: string | undefined | null | Variable<any, string>,
	/** Logical AND on all given filters. */
	AND?: Array<ValueTypes["ScheduledOperationWhereInput"]> | undefined | null | Variable<any, string>,
	/** Logical OR on all given filters. */
	OR?: Array<ValueTypes["ScheduledOperationWhereInput"]> | undefined | null | Variable<any, string>,
	/** Logical NOT on all given filters combined by AND. */
	NOT?: Array<ValueTypes["ScheduledOperationWhereInput"]> | undefined | null | Variable<any, string>,
	errorMessage?: string | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	errorMessage_not?: string | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	errorMessage_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	errorMessage_not_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values containing the given string. */
	errorMessage_contains?: string | undefined | null | Variable<any, string>,
	/** All values not containing the given string. */
	errorMessage_not_contains?: string | undefined | null | Variable<any, string>,
	/** All values starting with the given string. */
	errorMessage_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values not starting with the given string. */
	errorMessage_not_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values ending with the given string. */
	errorMessage_ends_with?: string | undefined | null | Variable<any, string>,
	/** All values not ending with the given string */
	errorMessage_not_ends_with?: string | undefined | null | Variable<any, string>,
	description?: string | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	description_not?: string | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	description_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	description_not_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values containing the given string. */
	description_contains?: string | undefined | null | Variable<any, string>,
	/** All values not containing the given string. */
	description_not_contains?: string | undefined | null | Variable<any, string>,
	/** All values starting with the given string. */
	description_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values not starting with the given string. */
	description_not_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values ending with the given string. */
	description_ends_with?: string | undefined | null | Variable<any, string>,
	/** All values not ending with the given string */
	description_not_ends_with?: string | undefined | null | Variable<any, string>,
	publishedAt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	publishedAt_not?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	publishedAt_in?: Array<ValueTypes["DateTime"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	publishedAt_not_in?: Array<ValueTypes["DateTime"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values less than the given value. */
	publishedAt_lt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values less than or equal the given value. */
	publishedAt_lte?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values greater than the given value. */
	publishedAt_gt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values greater than or equal the given value. */
	publishedAt_gte?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	updatedAt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	updatedAt_not?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	updatedAt_in?: Array<ValueTypes["DateTime"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	updatedAt_not_in?: Array<ValueTypes["DateTime"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values less than the given value. */
	updatedAt_lt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values less than or equal the given value. */
	updatedAt_lte?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values greater than the given value. */
	updatedAt_gt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values greater than or equal the given value. */
	updatedAt_gte?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	createdAt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	createdAt_not?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	createdAt_in?: Array<ValueTypes["DateTime"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	createdAt_not_in?: Array<ValueTypes["DateTime"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values less than the given value. */
	createdAt_lt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values less than or equal the given value. */
	createdAt_lte?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values greater than the given value. */
	createdAt_gt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values greater than or equal the given value. */
	createdAt_gte?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	id?: string | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	id_not?: string | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	id_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	id_not_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values containing the given string. */
	id_contains?: string | undefined | null | Variable<any, string>,
	/** All values not containing the given string. */
	id_not_contains?: string | undefined | null | Variable<any, string>,
	/** All values starting with the given string. */
	id_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values not starting with the given string. */
	id_not_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values ending with the given string. */
	id_ends_with?: string | undefined | null | Variable<any, string>,
	/** All values not ending with the given string */
	id_not_ends_with?: string | undefined | null | Variable<any, string>,
	release?: ValueTypes["ScheduledReleaseWhereInput"] | undefined | null | Variable<any, string>,
	publishedBy?: ValueTypes["UserWhereInput"] | undefined | null | Variable<any, string>,
	updatedBy?: ValueTypes["UserWhereInput"] | undefined | null | Variable<any, string>,
	createdBy?: ValueTypes["UserWhereInput"] | undefined | null | Variable<any, string>,
	status?: ValueTypes["ScheduledOperationStatus"] | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	status_not?: ValueTypes["ScheduledOperationStatus"] | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	status_in?: Array<ValueTypes["ScheduledOperationStatus"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	status_not_in?: Array<ValueTypes["ScheduledOperationStatus"] | undefined | null> | undefined | null | Variable<any, string>
};
	["ScheduledOperationOrderByInput"]:ScheduledOperationOrderByInput;
	/** System Scheduled Operation Status */
["ScheduledOperationStatus"]:ScheduledOperationStatus;
	["ScheduledOperationUpdateManyInlineInput"]: {
	/** Connect multiple existing ScheduledOperation documents */
	connect?: Array<ValueTypes["ScheduledOperationConnectInput"]> | undefined | null | Variable<any, string>,
	/** Override currently-connected documents with multiple existing ScheduledOperation documents */
	set?: Array<ValueTypes["ScheduledOperationWhereUniqueInput"]> | undefined | null | Variable<any, string>,
	/** Disconnect multiple ScheduledOperation documents */
	disconnect?: Array<ValueTypes["ScheduledOperationWhereUniqueInput"]> | undefined | null | Variable<any, string>
};
	["ScheduledOperationUpdateOneInlineInput"]: {
	/** Connect existing ScheduledOperation document */
	connect?: ValueTypes["ScheduledOperationWhereUniqueInput"] | undefined | null | Variable<any, string>,
	/** Disconnect currently connected ScheduledOperation document */
	disconnect?: boolean | undefined | null | Variable<any, string>
};
	/** Identifies documents */
["ScheduledOperationWhereInput"]: {
	/** Contains search across all appropriate fields. */
	_search?: string | undefined | null | Variable<any, string>,
	/** Logical AND on all given filters. */
	AND?: Array<ValueTypes["ScheduledOperationWhereInput"]> | undefined | null | Variable<any, string>,
	/** Logical OR on all given filters. */
	OR?: Array<ValueTypes["ScheduledOperationWhereInput"]> | undefined | null | Variable<any, string>,
	/** Logical NOT on all given filters combined by AND. */
	NOT?: Array<ValueTypes["ScheduledOperationWhereInput"]> | undefined | null | Variable<any, string>,
	errorMessage?: string | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	errorMessage_not?: string | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	errorMessage_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	errorMessage_not_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values containing the given string. */
	errorMessage_contains?: string | undefined | null | Variable<any, string>,
	/** All values not containing the given string. */
	errorMessage_not_contains?: string | undefined | null | Variable<any, string>,
	/** All values starting with the given string. */
	errorMessage_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values not starting with the given string. */
	errorMessage_not_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values ending with the given string. */
	errorMessage_ends_with?: string | undefined | null | Variable<any, string>,
	/** All values not ending with the given string */
	errorMessage_not_ends_with?: string | undefined | null | Variable<any, string>,
	description?: string | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	description_not?: string | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	description_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	description_not_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values containing the given string. */
	description_contains?: string | undefined | null | Variable<any, string>,
	/** All values not containing the given string. */
	description_not_contains?: string | undefined | null | Variable<any, string>,
	/** All values starting with the given string. */
	description_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values not starting with the given string. */
	description_not_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values ending with the given string. */
	description_ends_with?: string | undefined | null | Variable<any, string>,
	/** All values not ending with the given string */
	description_not_ends_with?: string | undefined | null | Variable<any, string>,
	publishedAt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	publishedAt_not?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	publishedAt_in?: Array<ValueTypes["DateTime"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	publishedAt_not_in?: Array<ValueTypes["DateTime"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values less than the given value. */
	publishedAt_lt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values less than or equal the given value. */
	publishedAt_lte?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values greater than the given value. */
	publishedAt_gt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values greater than or equal the given value. */
	publishedAt_gte?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	updatedAt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	updatedAt_not?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	updatedAt_in?: Array<ValueTypes["DateTime"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	updatedAt_not_in?: Array<ValueTypes["DateTime"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values less than the given value. */
	updatedAt_lt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values less than or equal the given value. */
	updatedAt_lte?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values greater than the given value. */
	updatedAt_gt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values greater than or equal the given value. */
	updatedAt_gte?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	createdAt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	createdAt_not?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	createdAt_in?: Array<ValueTypes["DateTime"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	createdAt_not_in?: Array<ValueTypes["DateTime"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values less than the given value. */
	createdAt_lt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values less than or equal the given value. */
	createdAt_lte?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values greater than the given value. */
	createdAt_gt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values greater than or equal the given value. */
	createdAt_gte?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	id?: string | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	id_not?: string | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	id_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	id_not_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values containing the given string. */
	id_contains?: string | undefined | null | Variable<any, string>,
	/** All values not containing the given string. */
	id_not_contains?: string | undefined | null | Variable<any, string>,
	/** All values starting with the given string. */
	id_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values not starting with the given string. */
	id_not_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values ending with the given string. */
	id_ends_with?: string | undefined | null | Variable<any, string>,
	/** All values not ending with the given string */
	id_not_ends_with?: string | undefined | null | Variable<any, string>,
	release?: ValueTypes["ScheduledReleaseWhereInput"] | undefined | null | Variable<any, string>,
	publishedBy?: ValueTypes["UserWhereInput"] | undefined | null | Variable<any, string>,
	updatedBy?: ValueTypes["UserWhereInput"] | undefined | null | Variable<any, string>,
	createdBy?: ValueTypes["UserWhereInput"] | undefined | null | Variable<any, string>,
	status?: ValueTypes["ScheduledOperationStatus"] | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	status_not?: ValueTypes["ScheduledOperationStatus"] | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	status_in?: Array<ValueTypes["ScheduledOperationStatus"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	status_not_in?: Array<ValueTypes["ScheduledOperationStatus"] | undefined | null> | undefined | null | Variable<any, string>
};
	/** References ScheduledOperation record uniquely */
["ScheduledOperationWhereUniqueInput"]: {
	id?: string | undefined | null | Variable<any, string>
};
	/** Scheduled Release system model */
["ScheduledRelease"]: AliasType<{
	/** System stage field */
	stage?:boolean | `@${string}`,
documentInStages?: [{	/** Potential stages that should be returned */
	stages: Array<ValueTypes["Stage"]> | Variable<any, string>,	/** Decides if the current stage should be included or not */
	includeCurrent: boolean | Variable<any, string>,	/** Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree */
	inheritLocale: boolean | Variable<any, string>},ValueTypes["ScheduledRelease"]],
	/** Release date and time */
	releaseAt?:boolean | `@${string}`,
	/** Whether scheduled release is implicit */
	isImplicit?:boolean | `@${string}`,
	/** Whether scheduled release should be run */
	isActive?:boolean | `@${string}`,
	/** Release error message */
	errorMessage?:boolean | `@${string}`,
	/** Release description */
	description?:boolean | `@${string}`,
	/** Release Title */
	title?:boolean | `@${string}`,
	/** The time the document was published. Null on documents in draft stage. */
	publishedAt?:boolean | `@${string}`,
	/** The time the document was updated */
	updatedAt?:boolean | `@${string}`,
	/** The time the document was created */
	createdAt?:boolean | `@${string}`,
	/** The unique identifier */
	id?:boolean | `@${string}`,
operations?: [{	where?: ValueTypes["ScheduledOperationWhereInput"] | undefined | null | Variable<any, string>,	orderBy?: ValueTypes["ScheduledOperationOrderByInput"] | undefined | null | Variable<any, string>,	skip?: number | undefined | null | Variable<any, string>,	after?: string | undefined | null | Variable<any, string>,	before?: string | undefined | null | Variable<any, string>,	first?: number | undefined | null | Variable<any, string>,	last?: number | undefined | null | Variable<any, string>,	/** Allows to optionally override locale filtering behaviour in the query's subtree.

Note that `operations` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument will overwrite any existing locale filtering defined in the query's tree for the subtree. */
	locales?: Array<ValueTypes["Locale"]> | undefined | null | Variable<any, string>},ValueTypes["ScheduledOperation"]],
publishedBy?: [{	/** Allows to optionally override locale filtering behaviour in the query's subtree.

Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument will overwrite any existing locale filtering defined in the query's tree for the subtree. */
	locales?: Array<ValueTypes["Locale"]> | undefined | null | Variable<any, string>},ValueTypes["User"]],
updatedBy?: [{	/** Allows to optionally override locale filtering behaviour in the query's subtree.

Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument will overwrite any existing locale filtering defined in the query's tree for the subtree. */
	locales?: Array<ValueTypes["Locale"]> | undefined | null | Variable<any, string>},ValueTypes["User"]],
createdBy?: [{	/** Allows to optionally override locale filtering behaviour in the query's subtree.

Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument will overwrite any existing locale filtering defined in the query's tree for the subtree. */
	locales?: Array<ValueTypes["Locale"]> | undefined | null | Variable<any, string>},ValueTypes["User"]],
	/** Release Status */
	status?:boolean | `@${string}`,
		__typename?: boolean | `@${string}`
}>;
	["ScheduledReleaseConnectInput"]: {
	/** Document to connect */
	where: ValueTypes["ScheduledReleaseWhereUniqueInput"] | Variable<any, string>,
	/** Allow to specify document position in list of connected documents, will default to appending at end of list */
	position?: ValueTypes["ConnectPositionInput"] | undefined | null | Variable<any, string>
};
	/** A connection to a list of items. */
["ScheduledReleaseConnection"]: AliasType<{
	/** Information to aid in pagination. */
	pageInfo?:ValueTypes["PageInfo"],
	/** A list of edges. */
	edges?:ValueTypes["ScheduledReleaseEdge"],
	aggregate?:ValueTypes["Aggregate"],
		__typename?: boolean | `@${string}`
}>;
	["ScheduledReleaseCreateInput"]: {
	releaseAt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	isActive?: boolean | undefined | null | Variable<any, string>,
	errorMessage?: string | undefined | null | Variable<any, string>,
	description?: string | undefined | null | Variable<any, string>,
	title?: string | undefined | null | Variable<any, string>,
	updatedAt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	createdAt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>
};
	["ScheduledReleaseCreateManyInlineInput"]: {
	/** Create and connect multiple existing ScheduledRelease documents */
	create?: Array<ValueTypes["ScheduledReleaseCreateInput"]> | undefined | null | Variable<any, string>,
	/** Connect multiple existing ScheduledRelease documents */
	connect?: Array<ValueTypes["ScheduledReleaseWhereUniqueInput"]> | undefined | null | Variable<any, string>
};
	["ScheduledReleaseCreateOneInlineInput"]: {
	/** Create and connect one ScheduledRelease document */
	create?: ValueTypes["ScheduledReleaseCreateInput"] | undefined | null | Variable<any, string>,
	/** Connect one existing ScheduledRelease document */
	connect?: ValueTypes["ScheduledReleaseWhereUniqueInput"] | undefined | null | Variable<any, string>
};
	/** An edge in a connection. */
["ScheduledReleaseEdge"]: AliasType<{
	/** The item at the end of the edge. */
	node?:ValueTypes["ScheduledRelease"],
	/** A cursor for use in pagination. */
	cursor?:boolean | `@${string}`,
		__typename?: boolean | `@${string}`
}>;
	/** Identifies documents */
["ScheduledReleaseManyWhereInput"]: {
	/** Contains search across all appropriate fields. */
	_search?: string | undefined | null | Variable<any, string>,
	/** Logical AND on all given filters. */
	AND?: Array<ValueTypes["ScheduledReleaseWhereInput"]> | undefined | null | Variable<any, string>,
	/** Logical OR on all given filters. */
	OR?: Array<ValueTypes["ScheduledReleaseWhereInput"]> | undefined | null | Variable<any, string>,
	/** Logical NOT on all given filters combined by AND. */
	NOT?: Array<ValueTypes["ScheduledReleaseWhereInput"]> | undefined | null | Variable<any, string>,
	releaseAt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	releaseAt_not?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	releaseAt_in?: Array<ValueTypes["DateTime"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	releaseAt_not_in?: Array<ValueTypes["DateTime"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values less than the given value. */
	releaseAt_lt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values less than or equal the given value. */
	releaseAt_lte?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values greater than the given value. */
	releaseAt_gt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values greater than or equal the given value. */
	releaseAt_gte?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	isImplicit?: boolean | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	isImplicit_not?: boolean | undefined | null | Variable<any, string>,
	isActive?: boolean | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	isActive_not?: boolean | undefined | null | Variable<any, string>,
	errorMessage?: string | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	errorMessage_not?: string | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	errorMessage_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	errorMessage_not_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values containing the given string. */
	errorMessage_contains?: string | undefined | null | Variable<any, string>,
	/** All values not containing the given string. */
	errorMessage_not_contains?: string | undefined | null | Variable<any, string>,
	/** All values starting with the given string. */
	errorMessage_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values not starting with the given string. */
	errorMessage_not_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values ending with the given string. */
	errorMessage_ends_with?: string | undefined | null | Variable<any, string>,
	/** All values not ending with the given string */
	errorMessage_not_ends_with?: string | undefined | null | Variable<any, string>,
	description?: string | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	description_not?: string | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	description_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	description_not_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values containing the given string. */
	description_contains?: string | undefined | null | Variable<any, string>,
	/** All values not containing the given string. */
	description_not_contains?: string | undefined | null | Variable<any, string>,
	/** All values starting with the given string. */
	description_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values not starting with the given string. */
	description_not_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values ending with the given string. */
	description_ends_with?: string | undefined | null | Variable<any, string>,
	/** All values not ending with the given string */
	description_not_ends_with?: string | undefined | null | Variable<any, string>,
	title?: string | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	title_not?: string | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	title_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	title_not_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values containing the given string. */
	title_contains?: string | undefined | null | Variable<any, string>,
	/** All values not containing the given string. */
	title_not_contains?: string | undefined | null | Variable<any, string>,
	/** All values starting with the given string. */
	title_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values not starting with the given string. */
	title_not_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values ending with the given string. */
	title_ends_with?: string | undefined | null | Variable<any, string>,
	/** All values not ending with the given string */
	title_not_ends_with?: string | undefined | null | Variable<any, string>,
	publishedAt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	publishedAt_not?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	publishedAt_in?: Array<ValueTypes["DateTime"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	publishedAt_not_in?: Array<ValueTypes["DateTime"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values less than the given value. */
	publishedAt_lt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values less than or equal the given value. */
	publishedAt_lte?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values greater than the given value. */
	publishedAt_gt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values greater than or equal the given value. */
	publishedAt_gte?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	updatedAt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	updatedAt_not?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	updatedAt_in?: Array<ValueTypes["DateTime"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	updatedAt_not_in?: Array<ValueTypes["DateTime"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values less than the given value. */
	updatedAt_lt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values less than or equal the given value. */
	updatedAt_lte?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values greater than the given value. */
	updatedAt_gt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values greater than or equal the given value. */
	updatedAt_gte?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	createdAt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	createdAt_not?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	createdAt_in?: Array<ValueTypes["DateTime"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	createdAt_not_in?: Array<ValueTypes["DateTime"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values less than the given value. */
	createdAt_lt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values less than or equal the given value. */
	createdAt_lte?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values greater than the given value. */
	createdAt_gt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values greater than or equal the given value. */
	createdAt_gte?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	id?: string | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	id_not?: string | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	id_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	id_not_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values containing the given string. */
	id_contains?: string | undefined | null | Variable<any, string>,
	/** All values not containing the given string. */
	id_not_contains?: string | undefined | null | Variable<any, string>,
	/** All values starting with the given string. */
	id_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values not starting with the given string. */
	id_not_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values ending with the given string. */
	id_ends_with?: string | undefined | null | Variable<any, string>,
	/** All values not ending with the given string */
	id_not_ends_with?: string | undefined | null | Variable<any, string>,
	operations_every?: ValueTypes["ScheduledOperationWhereInput"] | undefined | null | Variable<any, string>,
	operations_some?: ValueTypes["ScheduledOperationWhereInput"] | undefined | null | Variable<any, string>,
	operations_none?: ValueTypes["ScheduledOperationWhereInput"] | undefined | null | Variable<any, string>,
	publishedBy?: ValueTypes["UserWhereInput"] | undefined | null | Variable<any, string>,
	updatedBy?: ValueTypes["UserWhereInput"] | undefined | null | Variable<any, string>,
	createdBy?: ValueTypes["UserWhereInput"] | undefined | null | Variable<any, string>,
	status?: ValueTypes["ScheduledReleaseStatus"] | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	status_not?: ValueTypes["ScheduledReleaseStatus"] | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	status_in?: Array<ValueTypes["ScheduledReleaseStatus"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	status_not_in?: Array<ValueTypes["ScheduledReleaseStatus"] | undefined | null> | undefined | null | Variable<any, string>
};
	["ScheduledReleaseOrderByInput"]:ScheduledReleaseOrderByInput;
	/** System Scheduled Release Status */
["ScheduledReleaseStatus"]:ScheduledReleaseStatus;
	["ScheduledReleaseUpdateInput"]: {
	releaseAt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	isActive?: boolean | undefined | null | Variable<any, string>,
	errorMessage?: string | undefined | null | Variable<any, string>,
	description?: string | undefined | null | Variable<any, string>,
	title?: string | undefined | null | Variable<any, string>
};
	["ScheduledReleaseUpdateManyInlineInput"]: {
	/** Create and connect multiple ScheduledRelease documents */
	create?: Array<ValueTypes["ScheduledReleaseCreateInput"]> | undefined | null | Variable<any, string>,
	/** Connect multiple existing ScheduledRelease documents */
	connect?: Array<ValueTypes["ScheduledReleaseConnectInput"]> | undefined | null | Variable<any, string>,
	/** Override currently-connected documents with multiple existing ScheduledRelease documents */
	set?: Array<ValueTypes["ScheduledReleaseWhereUniqueInput"]> | undefined | null | Variable<any, string>,
	/** Update multiple ScheduledRelease documents */
	update?: Array<ValueTypes["ScheduledReleaseUpdateWithNestedWhereUniqueInput"]> | undefined | null | Variable<any, string>,
	/** Upsert multiple ScheduledRelease documents */
	upsert?: Array<ValueTypes["ScheduledReleaseUpsertWithNestedWhereUniqueInput"]> | undefined | null | Variable<any, string>,
	/** Disconnect multiple ScheduledRelease documents */
	disconnect?: Array<ValueTypes["ScheduledReleaseWhereUniqueInput"]> | undefined | null | Variable<any, string>,
	/** Delete multiple ScheduledRelease documents */
	delete?: Array<ValueTypes["ScheduledReleaseWhereUniqueInput"]> | undefined | null | Variable<any, string>
};
	["ScheduledReleaseUpdateManyInput"]: {
	releaseAt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	isActive?: boolean | undefined | null | Variable<any, string>,
	errorMessage?: string | undefined | null | Variable<any, string>,
	description?: string | undefined | null | Variable<any, string>,
	title?: string | undefined | null | Variable<any, string>
};
	["ScheduledReleaseUpdateManyWithNestedWhereInput"]: {
	/** Document search */
	where: ValueTypes["ScheduledReleaseWhereInput"] | Variable<any, string>,
	/** Update many input */
	data: ValueTypes["ScheduledReleaseUpdateManyInput"] | Variable<any, string>
};
	["ScheduledReleaseUpdateOneInlineInput"]: {
	/** Create and connect one ScheduledRelease document */
	create?: ValueTypes["ScheduledReleaseCreateInput"] | undefined | null | Variable<any, string>,
	/** Update single ScheduledRelease document */
	update?: ValueTypes["ScheduledReleaseUpdateWithNestedWhereUniqueInput"] | undefined | null | Variable<any, string>,
	/** Upsert single ScheduledRelease document */
	upsert?: ValueTypes["ScheduledReleaseUpsertWithNestedWhereUniqueInput"] | undefined | null | Variable<any, string>,
	/** Connect existing ScheduledRelease document */
	connect?: ValueTypes["ScheduledReleaseWhereUniqueInput"] | undefined | null | Variable<any, string>,
	/** Disconnect currently connected ScheduledRelease document */
	disconnect?: boolean | undefined | null | Variable<any, string>,
	/** Delete currently connected ScheduledRelease document */
	delete?: boolean | undefined | null | Variable<any, string>
};
	["ScheduledReleaseUpdateWithNestedWhereUniqueInput"]: {
	/** Unique document search */
	where: ValueTypes["ScheduledReleaseWhereUniqueInput"] | Variable<any, string>,
	/** Document to update */
	data: ValueTypes["ScheduledReleaseUpdateInput"] | Variable<any, string>
};
	["ScheduledReleaseUpsertInput"]: {
	/** Create document if it didn't exist */
	create: ValueTypes["ScheduledReleaseCreateInput"] | Variable<any, string>,
	/** Update document if it exists */
	update: ValueTypes["ScheduledReleaseUpdateInput"] | Variable<any, string>
};
	["ScheduledReleaseUpsertWithNestedWhereUniqueInput"]: {
	/** Unique document search */
	where: ValueTypes["ScheduledReleaseWhereUniqueInput"] | Variable<any, string>,
	/** Upsert data */
	data: ValueTypes["ScheduledReleaseUpsertInput"] | Variable<any, string>
};
	/** Identifies documents */
["ScheduledReleaseWhereInput"]: {
	/** Contains search across all appropriate fields. */
	_search?: string | undefined | null | Variable<any, string>,
	/** Logical AND on all given filters. */
	AND?: Array<ValueTypes["ScheduledReleaseWhereInput"]> | undefined | null | Variable<any, string>,
	/** Logical OR on all given filters. */
	OR?: Array<ValueTypes["ScheduledReleaseWhereInput"]> | undefined | null | Variable<any, string>,
	/** Logical NOT on all given filters combined by AND. */
	NOT?: Array<ValueTypes["ScheduledReleaseWhereInput"]> | undefined | null | Variable<any, string>,
	releaseAt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	releaseAt_not?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	releaseAt_in?: Array<ValueTypes["DateTime"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	releaseAt_not_in?: Array<ValueTypes["DateTime"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values less than the given value. */
	releaseAt_lt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values less than or equal the given value. */
	releaseAt_lte?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values greater than the given value. */
	releaseAt_gt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values greater than or equal the given value. */
	releaseAt_gte?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	isImplicit?: boolean | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	isImplicit_not?: boolean | undefined | null | Variable<any, string>,
	isActive?: boolean | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	isActive_not?: boolean | undefined | null | Variable<any, string>,
	errorMessage?: string | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	errorMessage_not?: string | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	errorMessage_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	errorMessage_not_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values containing the given string. */
	errorMessage_contains?: string | undefined | null | Variable<any, string>,
	/** All values not containing the given string. */
	errorMessage_not_contains?: string | undefined | null | Variable<any, string>,
	/** All values starting with the given string. */
	errorMessage_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values not starting with the given string. */
	errorMessage_not_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values ending with the given string. */
	errorMessage_ends_with?: string | undefined | null | Variable<any, string>,
	/** All values not ending with the given string */
	errorMessage_not_ends_with?: string | undefined | null | Variable<any, string>,
	description?: string | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	description_not?: string | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	description_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	description_not_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values containing the given string. */
	description_contains?: string | undefined | null | Variable<any, string>,
	/** All values not containing the given string. */
	description_not_contains?: string | undefined | null | Variable<any, string>,
	/** All values starting with the given string. */
	description_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values not starting with the given string. */
	description_not_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values ending with the given string. */
	description_ends_with?: string | undefined | null | Variable<any, string>,
	/** All values not ending with the given string */
	description_not_ends_with?: string | undefined | null | Variable<any, string>,
	title?: string | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	title_not?: string | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	title_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	title_not_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values containing the given string. */
	title_contains?: string | undefined | null | Variable<any, string>,
	/** All values not containing the given string. */
	title_not_contains?: string | undefined | null | Variable<any, string>,
	/** All values starting with the given string. */
	title_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values not starting with the given string. */
	title_not_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values ending with the given string. */
	title_ends_with?: string | undefined | null | Variable<any, string>,
	/** All values not ending with the given string */
	title_not_ends_with?: string | undefined | null | Variable<any, string>,
	publishedAt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	publishedAt_not?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	publishedAt_in?: Array<ValueTypes["DateTime"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	publishedAt_not_in?: Array<ValueTypes["DateTime"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values less than the given value. */
	publishedAt_lt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values less than or equal the given value. */
	publishedAt_lte?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values greater than the given value. */
	publishedAt_gt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values greater than or equal the given value. */
	publishedAt_gte?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	updatedAt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	updatedAt_not?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	updatedAt_in?: Array<ValueTypes["DateTime"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	updatedAt_not_in?: Array<ValueTypes["DateTime"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values less than the given value. */
	updatedAt_lt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values less than or equal the given value. */
	updatedAt_lte?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values greater than the given value. */
	updatedAt_gt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values greater than or equal the given value. */
	updatedAt_gte?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	createdAt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	createdAt_not?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	createdAt_in?: Array<ValueTypes["DateTime"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	createdAt_not_in?: Array<ValueTypes["DateTime"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values less than the given value. */
	createdAt_lt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values less than or equal the given value. */
	createdAt_lte?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values greater than the given value. */
	createdAt_gt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values greater than or equal the given value. */
	createdAt_gte?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	id?: string | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	id_not?: string | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	id_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	id_not_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values containing the given string. */
	id_contains?: string | undefined | null | Variable<any, string>,
	/** All values not containing the given string. */
	id_not_contains?: string | undefined | null | Variable<any, string>,
	/** All values starting with the given string. */
	id_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values not starting with the given string. */
	id_not_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values ending with the given string. */
	id_ends_with?: string | undefined | null | Variable<any, string>,
	/** All values not ending with the given string */
	id_not_ends_with?: string | undefined | null | Variable<any, string>,
	operations_every?: ValueTypes["ScheduledOperationWhereInput"] | undefined | null | Variable<any, string>,
	operations_some?: ValueTypes["ScheduledOperationWhereInput"] | undefined | null | Variable<any, string>,
	operations_none?: ValueTypes["ScheduledOperationWhereInput"] | undefined | null | Variable<any, string>,
	publishedBy?: ValueTypes["UserWhereInput"] | undefined | null | Variable<any, string>,
	updatedBy?: ValueTypes["UserWhereInput"] | undefined | null | Variable<any, string>,
	createdBy?: ValueTypes["UserWhereInput"] | undefined | null | Variable<any, string>,
	status?: ValueTypes["ScheduledReleaseStatus"] | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	status_not?: ValueTypes["ScheduledReleaseStatus"] | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	status_in?: Array<ValueTypes["ScheduledReleaseStatus"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	status_not_in?: Array<ValueTypes["ScheduledReleaseStatus"] | undefined | null> | undefined | null | Variable<any, string>
};
	/** References ScheduledRelease record uniquely */
["ScheduledReleaseWhereUniqueInput"]: {
	id?: string | undefined | null | Variable<any, string>
};
	["Seo"]: AliasType<{
	/** System stage field */
	stage?:boolean | `@${string}`,
documentInStages?: [{	/** Potential stages that should be returned */
	stages: Array<ValueTypes["Stage"]> | Variable<any, string>,	/** Decides if the current stage should be included or not */
	includeCurrent: boolean | Variable<any, string>,	/** Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree */
	inheritLocale: boolean | Variable<any, string>},ValueTypes["Seo"]],
	/** The time the document was published. Null on documents in draft stage. */
	publishedAt?:boolean | `@${string}`,
	/** The time the document was updated */
	updatedAt?:boolean | `@${string}`,
	/** The time the document was created */
	createdAt?:boolean | `@${string}`,
	/** The unique identifier */
	id?:boolean | `@${string}`,
	title?:boolean | `@${string}`,
	description?:boolean | `@${string}`,
	keywords?:boolean | `@${string}`,
publishedBy?: [{	/** Allows to optionally override locale filtering behaviour in the query's subtree.

Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument will overwrite any existing locale filtering defined in the query's tree for the subtree. */
	locales?: Array<ValueTypes["Locale"]> | undefined | null | Variable<any, string>},ValueTypes["User"]],
updatedBy?: [{	/** Allows to optionally override locale filtering behaviour in the query's subtree.

Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument will overwrite any existing locale filtering defined in the query's tree for the subtree. */
	locales?: Array<ValueTypes["Locale"]> | undefined | null | Variable<any, string>},ValueTypes["User"]],
createdBy?: [{	/** Allows to optionally override locale filtering behaviour in the query's subtree.

Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument will overwrite any existing locale filtering defined in the query's tree for the subtree. */
	locales?: Array<ValueTypes["Locale"]> | undefined | null | Variable<any, string>},ValueTypes["User"]],
og_image?: [{	/** Allows to optionally override locale filtering behaviour in the query's subtree.

Note that `og_image` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument will overwrite any existing locale filtering defined in the query's tree for the subtree. */
	locales?: Array<ValueTypes["Locale"]> | undefined | null | Variable<any, string>},ValueTypes["Asset"]],
scheduledIn?: [{	where?: ValueTypes["ScheduledOperationWhereInput"] | undefined | null | Variable<any, string>,	skip?: number | undefined | null | Variable<any, string>,	after?: string | undefined | null | Variable<any, string>,	before?: string | undefined | null | Variable<any, string>,	first?: number | undefined | null | Variable<any, string>,	last?: number | undefined | null | Variable<any, string>,	/** Allows to optionally override locale filtering behaviour in the query's subtree.

Note that `scheduledIn` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument will overwrite any existing locale filtering defined in the query's tree for the subtree. */
	locales?: Array<ValueTypes["Locale"]> | undefined | null | Variable<any, string>},ValueTypes["ScheduledOperation"]],
history?: [{	limit: number | Variable<any, string>,	skip: number | Variable<any, string>,	/** This is optional and can be used to fetch the document version history for a specific stage instead of the current one */
	stageOverride?: ValueTypes["Stage"] | undefined | null | Variable<any, string>},ValueTypes["Version"]],
		__typename?: boolean | `@${string}`
}>;
	["SeoConnectInput"]: {
	/** Document to connect */
	where: ValueTypes["SeoWhereUniqueInput"] | Variable<any, string>,
	/** Allow to specify document position in list of connected documents, will default to appending at end of list */
	position?: ValueTypes["ConnectPositionInput"] | undefined | null | Variable<any, string>
};
	/** A connection to a list of items. */
["SeoConnection"]: AliasType<{
	/** Information to aid in pagination. */
	pageInfo?:ValueTypes["PageInfo"],
	/** A list of edges. */
	edges?:ValueTypes["SeoEdge"],
	aggregate?:ValueTypes["Aggregate"],
		__typename?: boolean | `@${string}`
}>;
	["SeoCreateInput"]: {
	updatedAt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	createdAt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	title: string | Variable<any, string>,
	description: string | Variable<any, string>,
	keywords: Array<string> | Variable<any, string>,
	og_image: ValueTypes["AssetCreateOneInlineInput"] | Variable<any, string>
};
	["SeoCreateManyInlineInput"]: {
	/** Create and connect multiple existing Seo documents */
	create?: Array<ValueTypes["SeoCreateInput"]> | undefined | null | Variable<any, string>,
	/** Connect multiple existing Seo documents */
	connect?: Array<ValueTypes["SeoWhereUniqueInput"]> | undefined | null | Variable<any, string>
};
	["SeoCreateOneInlineInput"]: {
	/** Create and connect one Seo document */
	create?: ValueTypes["SeoCreateInput"] | undefined | null | Variable<any, string>,
	/** Connect one existing Seo document */
	connect?: ValueTypes["SeoWhereUniqueInput"] | undefined | null | Variable<any, string>
};
	/** An edge in a connection. */
["SeoEdge"]: AliasType<{
	/** The item at the end of the edge. */
	node?:ValueTypes["Seo"],
	/** A cursor for use in pagination. */
	cursor?:boolean | `@${string}`,
		__typename?: boolean | `@${string}`
}>;
	/** Identifies documents */
["SeoManyWhereInput"]: {
	/** Contains search across all appropriate fields. */
	_search?: string | undefined | null | Variable<any, string>,
	/** Logical AND on all given filters. */
	AND?: Array<ValueTypes["SeoWhereInput"]> | undefined | null | Variable<any, string>,
	/** Logical OR on all given filters. */
	OR?: Array<ValueTypes["SeoWhereInput"]> | undefined | null | Variable<any, string>,
	/** Logical NOT on all given filters combined by AND. */
	NOT?: Array<ValueTypes["SeoWhereInput"]> | undefined | null | Variable<any, string>,
	publishedAt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	publishedAt_not?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	publishedAt_in?: Array<ValueTypes["DateTime"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	publishedAt_not_in?: Array<ValueTypes["DateTime"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values less than the given value. */
	publishedAt_lt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values less than or equal the given value. */
	publishedAt_lte?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values greater than the given value. */
	publishedAt_gt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values greater than or equal the given value. */
	publishedAt_gte?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	updatedAt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	updatedAt_not?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	updatedAt_in?: Array<ValueTypes["DateTime"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	updatedAt_not_in?: Array<ValueTypes["DateTime"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values less than the given value. */
	updatedAt_lt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values less than or equal the given value. */
	updatedAt_lte?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values greater than the given value. */
	updatedAt_gt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values greater than or equal the given value. */
	updatedAt_gte?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	createdAt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	createdAt_not?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	createdAt_in?: Array<ValueTypes["DateTime"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	createdAt_not_in?: Array<ValueTypes["DateTime"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values less than the given value. */
	createdAt_lt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values less than or equal the given value. */
	createdAt_lte?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values greater than the given value. */
	createdAt_gt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values greater than or equal the given value. */
	createdAt_gte?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	id?: string | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	id_not?: string | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	id_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	id_not_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values containing the given string. */
	id_contains?: string | undefined | null | Variable<any, string>,
	/** All values not containing the given string. */
	id_not_contains?: string | undefined | null | Variable<any, string>,
	/** All values starting with the given string. */
	id_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values not starting with the given string. */
	id_not_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values ending with the given string. */
	id_ends_with?: string | undefined | null | Variable<any, string>,
	/** All values not ending with the given string */
	id_not_ends_with?: string | undefined | null | Variable<any, string>,
	title?: string | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	title_not?: string | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	title_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	title_not_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values containing the given string. */
	title_contains?: string | undefined | null | Variable<any, string>,
	/** All values not containing the given string. */
	title_not_contains?: string | undefined | null | Variable<any, string>,
	/** All values starting with the given string. */
	title_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values not starting with the given string. */
	title_not_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values ending with the given string. */
	title_ends_with?: string | undefined | null | Variable<any, string>,
	/** All values not ending with the given string */
	title_not_ends_with?: string | undefined | null | Variable<any, string>,
	description?: string | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	description_not?: string | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	description_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	description_not_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values containing the given string. */
	description_contains?: string | undefined | null | Variable<any, string>,
	/** All values not containing the given string. */
	description_not_contains?: string | undefined | null | Variable<any, string>,
	/** All values starting with the given string. */
	description_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values not starting with the given string. */
	description_not_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values ending with the given string. */
	description_ends_with?: string | undefined | null | Variable<any, string>,
	/** All values not ending with the given string */
	description_not_ends_with?: string | undefined | null | Variable<any, string>,
	/** Matches if the field array contains *all* items provided to the filter and order does match */
	keywords?: Array<string> | undefined | null | Variable<any, string>,
	/** Matches if the field array does not contains *all* items provided to the filter or order does not match */
	keywords_not?: Array<string> | undefined | null | Variable<any, string>,
	/** Matches if the field array contains *all* items provided to the filter */
	keywords_contains_all?: Array<string> | undefined | null | Variable<any, string>,
	/** Matches if the field array contains at least one item provided to the filter */
	keywords_contains_some?: Array<string> | undefined | null | Variable<any, string>,
	/** Matches if the field array does not contain any of the items provided to the filter */
	keywords_contains_none?: Array<string> | undefined | null | Variable<any, string>,
	publishedBy?: ValueTypes["UserWhereInput"] | undefined | null | Variable<any, string>,
	updatedBy?: ValueTypes["UserWhereInput"] | undefined | null | Variable<any, string>,
	createdBy?: ValueTypes["UserWhereInput"] | undefined | null | Variable<any, string>,
	og_image?: ValueTypes["AssetWhereInput"] | undefined | null | Variable<any, string>,
	scheduledIn_every?: ValueTypes["ScheduledOperationWhereInput"] | undefined | null | Variable<any, string>,
	scheduledIn_some?: ValueTypes["ScheduledOperationWhereInput"] | undefined | null | Variable<any, string>,
	scheduledIn_none?: ValueTypes["ScheduledOperationWhereInput"] | undefined | null | Variable<any, string>
};
	["SeoOrderByInput"]:SeoOrderByInput;
	["SeoUpdateInput"]: {
	title?: string | undefined | null | Variable<any, string>,
	description?: string | undefined | null | Variable<any, string>,
	keywords?: Array<string> | undefined | null | Variable<any, string>,
	og_image?: ValueTypes["AssetUpdateOneInlineInput"] | undefined | null | Variable<any, string>
};
	["SeoUpdateManyInlineInput"]: {
	/** Create and connect multiple Seo documents */
	create?: Array<ValueTypes["SeoCreateInput"]> | undefined | null | Variable<any, string>,
	/** Connect multiple existing Seo documents */
	connect?: Array<ValueTypes["SeoConnectInput"]> | undefined | null | Variable<any, string>,
	/** Override currently-connected documents with multiple existing Seo documents */
	set?: Array<ValueTypes["SeoWhereUniqueInput"]> | undefined | null | Variable<any, string>,
	/** Update multiple Seo documents */
	update?: Array<ValueTypes["SeoUpdateWithNestedWhereUniqueInput"]> | undefined | null | Variable<any, string>,
	/** Upsert multiple Seo documents */
	upsert?: Array<ValueTypes["SeoUpsertWithNestedWhereUniqueInput"]> | undefined | null | Variable<any, string>,
	/** Disconnect multiple Seo documents */
	disconnect?: Array<ValueTypes["SeoWhereUniqueInput"]> | undefined | null | Variable<any, string>,
	/** Delete multiple Seo documents */
	delete?: Array<ValueTypes["SeoWhereUniqueInput"]> | undefined | null | Variable<any, string>
};
	["SeoUpdateManyInput"]: {
	title?: string | undefined | null | Variable<any, string>,
	description?: string | undefined | null | Variable<any, string>,
	keywords?: Array<string> | undefined | null | Variable<any, string>
};
	["SeoUpdateManyWithNestedWhereInput"]: {
	/** Document search */
	where: ValueTypes["SeoWhereInput"] | Variable<any, string>,
	/** Update many input */
	data: ValueTypes["SeoUpdateManyInput"] | Variable<any, string>
};
	["SeoUpdateOneInlineInput"]: {
	/** Create and connect one Seo document */
	create?: ValueTypes["SeoCreateInput"] | undefined | null | Variable<any, string>,
	/** Update single Seo document */
	update?: ValueTypes["SeoUpdateWithNestedWhereUniqueInput"] | undefined | null | Variable<any, string>,
	/** Upsert single Seo document */
	upsert?: ValueTypes["SeoUpsertWithNestedWhereUniqueInput"] | undefined | null | Variable<any, string>,
	/** Connect existing Seo document */
	connect?: ValueTypes["SeoWhereUniqueInput"] | undefined | null | Variable<any, string>,
	/** Disconnect currently connected Seo document */
	disconnect?: boolean | undefined | null | Variable<any, string>,
	/** Delete currently connected Seo document */
	delete?: boolean | undefined | null | Variable<any, string>
};
	["SeoUpdateWithNestedWhereUniqueInput"]: {
	/** Unique document search */
	where: ValueTypes["SeoWhereUniqueInput"] | Variable<any, string>,
	/** Document to update */
	data: ValueTypes["SeoUpdateInput"] | Variable<any, string>
};
	["SeoUpsertInput"]: {
	/** Create document if it didn't exist */
	create: ValueTypes["SeoCreateInput"] | Variable<any, string>,
	/** Update document if it exists */
	update: ValueTypes["SeoUpdateInput"] | Variable<any, string>
};
	["SeoUpsertWithNestedWhereUniqueInput"]: {
	/** Unique document search */
	where: ValueTypes["SeoWhereUniqueInput"] | Variable<any, string>,
	/** Upsert data */
	data: ValueTypes["SeoUpsertInput"] | Variable<any, string>
};
	/** Identifies documents */
["SeoWhereInput"]: {
	/** Contains search across all appropriate fields. */
	_search?: string | undefined | null | Variable<any, string>,
	/** Logical AND on all given filters. */
	AND?: Array<ValueTypes["SeoWhereInput"]> | undefined | null | Variable<any, string>,
	/** Logical OR on all given filters. */
	OR?: Array<ValueTypes["SeoWhereInput"]> | undefined | null | Variable<any, string>,
	/** Logical NOT on all given filters combined by AND. */
	NOT?: Array<ValueTypes["SeoWhereInput"]> | undefined | null | Variable<any, string>,
	publishedAt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	publishedAt_not?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	publishedAt_in?: Array<ValueTypes["DateTime"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	publishedAt_not_in?: Array<ValueTypes["DateTime"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values less than the given value. */
	publishedAt_lt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values less than or equal the given value. */
	publishedAt_lte?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values greater than the given value. */
	publishedAt_gt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values greater than or equal the given value. */
	publishedAt_gte?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	updatedAt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	updatedAt_not?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	updatedAt_in?: Array<ValueTypes["DateTime"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	updatedAt_not_in?: Array<ValueTypes["DateTime"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values less than the given value. */
	updatedAt_lt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values less than or equal the given value. */
	updatedAt_lte?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values greater than the given value. */
	updatedAt_gt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values greater than or equal the given value. */
	updatedAt_gte?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	createdAt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	createdAt_not?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	createdAt_in?: Array<ValueTypes["DateTime"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	createdAt_not_in?: Array<ValueTypes["DateTime"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values less than the given value. */
	createdAt_lt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values less than or equal the given value. */
	createdAt_lte?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values greater than the given value. */
	createdAt_gt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values greater than or equal the given value. */
	createdAt_gte?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	id?: string | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	id_not?: string | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	id_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	id_not_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values containing the given string. */
	id_contains?: string | undefined | null | Variable<any, string>,
	/** All values not containing the given string. */
	id_not_contains?: string | undefined | null | Variable<any, string>,
	/** All values starting with the given string. */
	id_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values not starting with the given string. */
	id_not_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values ending with the given string. */
	id_ends_with?: string | undefined | null | Variable<any, string>,
	/** All values not ending with the given string */
	id_not_ends_with?: string | undefined | null | Variable<any, string>,
	title?: string | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	title_not?: string | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	title_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	title_not_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values containing the given string. */
	title_contains?: string | undefined | null | Variable<any, string>,
	/** All values not containing the given string. */
	title_not_contains?: string | undefined | null | Variable<any, string>,
	/** All values starting with the given string. */
	title_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values not starting with the given string. */
	title_not_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values ending with the given string. */
	title_ends_with?: string | undefined | null | Variable<any, string>,
	/** All values not ending with the given string */
	title_not_ends_with?: string | undefined | null | Variable<any, string>,
	description?: string | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	description_not?: string | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	description_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	description_not_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values containing the given string. */
	description_contains?: string | undefined | null | Variable<any, string>,
	/** All values not containing the given string. */
	description_not_contains?: string | undefined | null | Variable<any, string>,
	/** All values starting with the given string. */
	description_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values not starting with the given string. */
	description_not_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values ending with the given string. */
	description_ends_with?: string | undefined | null | Variable<any, string>,
	/** All values not ending with the given string */
	description_not_ends_with?: string | undefined | null | Variable<any, string>,
	/** Matches if the field array contains *all* items provided to the filter and order does match */
	keywords?: Array<string> | undefined | null | Variable<any, string>,
	/** Matches if the field array does not contains *all* items provided to the filter or order does not match */
	keywords_not?: Array<string> | undefined | null | Variable<any, string>,
	/** Matches if the field array contains *all* items provided to the filter */
	keywords_contains_all?: Array<string> | undefined | null | Variable<any, string>,
	/** Matches if the field array contains at least one item provided to the filter */
	keywords_contains_some?: Array<string> | undefined | null | Variable<any, string>,
	/** Matches if the field array does not contain any of the items provided to the filter */
	keywords_contains_none?: Array<string> | undefined | null | Variable<any, string>,
	publishedBy?: ValueTypes["UserWhereInput"] | undefined | null | Variable<any, string>,
	updatedBy?: ValueTypes["UserWhereInput"] | undefined | null | Variable<any, string>,
	createdBy?: ValueTypes["UserWhereInput"] | undefined | null | Variable<any, string>,
	og_image?: ValueTypes["AssetWhereInput"] | undefined | null | Variable<any, string>,
	scheduledIn_every?: ValueTypes["ScheduledOperationWhereInput"] | undefined | null | Variable<any, string>,
	scheduledIn_some?: ValueTypes["ScheduledOperationWhereInput"] | undefined | null | Variable<any, string>,
	scheduledIn_none?: ValueTypes["ScheduledOperationWhereInput"] | undefined | null | Variable<any, string>
};
	/** References Seo record uniquely */
["SeoWhereUniqueInput"]: {
	id?: string | undefined | null | Variable<any, string>
};
	["Skill"]: AliasType<{
	/** System stage field */
	stage?:boolean | `@${string}`,
	/** The unique identifier */
	id?:boolean | `@${string}`,
	name?:boolean | `@${string}`,
icon?: [{	/** Allows to optionally override locale filtering behaviour in the query's subtree.

Note that `icon` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument will overwrite any existing locale filtering defined in the query's tree for the subtree. */
	locales?: Array<ValueTypes["Locale"]> | undefined | null | Variable<any, string>},ValueTypes["Asset"]],
		__typename?: boolean | `@${string}`
}>;
	["SkillCategory"]: AliasType<{
	/** System stage field */
	stage?:boolean | `@${string}`,
documentInStages?: [{	/** Potential stages that should be returned */
	stages: Array<ValueTypes["Stage"]> | Variable<any, string>,	/** Decides if the current stage should be included or not */
	includeCurrent: boolean | Variable<any, string>,	/** Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree */
	inheritLocale: boolean | Variable<any, string>},ValueTypes["SkillCategory"]],
	/** The time the document was published. Null on documents in draft stage. */
	publishedAt?:boolean | `@${string}`,
	/** The time the document was updated */
	updatedAt?:boolean | `@${string}`,
	/** The time the document was created */
	createdAt?:boolean | `@${string}`,
	/** The unique identifier */
	id?:boolean | `@${string}`,
	name?:boolean | `@${string}`,
skillsList?: [{	skip?: number | undefined | null | Variable<any, string>,	after?: string | undefined | null | Variable<any, string>,	before?: string | undefined | null | Variable<any, string>,	first?: number | undefined | null | Variable<any, string>,	last?: number | undefined | null | Variable<any, string>,	/** Allows to optionally override locale filtering behaviour in the query's subtree.

Note that `skillsList` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument will overwrite any existing locale filtering defined in the query's tree for the subtree. */
	locales?: Array<ValueTypes["Locale"]> | undefined | null | Variable<any, string>},ValueTypes["SkillCategoryskillsListUnion"]],
publishedBy?: [{	/** Allows to optionally override locale filtering behaviour in the query's subtree.

Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument will overwrite any existing locale filtering defined in the query's tree for the subtree. */
	locales?: Array<ValueTypes["Locale"]> | undefined | null | Variable<any, string>},ValueTypes["User"]],
updatedBy?: [{	/** Allows to optionally override locale filtering behaviour in the query's subtree.

Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument will overwrite any existing locale filtering defined in the query's tree for the subtree. */
	locales?: Array<ValueTypes["Locale"]> | undefined | null | Variable<any, string>},ValueTypes["User"]],
createdBy?: [{	/** Allows to optionally override locale filtering behaviour in the query's subtree.

Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument will overwrite any existing locale filtering defined in the query's tree for the subtree. */
	locales?: Array<ValueTypes["Locale"]> | undefined | null | Variable<any, string>},ValueTypes["User"]],
scheduledIn?: [{	where?: ValueTypes["ScheduledOperationWhereInput"] | undefined | null | Variable<any, string>,	skip?: number | undefined | null | Variable<any, string>,	after?: string | undefined | null | Variable<any, string>,	before?: string | undefined | null | Variable<any, string>,	first?: number | undefined | null | Variable<any, string>,	last?: number | undefined | null | Variable<any, string>,	/** Allows to optionally override locale filtering behaviour in the query's subtree.

Note that `scheduledIn` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument will overwrite any existing locale filtering defined in the query's tree for the subtree. */
	locales?: Array<ValueTypes["Locale"]> | undefined | null | Variable<any, string>},ValueTypes["ScheduledOperation"]],
history?: [{	limit: number | Variable<any, string>,	skip: number | Variable<any, string>,	/** This is optional and can be used to fetch the document version history for a specific stage instead of the current one */
	stageOverride?: ValueTypes["Stage"] | undefined | null | Variable<any, string>},ValueTypes["Version"]],
		__typename?: boolean | `@${string}`
}>;
	["SkillCategoryConnectInput"]: {
	/** Document to connect */
	where: ValueTypes["SkillCategoryWhereUniqueInput"] | Variable<any, string>,
	/** Allow to specify document position in list of connected documents, will default to appending at end of list */
	position?: ValueTypes["ConnectPositionInput"] | undefined | null | Variable<any, string>
};
	/** A connection to a list of items. */
["SkillCategoryConnection"]: AliasType<{
	/** Information to aid in pagination. */
	pageInfo?:ValueTypes["PageInfo"],
	/** A list of edges. */
	edges?:ValueTypes["SkillCategoryEdge"],
	aggregate?:ValueTypes["Aggregate"],
		__typename?: boolean | `@${string}`
}>;
	["SkillCategoryCreateInput"]: {
	updatedAt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	createdAt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	name: string | Variable<any, string>,
	skillsList?: ValueTypes["SkillCategoryskillsListUnionCreateManyInlineInput"] | undefined | null | Variable<any, string>
};
	["SkillCategoryCreateManyInlineInput"]: {
	/** Create and connect multiple existing SkillCategory documents */
	create?: Array<ValueTypes["SkillCategoryCreateInput"]> | undefined | null | Variable<any, string>,
	/** Connect multiple existing SkillCategory documents */
	connect?: Array<ValueTypes["SkillCategoryWhereUniqueInput"]> | undefined | null | Variable<any, string>
};
	["SkillCategoryCreateOneInlineInput"]: {
	/** Create and connect one SkillCategory document */
	create?: ValueTypes["SkillCategoryCreateInput"] | undefined | null | Variable<any, string>,
	/** Connect one existing SkillCategory document */
	connect?: ValueTypes["SkillCategoryWhereUniqueInput"] | undefined | null | Variable<any, string>
};
	/** An edge in a connection. */
["SkillCategoryEdge"]: AliasType<{
	/** The item at the end of the edge. */
	node?:ValueTypes["SkillCategory"],
	/** A cursor for use in pagination. */
	cursor?:boolean | `@${string}`,
		__typename?: boolean | `@${string}`
}>;
	/** Identifies documents */
["SkillCategoryManyWhereInput"]: {
	/** Contains search across all appropriate fields. */
	_search?: string | undefined | null | Variable<any, string>,
	/** Logical AND on all given filters. */
	AND?: Array<ValueTypes["SkillCategoryWhereInput"]> | undefined | null | Variable<any, string>,
	/** Logical OR on all given filters. */
	OR?: Array<ValueTypes["SkillCategoryWhereInput"]> | undefined | null | Variable<any, string>,
	/** Logical NOT on all given filters combined by AND. */
	NOT?: Array<ValueTypes["SkillCategoryWhereInput"]> | undefined | null | Variable<any, string>,
	publishedAt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	publishedAt_not?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	publishedAt_in?: Array<ValueTypes["DateTime"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	publishedAt_not_in?: Array<ValueTypes["DateTime"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values less than the given value. */
	publishedAt_lt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values less than or equal the given value. */
	publishedAt_lte?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values greater than the given value. */
	publishedAt_gt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values greater than or equal the given value. */
	publishedAt_gte?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	updatedAt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	updatedAt_not?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	updatedAt_in?: Array<ValueTypes["DateTime"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	updatedAt_not_in?: Array<ValueTypes["DateTime"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values less than the given value. */
	updatedAt_lt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values less than or equal the given value. */
	updatedAt_lte?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values greater than the given value. */
	updatedAt_gt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values greater than or equal the given value. */
	updatedAt_gte?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	createdAt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	createdAt_not?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	createdAt_in?: Array<ValueTypes["DateTime"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	createdAt_not_in?: Array<ValueTypes["DateTime"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values less than the given value. */
	createdAt_lt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values less than or equal the given value. */
	createdAt_lte?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values greater than the given value. */
	createdAt_gt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values greater than or equal the given value. */
	createdAt_gte?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	id?: string | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	id_not?: string | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	id_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	id_not_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values containing the given string. */
	id_contains?: string | undefined | null | Variable<any, string>,
	/** All values not containing the given string. */
	id_not_contains?: string | undefined | null | Variable<any, string>,
	/** All values starting with the given string. */
	id_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values not starting with the given string. */
	id_not_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values ending with the given string. */
	id_ends_with?: string | undefined | null | Variable<any, string>,
	/** All values not ending with the given string */
	id_not_ends_with?: string | undefined | null | Variable<any, string>,
	name?: string | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	name_not?: string | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	name_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	name_not_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values containing the given string. */
	name_contains?: string | undefined | null | Variable<any, string>,
	/** All values not containing the given string. */
	name_not_contains?: string | undefined | null | Variable<any, string>,
	/** All values starting with the given string. */
	name_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values not starting with the given string. */
	name_not_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values ending with the given string. */
	name_ends_with?: string | undefined | null | Variable<any, string>,
	/** All values not ending with the given string */
	name_not_ends_with?: string | undefined | null | Variable<any, string>,
	publishedBy?: ValueTypes["UserWhereInput"] | undefined | null | Variable<any, string>,
	updatedBy?: ValueTypes["UserWhereInput"] | undefined | null | Variable<any, string>,
	createdBy?: ValueTypes["UserWhereInput"] | undefined | null | Variable<any, string>,
	scheduledIn_every?: ValueTypes["ScheduledOperationWhereInput"] | undefined | null | Variable<any, string>,
	scheduledIn_some?: ValueTypes["ScheduledOperationWhereInput"] | undefined | null | Variable<any, string>,
	scheduledIn_none?: ValueTypes["ScheduledOperationWhereInput"] | undefined | null | Variable<any, string>
};
	["SkillCategoryOrderByInput"]:SkillCategoryOrderByInput;
	["SkillCategoryUpdateInput"]: {
	name?: string | undefined | null | Variable<any, string>,
	skillsList?: ValueTypes["SkillCategoryskillsListUnionUpdateManyInlineInput"] | undefined | null | Variable<any, string>
};
	["SkillCategoryUpdateManyInlineInput"]: {
	/** Create and connect multiple SkillCategory documents */
	create?: Array<ValueTypes["SkillCategoryCreateInput"]> | undefined | null | Variable<any, string>,
	/** Connect multiple existing SkillCategory documents */
	connect?: Array<ValueTypes["SkillCategoryConnectInput"]> | undefined | null | Variable<any, string>,
	/** Override currently-connected documents with multiple existing SkillCategory documents */
	set?: Array<ValueTypes["SkillCategoryWhereUniqueInput"]> | undefined | null | Variable<any, string>,
	/** Update multiple SkillCategory documents */
	update?: Array<ValueTypes["SkillCategoryUpdateWithNestedWhereUniqueInput"]> | undefined | null | Variable<any, string>,
	/** Upsert multiple SkillCategory documents */
	upsert?: Array<ValueTypes["SkillCategoryUpsertWithNestedWhereUniqueInput"]> | undefined | null | Variable<any, string>,
	/** Disconnect multiple SkillCategory documents */
	disconnect?: Array<ValueTypes["SkillCategoryWhereUniqueInput"]> | undefined | null | Variable<any, string>,
	/** Delete multiple SkillCategory documents */
	delete?: Array<ValueTypes["SkillCategoryWhereUniqueInput"]> | undefined | null | Variable<any, string>
};
	["SkillCategoryUpdateManyInput"]: {
	/** No fields in updateMany data input */
	_?: string | undefined | null | Variable<any, string>
};
	["SkillCategoryUpdateManyWithNestedWhereInput"]: {
	/** Document search */
	where: ValueTypes["SkillCategoryWhereInput"] | Variable<any, string>,
	/** Update many input */
	data: ValueTypes["SkillCategoryUpdateManyInput"] | Variable<any, string>
};
	["SkillCategoryUpdateOneInlineInput"]: {
	/** Create and connect one SkillCategory document */
	create?: ValueTypes["SkillCategoryCreateInput"] | undefined | null | Variable<any, string>,
	/** Update single SkillCategory document */
	update?: ValueTypes["SkillCategoryUpdateWithNestedWhereUniqueInput"] | undefined | null | Variable<any, string>,
	/** Upsert single SkillCategory document */
	upsert?: ValueTypes["SkillCategoryUpsertWithNestedWhereUniqueInput"] | undefined | null | Variable<any, string>,
	/** Connect existing SkillCategory document */
	connect?: ValueTypes["SkillCategoryWhereUniqueInput"] | undefined | null | Variable<any, string>,
	/** Disconnect currently connected SkillCategory document */
	disconnect?: boolean | undefined | null | Variable<any, string>,
	/** Delete currently connected SkillCategory document */
	delete?: boolean | undefined | null | Variable<any, string>
};
	["SkillCategoryUpdateWithNestedWhereUniqueInput"]: {
	/** Unique document search */
	where: ValueTypes["SkillCategoryWhereUniqueInput"] | Variable<any, string>,
	/** Document to update */
	data: ValueTypes["SkillCategoryUpdateInput"] | Variable<any, string>
};
	["SkillCategoryUpsertInput"]: {
	/** Create document if it didn't exist */
	create: ValueTypes["SkillCategoryCreateInput"] | Variable<any, string>,
	/** Update document if it exists */
	update: ValueTypes["SkillCategoryUpdateInput"] | Variable<any, string>
};
	["SkillCategoryUpsertWithNestedWhereUniqueInput"]: {
	/** Unique document search */
	where: ValueTypes["SkillCategoryWhereUniqueInput"] | Variable<any, string>,
	/** Upsert data */
	data: ValueTypes["SkillCategoryUpsertInput"] | Variable<any, string>
};
	/** Identifies documents */
["SkillCategoryWhereInput"]: {
	/** Contains search across all appropriate fields. */
	_search?: string | undefined | null | Variable<any, string>,
	/** Logical AND on all given filters. */
	AND?: Array<ValueTypes["SkillCategoryWhereInput"]> | undefined | null | Variable<any, string>,
	/** Logical OR on all given filters. */
	OR?: Array<ValueTypes["SkillCategoryWhereInput"]> | undefined | null | Variable<any, string>,
	/** Logical NOT on all given filters combined by AND. */
	NOT?: Array<ValueTypes["SkillCategoryWhereInput"]> | undefined | null | Variable<any, string>,
	publishedAt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	publishedAt_not?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	publishedAt_in?: Array<ValueTypes["DateTime"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	publishedAt_not_in?: Array<ValueTypes["DateTime"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values less than the given value. */
	publishedAt_lt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values less than or equal the given value. */
	publishedAt_lte?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values greater than the given value. */
	publishedAt_gt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values greater than or equal the given value. */
	publishedAt_gte?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	updatedAt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	updatedAt_not?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	updatedAt_in?: Array<ValueTypes["DateTime"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	updatedAt_not_in?: Array<ValueTypes["DateTime"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values less than the given value. */
	updatedAt_lt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values less than or equal the given value. */
	updatedAt_lte?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values greater than the given value. */
	updatedAt_gt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values greater than or equal the given value. */
	updatedAt_gte?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	createdAt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	createdAt_not?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	createdAt_in?: Array<ValueTypes["DateTime"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	createdAt_not_in?: Array<ValueTypes["DateTime"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values less than the given value. */
	createdAt_lt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values less than or equal the given value. */
	createdAt_lte?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values greater than the given value. */
	createdAt_gt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values greater than or equal the given value. */
	createdAt_gte?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	id?: string | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	id_not?: string | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	id_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	id_not_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values containing the given string. */
	id_contains?: string | undefined | null | Variable<any, string>,
	/** All values not containing the given string. */
	id_not_contains?: string | undefined | null | Variable<any, string>,
	/** All values starting with the given string. */
	id_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values not starting with the given string. */
	id_not_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values ending with the given string. */
	id_ends_with?: string | undefined | null | Variable<any, string>,
	/** All values not ending with the given string */
	id_not_ends_with?: string | undefined | null | Variable<any, string>,
	name?: string | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	name_not?: string | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	name_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	name_not_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values containing the given string. */
	name_contains?: string | undefined | null | Variable<any, string>,
	/** All values not containing the given string. */
	name_not_contains?: string | undefined | null | Variable<any, string>,
	/** All values starting with the given string. */
	name_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values not starting with the given string. */
	name_not_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values ending with the given string. */
	name_ends_with?: string | undefined | null | Variable<any, string>,
	/** All values not ending with the given string */
	name_not_ends_with?: string | undefined | null | Variable<any, string>,
	publishedBy?: ValueTypes["UserWhereInput"] | undefined | null | Variable<any, string>,
	updatedBy?: ValueTypes["UserWhereInput"] | undefined | null | Variable<any, string>,
	createdBy?: ValueTypes["UserWhereInput"] | undefined | null | Variable<any, string>,
	scheduledIn_every?: ValueTypes["ScheduledOperationWhereInput"] | undefined | null | Variable<any, string>,
	scheduledIn_some?: ValueTypes["ScheduledOperationWhereInput"] | undefined | null | Variable<any, string>,
	scheduledIn_none?: ValueTypes["ScheduledOperationWhereInput"] | undefined | null | Variable<any, string>
};
	/** References SkillCategory record uniquely */
["SkillCategoryWhereUniqueInput"]: {
	id?: string | undefined | null | Variable<any, string>,
	name?: string | undefined | null | Variable<any, string>
};
	["SkillCategoryskillsListUnion"]: AliasType<{		["...on Skill"] : ValueTypes["Skill"]
		__typename?: boolean | `@${string}`
}>;
	["SkillCategoryskillsListUnionConnectInput"]: {
	Skill?: ValueTypes["SkillConnectInput"] | undefined | null | Variable<any, string>
};
	["SkillCategoryskillsListUnionCreateInput"]: {
	Skill?: ValueTypes["SkillCreateInput"] | undefined | null | Variable<any, string>
};
	["SkillCategoryskillsListUnionCreateManyInlineInput"]: {
	/** Create and connect multiple existing SkillCategoryskillsListUnion documents */
	create?: Array<ValueTypes["SkillCategoryskillsListUnionCreateInput"]> | undefined | null | Variable<any, string>
};
	["SkillCategoryskillsListUnionCreateOneInlineInput"]: {
	/** Create and connect one SkillCategoryskillsListUnion document */
	create?: ValueTypes["SkillCategoryskillsListUnionCreateInput"] | undefined | null | Variable<any, string>
};
	["SkillCategoryskillsListUnionCreateWithPositionInput"]: {
	Skill?: ValueTypes["SkillCreateWithPositionInput"] | undefined | null | Variable<any, string>
};
	["SkillCategoryskillsListUnionUpdateInput"]: {
	Skill?: ValueTypes["SkillUpdateInput"] | undefined | null | Variable<any, string>
};
	["SkillCategoryskillsListUnionUpdateManyInlineInput"]: {
	/** Create and connect multiple SkillCategoryskillsListUnion component instances */
	create?: Array<ValueTypes["SkillCategoryskillsListUnionCreateWithPositionInput"]> | undefined | null | Variable<any, string>,
	/** Update multiple SkillCategoryskillsListUnion component instances */
	update?: Array<ValueTypes["SkillCategoryskillsListUnionUpdateWithNestedWhereUniqueAndPositionInput"]> | undefined | null | Variable<any, string>,
	/** Upsert multiple SkillCategoryskillsListUnion component instances */
	upsert?: Array<ValueTypes["SkillCategoryskillsListUnionUpsertWithNestedWhereUniqueAndPositionInput"]> | undefined | null | Variable<any, string>,
	/** Delete multiple SkillCategoryskillsListUnion documents */
	delete?: Array<ValueTypes["SkillCategoryskillsListUnionWhereUniqueInput"]> | undefined | null | Variable<any, string>
};
	["SkillCategoryskillsListUnionUpdateManyWithNestedWhereInput"]: {
	Skill?: ValueTypes["SkillUpdateManyWithNestedWhereInput"] | undefined | null | Variable<any, string>
};
	["SkillCategoryskillsListUnionUpdateOneInlineInput"]: {
	/** Create and connect one SkillCategoryskillsListUnion document */
	create?: ValueTypes["SkillCategoryskillsListUnionCreateInput"] | undefined | null | Variable<any, string>,
	/** Update single SkillCategoryskillsListUnion document */
	update?: ValueTypes["SkillCategoryskillsListUnionUpdateWithNestedWhereUniqueInput"] | undefined | null | Variable<any, string>,
	/** Upsert single SkillCategoryskillsListUnion document */
	upsert?: ValueTypes["SkillCategoryskillsListUnionUpsertWithNestedWhereUniqueInput"] | undefined | null | Variable<any, string>,
	/** Delete currently connected SkillCategoryskillsListUnion document */
	delete?: boolean | undefined | null | Variable<any, string>
};
	["SkillCategoryskillsListUnionUpdateWithNestedWhereUniqueAndPositionInput"]: {
	Skill?: ValueTypes["SkillUpdateWithNestedWhereUniqueAndPositionInput"] | undefined | null | Variable<any, string>
};
	["SkillCategoryskillsListUnionUpdateWithNestedWhereUniqueInput"]: {
	Skill?: ValueTypes["SkillUpdateWithNestedWhereUniqueInput"] | undefined | null | Variable<any, string>
};
	["SkillCategoryskillsListUnionUpsertWithNestedWhereUniqueAndPositionInput"]: {
	Skill?: ValueTypes["SkillUpsertWithNestedWhereUniqueAndPositionInput"] | undefined | null | Variable<any, string>
};
	["SkillCategoryskillsListUnionUpsertWithNestedWhereUniqueInput"]: {
	Skill?: ValueTypes["SkillUpsertWithNestedWhereUniqueInput"] | undefined | null | Variable<any, string>
};
	["SkillCategoryskillsListUnionWhereInput"]: {
	Skill?: ValueTypes["SkillWhereInput"] | undefined | null | Variable<any, string>
};
	["SkillCategoryskillsListUnionWhereUniqueInput"]: {
	Skill?: ValueTypes["SkillWhereUniqueInput"] | undefined | null | Variable<any, string>
};
	["SkillConnectInput"]: {
	/** Document to connect */
	where: ValueTypes["SkillWhereUniqueInput"] | Variable<any, string>,
	/** Allow to specify document position in list of connected documents, will default to appending at end of list */
	position?: ValueTypes["ConnectPositionInput"] | undefined | null | Variable<any, string>
};
	/** A connection to a list of items. */
["SkillConnection"]: AliasType<{
	/** Information to aid in pagination. */
	pageInfo?:ValueTypes["PageInfo"],
	/** A list of edges. */
	edges?:ValueTypes["SkillEdge"],
	aggregate?:ValueTypes["Aggregate"],
		__typename?: boolean | `@${string}`
}>;
	["SkillCreateInput"]: {
	name: string | Variable<any, string>,
	icon: ValueTypes["AssetCreateOneInlineInput"] | Variable<any, string>
};
	["SkillCreateManyInlineInput"]: {
	/** Create and connect multiple existing Skill documents */
	create?: Array<ValueTypes["SkillCreateInput"]> | undefined | null | Variable<any, string>
};
	["SkillCreateOneInlineInput"]: {
	/** Create and connect one Skill document */
	create?: ValueTypes["SkillCreateInput"] | undefined | null | Variable<any, string>
};
	["SkillCreateWithPositionInput"]: {
	/** Position in the list of existing component instances, will default to appending at the end of list */
	position?: ValueTypes["ConnectPositionInput"] | undefined | null | Variable<any, string>,
	/** Document to create */
	data: ValueTypes["SkillCreateInput"] | Variable<any, string>
};
	/** An edge in a connection. */
["SkillEdge"]: AliasType<{
	/** The item at the end of the edge. */
	node?:ValueTypes["Skill"],
	/** A cursor for use in pagination. */
	cursor?:boolean | `@${string}`,
		__typename?: boolean | `@${string}`
}>;
	/** Identifies documents */
["SkillManyWhereInput"]: {
	/** Contains search across all appropriate fields. */
	_search?: string | undefined | null | Variable<any, string>,
	/** Logical AND on all given filters. */
	AND?: Array<ValueTypes["SkillWhereInput"]> | undefined | null | Variable<any, string>,
	/** Logical OR on all given filters. */
	OR?: Array<ValueTypes["SkillWhereInput"]> | undefined | null | Variable<any, string>,
	/** Logical NOT on all given filters combined by AND. */
	NOT?: Array<ValueTypes["SkillWhereInput"]> | undefined | null | Variable<any, string>,
	id?: string | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	id_not?: string | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	id_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	id_not_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values containing the given string. */
	id_contains?: string | undefined | null | Variable<any, string>,
	/** All values not containing the given string. */
	id_not_contains?: string | undefined | null | Variable<any, string>,
	/** All values starting with the given string. */
	id_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values not starting with the given string. */
	id_not_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values ending with the given string. */
	id_ends_with?: string | undefined | null | Variable<any, string>,
	/** All values not ending with the given string */
	id_not_ends_with?: string | undefined | null | Variable<any, string>,
	name?: string | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	name_not?: string | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	name_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	name_not_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values containing the given string. */
	name_contains?: string | undefined | null | Variable<any, string>,
	/** All values not containing the given string. */
	name_not_contains?: string | undefined | null | Variable<any, string>,
	/** All values starting with the given string. */
	name_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values not starting with the given string. */
	name_not_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values ending with the given string. */
	name_ends_with?: string | undefined | null | Variable<any, string>,
	/** All values not ending with the given string */
	name_not_ends_with?: string | undefined | null | Variable<any, string>,
	icon?: ValueTypes["AssetWhereInput"] | undefined | null | Variable<any, string>
};
	["SkillOrderByInput"]:SkillOrderByInput;
	["SkillParent"]: AliasType<{		["...on SkillCategory"] : ValueTypes["SkillCategory"]
		__typename?: boolean | `@${string}`
}>;
	["SkillParentConnectInput"]: {
	SkillCategory?: ValueTypes["SkillCategoryConnectInput"] | undefined | null | Variable<any, string>
};
	["SkillParentCreateInput"]: {
	SkillCategory?: ValueTypes["SkillCategoryCreateInput"] | undefined | null | Variable<any, string>
};
	["SkillParentCreateManyInlineInput"]: {
	/** Create and connect multiple existing SkillParent documents */
	create?: Array<ValueTypes["SkillParentCreateInput"]> | undefined | null | Variable<any, string>,
	/** Connect multiple existing SkillParent documents */
	connect?: Array<ValueTypes["SkillParentWhereUniqueInput"]> | undefined | null | Variable<any, string>
};
	["SkillParentCreateOneInlineInput"]: {
	/** Create and connect one SkillParent document */
	create?: ValueTypes["SkillParentCreateInput"] | undefined | null | Variable<any, string>,
	/** Connect one existing SkillParent document */
	connect?: ValueTypes["SkillParentWhereUniqueInput"] | undefined | null | Variable<any, string>
};
	["SkillParentUpdateInput"]: {
	SkillCategory?: ValueTypes["SkillCategoryUpdateInput"] | undefined | null | Variable<any, string>
};
	["SkillParentUpdateManyInlineInput"]: {
	/** Create and connect multiple SkillParent documents */
	create?: Array<ValueTypes["SkillParentCreateInput"]> | undefined | null | Variable<any, string>,
	/** Connect multiple existing SkillParent documents */
	connect?: Array<ValueTypes["SkillParentConnectInput"]> | undefined | null | Variable<any, string>,
	/** Override currently-connected documents with multiple existing SkillParent documents */
	set?: Array<ValueTypes["SkillParentWhereUniqueInput"]> | undefined | null | Variable<any, string>,
	/** Update multiple SkillParent documents */
	update?: Array<ValueTypes["SkillParentUpdateWithNestedWhereUniqueInput"]> | undefined | null | Variable<any, string>,
	/** Upsert multiple SkillParent documents */
	upsert?: Array<ValueTypes["SkillParentUpsertWithNestedWhereUniqueInput"]> | undefined | null | Variable<any, string>,
	/** Disconnect multiple SkillParent documents */
	disconnect?: Array<ValueTypes["SkillParentWhereUniqueInput"]> | undefined | null | Variable<any, string>,
	/** Delete multiple SkillParent documents */
	delete?: Array<ValueTypes["SkillParentWhereUniqueInput"]> | undefined | null | Variable<any, string>
};
	["SkillParentUpdateManyWithNestedWhereInput"]: {
	SkillCategory?: ValueTypes["SkillCategoryUpdateManyWithNestedWhereInput"] | undefined | null | Variable<any, string>
};
	["SkillParentUpdateOneInlineInput"]: {
	/** Create and connect one SkillParent document */
	create?: ValueTypes["SkillParentCreateInput"] | undefined | null | Variable<any, string>,
	/** Update single SkillParent document */
	update?: ValueTypes["SkillParentUpdateWithNestedWhereUniqueInput"] | undefined | null | Variable<any, string>,
	/** Upsert single SkillParent document */
	upsert?: ValueTypes["SkillParentUpsertWithNestedWhereUniqueInput"] | undefined | null | Variable<any, string>,
	/** Connect existing SkillParent document */
	connect?: ValueTypes["SkillParentWhereUniqueInput"] | undefined | null | Variable<any, string>,
	/** Disconnect currently connected SkillParent document */
	disconnect?: boolean | undefined | null | Variable<any, string>,
	/** Delete currently connected SkillParent document */
	delete?: boolean | undefined | null | Variable<any, string>
};
	["SkillParentUpdateWithNestedWhereUniqueInput"]: {
	SkillCategory?: ValueTypes["SkillCategoryUpdateWithNestedWhereUniqueInput"] | undefined | null | Variable<any, string>
};
	["SkillParentUpsertWithNestedWhereUniqueInput"]: {
	SkillCategory?: ValueTypes["SkillCategoryUpsertWithNestedWhereUniqueInput"] | undefined | null | Variable<any, string>
};
	["SkillParentWhereInput"]: {
	SkillCategory?: ValueTypes["SkillCategoryWhereInput"] | undefined | null | Variable<any, string>
};
	["SkillParentWhereUniqueInput"]: {
	SkillCategory?: ValueTypes["SkillCategoryWhereUniqueInput"] | undefined | null | Variable<any, string>
};
	["SkillUpdateInput"]: {
	name?: string | undefined | null | Variable<any, string>,
	icon?: ValueTypes["AssetUpdateOneInlineInput"] | undefined | null | Variable<any, string>
};
	["SkillUpdateManyInlineInput"]: {
	/** Create and connect multiple Skill component instances */
	create?: Array<ValueTypes["SkillCreateWithPositionInput"]> | undefined | null | Variable<any, string>,
	/** Update multiple Skill component instances */
	update?: Array<ValueTypes["SkillUpdateWithNestedWhereUniqueAndPositionInput"]> | undefined | null | Variable<any, string>,
	/** Upsert multiple Skill component instances */
	upsert?: Array<ValueTypes["SkillUpsertWithNestedWhereUniqueAndPositionInput"]> | undefined | null | Variable<any, string>,
	/** Delete multiple Skill documents */
	delete?: Array<ValueTypes["SkillWhereUniqueInput"]> | undefined | null | Variable<any, string>
};
	["SkillUpdateManyInput"]: {
	/** No fields in updateMany data input */
	_?: string | undefined | null | Variable<any, string>
};
	["SkillUpdateManyWithNestedWhereInput"]: {
	/** Document search */
	where: ValueTypes["SkillWhereInput"] | Variable<any, string>,
	/** Update many input */
	data: ValueTypes["SkillUpdateManyInput"] | Variable<any, string>
};
	["SkillUpdateOneInlineInput"]: {
	/** Create and connect one Skill document */
	create?: ValueTypes["SkillCreateInput"] | undefined | null | Variable<any, string>,
	/** Update single Skill document */
	update?: ValueTypes["SkillUpdateWithNestedWhereUniqueInput"] | undefined | null | Variable<any, string>,
	/** Upsert single Skill document */
	upsert?: ValueTypes["SkillUpsertWithNestedWhereUniqueInput"] | undefined | null | Variable<any, string>,
	/** Delete currently connected Skill document */
	delete?: boolean | undefined | null | Variable<any, string>
};
	["SkillUpdateWithNestedWhereUniqueAndPositionInput"]: {
	/** Unique component instance search */
	where: ValueTypes["SkillWhereUniqueInput"] | Variable<any, string>,
	/** Position in the list of existing component instances, will default to appending at the end of list */
	position?: ValueTypes["ConnectPositionInput"] | undefined | null | Variable<any, string>,
	/** Document to update */
	data?: ValueTypes["SkillUpdateInput"] | undefined | null | Variable<any, string>
};
	["SkillUpdateWithNestedWhereUniqueInput"]: {
	/** Unique document search */
	where: ValueTypes["SkillWhereUniqueInput"] | Variable<any, string>,
	/** Document to update */
	data: ValueTypes["SkillUpdateInput"] | Variable<any, string>
};
	["SkillUpsertInput"]: {
	/** Create document if it didn't exist */
	create: ValueTypes["SkillCreateInput"] | Variable<any, string>,
	/** Update document if it exists */
	update: ValueTypes["SkillUpdateInput"] | Variable<any, string>
};
	["SkillUpsertWithNestedWhereUniqueAndPositionInput"]: {
	/** Unique component instance search */
	where: ValueTypes["SkillWhereUniqueInput"] | Variable<any, string>,
	/** Position in the list of existing component instances, will default to appending at the end of list */
	position?: ValueTypes["ConnectPositionInput"] | undefined | null | Variable<any, string>,
	/** Document to upsert */
	data?: ValueTypes["SkillUpsertInput"] | undefined | null | Variable<any, string>
};
	["SkillUpsertWithNestedWhereUniqueInput"]: {
	/** Unique document search */
	where: ValueTypes["SkillWhereUniqueInput"] | Variable<any, string>,
	/** Upsert data */
	data: ValueTypes["SkillUpsertInput"] | Variable<any, string>
};
	/** Identifies documents */
["SkillWhereInput"]: {
	/** Contains search across all appropriate fields. */
	_search?: string | undefined | null | Variable<any, string>,
	/** Logical AND on all given filters. */
	AND?: Array<ValueTypes["SkillWhereInput"]> | undefined | null | Variable<any, string>,
	/** Logical OR on all given filters. */
	OR?: Array<ValueTypes["SkillWhereInput"]> | undefined | null | Variable<any, string>,
	/** Logical NOT on all given filters combined by AND. */
	NOT?: Array<ValueTypes["SkillWhereInput"]> | undefined | null | Variable<any, string>,
	id?: string | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	id_not?: string | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	id_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	id_not_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values containing the given string. */
	id_contains?: string | undefined | null | Variable<any, string>,
	/** All values not containing the given string. */
	id_not_contains?: string | undefined | null | Variable<any, string>,
	/** All values starting with the given string. */
	id_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values not starting with the given string. */
	id_not_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values ending with the given string. */
	id_ends_with?: string | undefined | null | Variable<any, string>,
	/** All values not ending with the given string */
	id_not_ends_with?: string | undefined | null | Variable<any, string>,
	name?: string | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	name_not?: string | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	name_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	name_not_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values containing the given string. */
	name_contains?: string | undefined | null | Variable<any, string>,
	/** All values not containing the given string. */
	name_not_contains?: string | undefined | null | Variable<any, string>,
	/** All values starting with the given string. */
	name_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values not starting with the given string. */
	name_not_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values ending with the given string. */
	name_ends_with?: string | undefined | null | Variable<any, string>,
	/** All values not ending with the given string */
	name_not_ends_with?: string | undefined | null | Variable<any, string>,
	icon?: ValueTypes["AssetWhereInput"] | undefined | null | Variable<any, string>
};
	/** References Skill record uniquely */
["SkillWhereUniqueInput"]: {
	id?: string | undefined | null | Variable<any, string>,
	name?: string | undefined | null | Variable<any, string>
};
	/** Stage system enumeration */
["Stage"]:Stage;
	["SystemDateTimeFieldVariation"]:SystemDateTimeFieldVariation;
	["Technologies"]:Technologies;
	["UnpublishLocaleInput"]: {
	/** Locales to unpublish */
	locale: ValueTypes["Locale"] | Variable<any, string>,
	/** Stages to unpublish selected locales from */
	stages: Array<ValueTypes["Stage"]> | Variable<any, string>
};
	/** User system model */
["User"]: AliasType<{
	/** System stage field */
	stage?:boolean | `@${string}`,
documentInStages?: [{	/** Potential stages that should be returned */
	stages: Array<ValueTypes["Stage"]> | Variable<any, string>,	/** Decides if the current stage should be included or not */
	includeCurrent: boolean | Variable<any, string>,	/** Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree */
	inheritLocale: boolean | Variable<any, string>},ValueTypes["User"]],
	/** Flag to determine if user is active or not */
	isActive?:boolean | `@${string}`,
	/** Profile Picture url */
	picture?:boolean | `@${string}`,
	/** The username */
	name?:boolean | `@${string}`,
	/** The time the document was published. Null on documents in draft stage. */
	publishedAt?:boolean | `@${string}`,
	/** The time the document was updated */
	updatedAt?:boolean | `@${string}`,
	/** The time the document was created */
	createdAt?:boolean | `@${string}`,
	/** The unique identifier */
	id?:boolean | `@${string}`,
	/** User Kind. Can be either MEMBER, PAT or PUBLIC */
	kind?:boolean | `@${string}`,
		__typename?: boolean | `@${string}`
}>;
	["UserConnectInput"]: {
	/** Document to connect */
	where: ValueTypes["UserWhereUniqueInput"] | Variable<any, string>,
	/** Allow to specify document position in list of connected documents, will default to appending at end of list */
	position?: ValueTypes["ConnectPositionInput"] | undefined | null | Variable<any, string>
};
	/** A connection to a list of items. */
["UserConnection"]: AliasType<{
	/** Information to aid in pagination. */
	pageInfo?:ValueTypes["PageInfo"],
	/** A list of edges. */
	edges?:ValueTypes["UserEdge"],
	aggregate?:ValueTypes["Aggregate"],
		__typename?: boolean | `@${string}`
}>;
	["UserCreateManyInlineInput"]: {
	/** Connect multiple existing User documents */
	connect?: Array<ValueTypes["UserWhereUniqueInput"]> | undefined | null | Variable<any, string>
};
	["UserCreateOneInlineInput"]: {
	/** Connect one existing User document */
	connect?: ValueTypes["UserWhereUniqueInput"] | undefined | null | Variable<any, string>
};
	/** An edge in a connection. */
["UserEdge"]: AliasType<{
	/** The item at the end of the edge. */
	node?:ValueTypes["User"],
	/** A cursor for use in pagination. */
	cursor?:boolean | `@${string}`,
		__typename?: boolean | `@${string}`
}>;
	/** System User Kind */
["UserKind"]:UserKind;
	/** Identifies documents */
["UserManyWhereInput"]: {
	/** Contains search across all appropriate fields. */
	_search?: string | undefined | null | Variable<any, string>,
	/** Logical AND on all given filters. */
	AND?: Array<ValueTypes["UserWhereInput"]> | undefined | null | Variable<any, string>,
	/** Logical OR on all given filters. */
	OR?: Array<ValueTypes["UserWhereInput"]> | undefined | null | Variable<any, string>,
	/** Logical NOT on all given filters combined by AND. */
	NOT?: Array<ValueTypes["UserWhereInput"]> | undefined | null | Variable<any, string>,
	isActive?: boolean | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	isActive_not?: boolean | undefined | null | Variable<any, string>,
	picture?: string | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	picture_not?: string | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	picture_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	picture_not_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values containing the given string. */
	picture_contains?: string | undefined | null | Variable<any, string>,
	/** All values not containing the given string. */
	picture_not_contains?: string | undefined | null | Variable<any, string>,
	/** All values starting with the given string. */
	picture_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values not starting with the given string. */
	picture_not_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values ending with the given string. */
	picture_ends_with?: string | undefined | null | Variable<any, string>,
	/** All values not ending with the given string */
	picture_not_ends_with?: string | undefined | null | Variable<any, string>,
	name?: string | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	name_not?: string | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	name_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	name_not_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values containing the given string. */
	name_contains?: string | undefined | null | Variable<any, string>,
	/** All values not containing the given string. */
	name_not_contains?: string | undefined | null | Variable<any, string>,
	/** All values starting with the given string. */
	name_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values not starting with the given string. */
	name_not_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values ending with the given string. */
	name_ends_with?: string | undefined | null | Variable<any, string>,
	/** All values not ending with the given string */
	name_not_ends_with?: string | undefined | null | Variable<any, string>,
	publishedAt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	publishedAt_not?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	publishedAt_in?: Array<ValueTypes["DateTime"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	publishedAt_not_in?: Array<ValueTypes["DateTime"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values less than the given value. */
	publishedAt_lt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values less than or equal the given value. */
	publishedAt_lte?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values greater than the given value. */
	publishedAt_gt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values greater than or equal the given value. */
	publishedAt_gte?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	updatedAt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	updatedAt_not?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	updatedAt_in?: Array<ValueTypes["DateTime"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	updatedAt_not_in?: Array<ValueTypes["DateTime"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values less than the given value. */
	updatedAt_lt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values less than or equal the given value. */
	updatedAt_lte?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values greater than the given value. */
	updatedAt_gt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values greater than or equal the given value. */
	updatedAt_gte?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	createdAt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	createdAt_not?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	createdAt_in?: Array<ValueTypes["DateTime"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	createdAt_not_in?: Array<ValueTypes["DateTime"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values less than the given value. */
	createdAt_lt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values less than or equal the given value. */
	createdAt_lte?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values greater than the given value. */
	createdAt_gt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values greater than or equal the given value. */
	createdAt_gte?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	id?: string | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	id_not?: string | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	id_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	id_not_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values containing the given string. */
	id_contains?: string | undefined | null | Variable<any, string>,
	/** All values not containing the given string. */
	id_not_contains?: string | undefined | null | Variable<any, string>,
	/** All values starting with the given string. */
	id_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values not starting with the given string. */
	id_not_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values ending with the given string. */
	id_ends_with?: string | undefined | null | Variable<any, string>,
	/** All values not ending with the given string */
	id_not_ends_with?: string | undefined | null | Variable<any, string>,
	kind?: ValueTypes["UserKind"] | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	kind_not?: ValueTypes["UserKind"] | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	kind_in?: Array<ValueTypes["UserKind"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	kind_not_in?: Array<ValueTypes["UserKind"] | undefined | null> | undefined | null | Variable<any, string>
};
	["UserOrderByInput"]:UserOrderByInput;
	["UserUpdateManyInlineInput"]: {
	/** Connect multiple existing User documents */
	connect?: Array<ValueTypes["UserConnectInput"]> | undefined | null | Variable<any, string>,
	/** Override currently-connected documents with multiple existing User documents */
	set?: Array<ValueTypes["UserWhereUniqueInput"]> | undefined | null | Variable<any, string>,
	/** Disconnect multiple User documents */
	disconnect?: Array<ValueTypes["UserWhereUniqueInput"]> | undefined | null | Variable<any, string>
};
	["UserUpdateOneInlineInput"]: {
	/** Connect existing User document */
	connect?: ValueTypes["UserWhereUniqueInput"] | undefined | null | Variable<any, string>,
	/** Disconnect currently connected User document */
	disconnect?: boolean | undefined | null | Variable<any, string>
};
	/** Identifies documents */
["UserWhereInput"]: {
	/** Contains search across all appropriate fields. */
	_search?: string | undefined | null | Variable<any, string>,
	/** Logical AND on all given filters. */
	AND?: Array<ValueTypes["UserWhereInput"]> | undefined | null | Variable<any, string>,
	/** Logical OR on all given filters. */
	OR?: Array<ValueTypes["UserWhereInput"]> | undefined | null | Variable<any, string>,
	/** Logical NOT on all given filters combined by AND. */
	NOT?: Array<ValueTypes["UserWhereInput"]> | undefined | null | Variable<any, string>,
	isActive?: boolean | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	isActive_not?: boolean | undefined | null | Variable<any, string>,
	picture?: string | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	picture_not?: string | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	picture_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	picture_not_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values containing the given string. */
	picture_contains?: string | undefined | null | Variable<any, string>,
	/** All values not containing the given string. */
	picture_not_contains?: string | undefined | null | Variable<any, string>,
	/** All values starting with the given string. */
	picture_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values not starting with the given string. */
	picture_not_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values ending with the given string. */
	picture_ends_with?: string | undefined | null | Variable<any, string>,
	/** All values not ending with the given string */
	picture_not_ends_with?: string | undefined | null | Variable<any, string>,
	name?: string | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	name_not?: string | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	name_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	name_not_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values containing the given string. */
	name_contains?: string | undefined | null | Variable<any, string>,
	/** All values not containing the given string. */
	name_not_contains?: string | undefined | null | Variable<any, string>,
	/** All values starting with the given string. */
	name_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values not starting with the given string. */
	name_not_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values ending with the given string. */
	name_ends_with?: string | undefined | null | Variable<any, string>,
	/** All values not ending with the given string */
	name_not_ends_with?: string | undefined | null | Variable<any, string>,
	publishedAt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	publishedAt_not?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	publishedAt_in?: Array<ValueTypes["DateTime"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	publishedAt_not_in?: Array<ValueTypes["DateTime"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values less than the given value. */
	publishedAt_lt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values less than or equal the given value. */
	publishedAt_lte?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values greater than the given value. */
	publishedAt_gt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values greater than or equal the given value. */
	publishedAt_gte?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	updatedAt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	updatedAt_not?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	updatedAt_in?: Array<ValueTypes["DateTime"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	updatedAt_not_in?: Array<ValueTypes["DateTime"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values less than the given value. */
	updatedAt_lt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values less than or equal the given value. */
	updatedAt_lte?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values greater than the given value. */
	updatedAt_gt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values greater than or equal the given value. */
	updatedAt_gte?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	createdAt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	createdAt_not?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	createdAt_in?: Array<ValueTypes["DateTime"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	createdAt_not_in?: Array<ValueTypes["DateTime"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values less than the given value. */
	createdAt_lt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values less than or equal the given value. */
	createdAt_lte?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values greater than the given value. */
	createdAt_gt?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	/** All values greater than or equal the given value. */
	createdAt_gte?: ValueTypes["DateTime"] | undefined | null | Variable<any, string>,
	id?: string | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	id_not?: string | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	id_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	id_not_in?: Array<string | undefined | null> | undefined | null | Variable<any, string>,
	/** All values containing the given string. */
	id_contains?: string | undefined | null | Variable<any, string>,
	/** All values not containing the given string. */
	id_not_contains?: string | undefined | null | Variable<any, string>,
	/** All values starting with the given string. */
	id_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values not starting with the given string. */
	id_not_starts_with?: string | undefined | null | Variable<any, string>,
	/** All values ending with the given string. */
	id_ends_with?: string | undefined | null | Variable<any, string>,
	/** All values not ending with the given string */
	id_not_ends_with?: string | undefined | null | Variable<any, string>,
	kind?: ValueTypes["UserKind"] | undefined | null | Variable<any, string>,
	/** All values that are not equal to given value. */
	kind_not?: ValueTypes["UserKind"] | undefined | null | Variable<any, string>,
	/** All values that are contained in given list. */
	kind_in?: Array<ValueTypes["UserKind"] | undefined | null> | undefined | null | Variable<any, string>,
	/** All values that are not contained in given list. */
	kind_not_in?: Array<ValueTypes["UserKind"] | undefined | null> | undefined | null | Variable<any, string>
};
	/** References User record uniquely */
["UserWhereUniqueInput"]: {
	id?: string | undefined | null | Variable<any, string>
};
	["Version"]: AliasType<{
	id?:boolean | `@${string}`,
	stage?:boolean | `@${string}`,
	revision?:boolean | `@${string}`,
	createdAt?:boolean | `@${string}`,
		__typename?: boolean | `@${string}`
}>;
	["VersionWhereInput"]: {
	id: string | Variable<any, string>,
	stage: ValueTypes["Stage"] | Variable<any, string>,
	revision: number | Variable<any, string>
};
	["_FilterKind"]:_FilterKind;
	["_MutationInputFieldKind"]:_MutationInputFieldKind;
	["_MutationKind"]:_MutationKind;
	["_OrderDirection"]:_OrderDirection;
	["_RelationInputCardinality"]:_RelationInputCardinality;
	["_RelationInputKind"]:_RelationInputKind;
	["_RelationKind"]:_RelationKind;
	["_SystemDateTimeFieldVariation"]:_SystemDateTimeFieldVariation
  }

export type ResolverInputTypes = {
    ["AboutMe"]: AliasType<{
	/** System stage field */
	stage?:boolean | `@${string}`,
documentInStages?: [{	/** Potential stages that should be returned */
	stages: Array<ResolverInputTypes["Stage"]>,	/** Decides if the current stage should be included or not */
	includeCurrent: boolean,	/** Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree */
	inheritLocale: boolean},ResolverInputTypes["AboutMe"]],
	/** The time the document was published. Null on documents in draft stage. */
	publishedAt?:boolean | `@${string}`,
	/** The time the document was updated */
	updatedAt?:boolean | `@${string}`,
	/** The time the document was created */
	createdAt?:boolean | `@${string}`,
	/** The unique identifier */
	id?:boolean | `@${string}`,
	contactEmail?:boolean | `@${string}`,
	description?:boolean | `@${string}`,
company?: [{	/** Allows to optionally override locale filtering behaviour in the query's subtree.

Note that `company` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument will overwrite any existing locale filtering defined in the query's tree for the subtree. */
	locales?: Array<ResolverInputTypes["Locale"]> | undefined | null},ResolverInputTypes["Company"]],
links?: [{	skip?: number | undefined | null,	after?: string | undefined | null,	before?: string | undefined | null,	first?: number | undefined | null,	last?: number | undefined | null,	/** Allows to optionally override locale filtering behaviour in the query's subtree.

Note that `links` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument will overwrite any existing locale filtering defined in the query's tree for the subtree. */
	locales?: Array<ResolverInputTypes["Locale"]> | undefined | null},ResolverInputTypes["AboutMelinksUnion"]],
publishedBy?: [{	/** Allows to optionally override locale filtering behaviour in the query's subtree.

Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument will overwrite any existing locale filtering defined in the query's tree for the subtree. */
	locales?: Array<ResolverInputTypes["Locale"]> | undefined | null},ResolverInputTypes["User"]],
updatedBy?: [{	/** Allows to optionally override locale filtering behaviour in the query's subtree.

Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument will overwrite any existing locale filtering defined in the query's tree for the subtree. */
	locales?: Array<ResolverInputTypes["Locale"]> | undefined | null},ResolverInputTypes["User"]],
createdBy?: [{	/** Allows to optionally override locale filtering behaviour in the query's subtree.

Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument will overwrite any existing locale filtering defined in the query's tree for the subtree. */
	locales?: Array<ResolverInputTypes["Locale"]> | undefined | null},ResolverInputTypes["User"]],
photo?: [{	/** Allows to optionally override locale filtering behaviour in the query's subtree.

Note that `photo` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument will overwrite any existing locale filtering defined in the query's tree for the subtree. */
	locales?: Array<ResolverInputTypes["Locale"]> | undefined | null},ResolverInputTypes["Asset"]],
scheduledIn?: [{	where?: ResolverInputTypes["ScheduledOperationWhereInput"] | undefined | null,	skip?: number | undefined | null,	after?: string | undefined | null,	before?: string | undefined | null,	first?: number | undefined | null,	last?: number | undefined | null,	/** Allows to optionally override locale filtering behaviour in the query's subtree.

Note that `scheduledIn` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument will overwrite any existing locale filtering defined in the query's tree for the subtree. */
	locales?: Array<ResolverInputTypes["Locale"]> | undefined | null},ResolverInputTypes["ScheduledOperation"]],
history?: [{	limit: number,	skip: number,	/** This is optional and can be used to fetch the document version history for a specific stage instead of the current one */
	stageOverride?: ResolverInputTypes["Stage"] | undefined | null},ResolverInputTypes["Version"]],
		__typename?: boolean | `@${string}`
}>;
	["AboutMeConnectInput"]: {
	/** Document to connect */
	where: ResolverInputTypes["AboutMeWhereUniqueInput"],
	/** Allow to specify document position in list of connected documents, will default to appending at end of list */
	position?: ResolverInputTypes["ConnectPositionInput"] | undefined | null
};
	/** A connection to a list of items. */
["AboutMeConnection"]: AliasType<{
	/** Information to aid in pagination. */
	pageInfo?:ResolverInputTypes["PageInfo"],
	/** A list of edges. */
	edges?:ResolverInputTypes["AboutMeEdge"],
	aggregate?:ResolverInputTypes["Aggregate"],
		__typename?: boolean | `@${string}`
}>;
	["AboutMeCreateInput"]: {
	updatedAt?: ResolverInputTypes["DateTime"] | undefined | null,
	createdAt?: ResolverInputTypes["DateTime"] | undefined | null,
	contactEmail: string,
	description: string,
	company?: ResolverInputTypes["CompanyCreateOneInlineInput"] | undefined | null,
	links?: ResolverInputTypes["AboutMelinksUnionCreateManyInlineInput"] | undefined | null,
	photo: ResolverInputTypes["AssetCreateOneInlineInput"]
};
	["AboutMeCreateManyInlineInput"]: {
	/** Create and connect multiple existing AboutMe documents */
	create?: Array<ResolverInputTypes["AboutMeCreateInput"]> | undefined | null,
	/** Connect multiple existing AboutMe documents */
	connect?: Array<ResolverInputTypes["AboutMeWhereUniqueInput"]> | undefined | null
};
	["AboutMeCreateOneInlineInput"]: {
	/** Create and connect one AboutMe document */
	create?: ResolverInputTypes["AboutMeCreateInput"] | undefined | null,
	/** Connect one existing AboutMe document */
	connect?: ResolverInputTypes["AboutMeWhereUniqueInput"] | undefined | null
};
	/** An edge in a connection. */
["AboutMeEdge"]: AliasType<{
	/** The item at the end of the edge. */
	node?:ResolverInputTypes["AboutMe"],
	/** A cursor for use in pagination. */
	cursor?:boolean | `@${string}`,
		__typename?: boolean | `@${string}`
}>;
	/** Identifies documents */
["AboutMeManyWhereInput"]: {
	/** Contains search across all appropriate fields. */
	_search?: string | undefined | null,
	/** Logical AND on all given filters. */
	AND?: Array<ResolverInputTypes["AboutMeWhereInput"]> | undefined | null,
	/** Logical OR on all given filters. */
	OR?: Array<ResolverInputTypes["AboutMeWhereInput"]> | undefined | null,
	/** Logical NOT on all given filters combined by AND. */
	NOT?: Array<ResolverInputTypes["AboutMeWhereInput"]> | undefined | null,
	publishedAt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values that are not equal to given value. */
	publishedAt_not?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values that are contained in given list. */
	publishedAt_in?: Array<ResolverInputTypes["DateTime"] | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	publishedAt_not_in?: Array<ResolverInputTypes["DateTime"] | undefined | null> | undefined | null,
	/** All values less than the given value. */
	publishedAt_lt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values less than or equal the given value. */
	publishedAt_lte?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values greater than the given value. */
	publishedAt_gt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values greater than or equal the given value. */
	publishedAt_gte?: ResolverInputTypes["DateTime"] | undefined | null,
	updatedAt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values that are not equal to given value. */
	updatedAt_not?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values that are contained in given list. */
	updatedAt_in?: Array<ResolverInputTypes["DateTime"] | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	updatedAt_not_in?: Array<ResolverInputTypes["DateTime"] | undefined | null> | undefined | null,
	/** All values less than the given value. */
	updatedAt_lt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values less than or equal the given value. */
	updatedAt_lte?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values greater than the given value. */
	updatedAt_gt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values greater than or equal the given value. */
	updatedAt_gte?: ResolverInputTypes["DateTime"] | undefined | null,
	createdAt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values that are not equal to given value. */
	createdAt_not?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values that are contained in given list. */
	createdAt_in?: Array<ResolverInputTypes["DateTime"] | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	createdAt_not_in?: Array<ResolverInputTypes["DateTime"] | undefined | null> | undefined | null,
	/** All values less than the given value. */
	createdAt_lt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values less than or equal the given value. */
	createdAt_lte?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values greater than the given value. */
	createdAt_gt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values greater than or equal the given value. */
	createdAt_gte?: ResolverInputTypes["DateTime"] | undefined | null,
	id?: string | undefined | null,
	/** All values that are not equal to given value. */
	id_not?: string | undefined | null,
	/** All values that are contained in given list. */
	id_in?: Array<string | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	id_not_in?: Array<string | undefined | null> | undefined | null,
	/** All values containing the given string. */
	id_contains?: string | undefined | null,
	/** All values not containing the given string. */
	id_not_contains?: string | undefined | null,
	/** All values starting with the given string. */
	id_starts_with?: string | undefined | null,
	/** All values not starting with the given string. */
	id_not_starts_with?: string | undefined | null,
	/** All values ending with the given string. */
	id_ends_with?: string | undefined | null,
	/** All values not ending with the given string */
	id_not_ends_with?: string | undefined | null,
	contactEmail?: string | undefined | null,
	/** All values that are not equal to given value. */
	contactEmail_not?: string | undefined | null,
	/** All values that are contained in given list. */
	contactEmail_in?: Array<string | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	contactEmail_not_in?: Array<string | undefined | null> | undefined | null,
	/** All values containing the given string. */
	contactEmail_contains?: string | undefined | null,
	/** All values not containing the given string. */
	contactEmail_not_contains?: string | undefined | null,
	/** All values starting with the given string. */
	contactEmail_starts_with?: string | undefined | null,
	/** All values not starting with the given string. */
	contactEmail_not_starts_with?: string | undefined | null,
	/** All values ending with the given string. */
	contactEmail_ends_with?: string | undefined | null,
	/** All values not ending with the given string */
	contactEmail_not_ends_with?: string | undefined | null,
	description?: string | undefined | null,
	/** All values that are not equal to given value. */
	description_not?: string | undefined | null,
	/** All values that are contained in given list. */
	description_in?: Array<string | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	description_not_in?: Array<string | undefined | null> | undefined | null,
	/** All values containing the given string. */
	description_contains?: string | undefined | null,
	/** All values not containing the given string. */
	description_not_contains?: string | undefined | null,
	/** All values starting with the given string. */
	description_starts_with?: string | undefined | null,
	/** All values not starting with the given string. */
	description_not_starts_with?: string | undefined | null,
	/** All values ending with the given string. */
	description_ends_with?: string | undefined | null,
	/** All values not ending with the given string */
	description_not_ends_with?: string | undefined | null,
	company?: ResolverInputTypes["CompanyWhereInput"] | undefined | null,
	publishedBy?: ResolverInputTypes["UserWhereInput"] | undefined | null,
	updatedBy?: ResolverInputTypes["UserWhereInput"] | undefined | null,
	createdBy?: ResolverInputTypes["UserWhereInput"] | undefined | null,
	photo?: ResolverInputTypes["AssetWhereInput"] | undefined | null,
	scheduledIn_every?: ResolverInputTypes["ScheduledOperationWhereInput"] | undefined | null,
	scheduledIn_some?: ResolverInputTypes["ScheduledOperationWhereInput"] | undefined | null,
	scheduledIn_none?: ResolverInputTypes["ScheduledOperationWhereInput"] | undefined | null
};
	["AboutMeOrderByInput"]:AboutMeOrderByInput;
	["AboutMeUpdateInput"]: {
	contactEmail?: string | undefined | null,
	description?: string | undefined | null,
	company?: ResolverInputTypes["CompanyUpdateOneInlineInput"] | undefined | null,
	links?: ResolverInputTypes["AboutMelinksUnionUpdateManyInlineInput"] | undefined | null,
	photo?: ResolverInputTypes["AssetUpdateOneInlineInput"] | undefined | null
};
	["AboutMeUpdateManyInlineInput"]: {
	/** Create and connect multiple AboutMe documents */
	create?: Array<ResolverInputTypes["AboutMeCreateInput"]> | undefined | null,
	/** Connect multiple existing AboutMe documents */
	connect?: Array<ResolverInputTypes["AboutMeConnectInput"]> | undefined | null,
	/** Override currently-connected documents with multiple existing AboutMe documents */
	set?: Array<ResolverInputTypes["AboutMeWhereUniqueInput"]> | undefined | null,
	/** Update multiple AboutMe documents */
	update?: Array<ResolverInputTypes["AboutMeUpdateWithNestedWhereUniqueInput"]> | undefined | null,
	/** Upsert multiple AboutMe documents */
	upsert?: Array<ResolverInputTypes["AboutMeUpsertWithNestedWhereUniqueInput"]> | undefined | null,
	/** Disconnect multiple AboutMe documents */
	disconnect?: Array<ResolverInputTypes["AboutMeWhereUniqueInput"]> | undefined | null,
	/** Delete multiple AboutMe documents */
	delete?: Array<ResolverInputTypes["AboutMeWhereUniqueInput"]> | undefined | null
};
	["AboutMeUpdateManyInput"]: {
	contactEmail?: string | undefined | null,
	description?: string | undefined | null
};
	["AboutMeUpdateManyWithNestedWhereInput"]: {
	/** Document search */
	where: ResolverInputTypes["AboutMeWhereInput"],
	/** Update many input */
	data: ResolverInputTypes["AboutMeUpdateManyInput"]
};
	["AboutMeUpdateOneInlineInput"]: {
	/** Create and connect one AboutMe document */
	create?: ResolverInputTypes["AboutMeCreateInput"] | undefined | null,
	/** Update single AboutMe document */
	update?: ResolverInputTypes["AboutMeUpdateWithNestedWhereUniqueInput"] | undefined | null,
	/** Upsert single AboutMe document */
	upsert?: ResolverInputTypes["AboutMeUpsertWithNestedWhereUniqueInput"] | undefined | null,
	/** Connect existing AboutMe document */
	connect?: ResolverInputTypes["AboutMeWhereUniqueInput"] | undefined | null,
	/** Disconnect currently connected AboutMe document */
	disconnect?: boolean | undefined | null,
	/** Delete currently connected AboutMe document */
	delete?: boolean | undefined | null
};
	["AboutMeUpdateWithNestedWhereUniqueInput"]: {
	/** Unique document search */
	where: ResolverInputTypes["AboutMeWhereUniqueInput"],
	/** Document to update */
	data: ResolverInputTypes["AboutMeUpdateInput"]
};
	["AboutMeUpsertInput"]: {
	/** Create document if it didn't exist */
	create: ResolverInputTypes["AboutMeCreateInput"],
	/** Update document if it exists */
	update: ResolverInputTypes["AboutMeUpdateInput"]
};
	["AboutMeUpsertWithNestedWhereUniqueInput"]: {
	/** Unique document search */
	where: ResolverInputTypes["AboutMeWhereUniqueInput"],
	/** Upsert data */
	data: ResolverInputTypes["AboutMeUpsertInput"]
};
	/** Identifies documents */
["AboutMeWhereInput"]: {
	/** Contains search across all appropriate fields. */
	_search?: string | undefined | null,
	/** Logical AND on all given filters. */
	AND?: Array<ResolverInputTypes["AboutMeWhereInput"]> | undefined | null,
	/** Logical OR on all given filters. */
	OR?: Array<ResolverInputTypes["AboutMeWhereInput"]> | undefined | null,
	/** Logical NOT on all given filters combined by AND. */
	NOT?: Array<ResolverInputTypes["AboutMeWhereInput"]> | undefined | null,
	publishedAt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values that are not equal to given value. */
	publishedAt_not?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values that are contained in given list. */
	publishedAt_in?: Array<ResolverInputTypes["DateTime"] | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	publishedAt_not_in?: Array<ResolverInputTypes["DateTime"] | undefined | null> | undefined | null,
	/** All values less than the given value. */
	publishedAt_lt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values less than or equal the given value. */
	publishedAt_lte?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values greater than the given value. */
	publishedAt_gt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values greater than or equal the given value. */
	publishedAt_gte?: ResolverInputTypes["DateTime"] | undefined | null,
	updatedAt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values that are not equal to given value. */
	updatedAt_not?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values that are contained in given list. */
	updatedAt_in?: Array<ResolverInputTypes["DateTime"] | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	updatedAt_not_in?: Array<ResolverInputTypes["DateTime"] | undefined | null> | undefined | null,
	/** All values less than the given value. */
	updatedAt_lt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values less than or equal the given value. */
	updatedAt_lte?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values greater than the given value. */
	updatedAt_gt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values greater than or equal the given value. */
	updatedAt_gte?: ResolverInputTypes["DateTime"] | undefined | null,
	createdAt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values that are not equal to given value. */
	createdAt_not?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values that are contained in given list. */
	createdAt_in?: Array<ResolverInputTypes["DateTime"] | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	createdAt_not_in?: Array<ResolverInputTypes["DateTime"] | undefined | null> | undefined | null,
	/** All values less than the given value. */
	createdAt_lt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values less than or equal the given value. */
	createdAt_lte?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values greater than the given value. */
	createdAt_gt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values greater than or equal the given value. */
	createdAt_gte?: ResolverInputTypes["DateTime"] | undefined | null,
	id?: string | undefined | null,
	/** All values that are not equal to given value. */
	id_not?: string | undefined | null,
	/** All values that are contained in given list. */
	id_in?: Array<string | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	id_not_in?: Array<string | undefined | null> | undefined | null,
	/** All values containing the given string. */
	id_contains?: string | undefined | null,
	/** All values not containing the given string. */
	id_not_contains?: string | undefined | null,
	/** All values starting with the given string. */
	id_starts_with?: string | undefined | null,
	/** All values not starting with the given string. */
	id_not_starts_with?: string | undefined | null,
	/** All values ending with the given string. */
	id_ends_with?: string | undefined | null,
	/** All values not ending with the given string */
	id_not_ends_with?: string | undefined | null,
	contactEmail?: string | undefined | null,
	/** All values that are not equal to given value. */
	contactEmail_not?: string | undefined | null,
	/** All values that are contained in given list. */
	contactEmail_in?: Array<string | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	contactEmail_not_in?: Array<string | undefined | null> | undefined | null,
	/** All values containing the given string. */
	contactEmail_contains?: string | undefined | null,
	/** All values not containing the given string. */
	contactEmail_not_contains?: string | undefined | null,
	/** All values starting with the given string. */
	contactEmail_starts_with?: string | undefined | null,
	/** All values not starting with the given string. */
	contactEmail_not_starts_with?: string | undefined | null,
	/** All values ending with the given string. */
	contactEmail_ends_with?: string | undefined | null,
	/** All values not ending with the given string */
	contactEmail_not_ends_with?: string | undefined | null,
	description?: string | undefined | null,
	/** All values that are not equal to given value. */
	description_not?: string | undefined | null,
	/** All values that are contained in given list. */
	description_in?: Array<string | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	description_not_in?: Array<string | undefined | null> | undefined | null,
	/** All values containing the given string. */
	description_contains?: string | undefined | null,
	/** All values not containing the given string. */
	description_not_contains?: string | undefined | null,
	/** All values starting with the given string. */
	description_starts_with?: string | undefined | null,
	/** All values not starting with the given string. */
	description_not_starts_with?: string | undefined | null,
	/** All values ending with the given string. */
	description_ends_with?: string | undefined | null,
	/** All values not ending with the given string */
	description_not_ends_with?: string | undefined | null,
	company?: ResolverInputTypes["CompanyWhereInput"] | undefined | null,
	publishedBy?: ResolverInputTypes["UserWhereInput"] | undefined | null,
	updatedBy?: ResolverInputTypes["UserWhereInput"] | undefined | null,
	createdBy?: ResolverInputTypes["UserWhereInput"] | undefined | null,
	photo?: ResolverInputTypes["AssetWhereInput"] | undefined | null,
	scheduledIn_every?: ResolverInputTypes["ScheduledOperationWhereInput"] | undefined | null,
	scheduledIn_some?: ResolverInputTypes["ScheduledOperationWhereInput"] | undefined | null,
	scheduledIn_none?: ResolverInputTypes["ScheduledOperationWhereInput"] | undefined | null
};
	/** References AboutMe record uniquely */
["AboutMeWhereUniqueInput"]: {
	id?: string | undefined | null
};
	["AboutMelinksUnion"]: AliasType<{
	Link?:ResolverInputTypes["Link"],
		__typename?: boolean | `@${string}`
}>;
	["AboutMelinksUnionConnectInput"]: {
	Link?: ResolverInputTypes["LinkConnectInput"] | undefined | null
};
	["AboutMelinksUnionCreateInput"]: {
	Link?: ResolverInputTypes["LinkCreateInput"] | undefined | null
};
	["AboutMelinksUnionCreateManyInlineInput"]: {
	/** Create and connect multiple existing AboutMelinksUnion documents */
	create?: Array<ResolverInputTypes["AboutMelinksUnionCreateInput"]> | undefined | null
};
	["AboutMelinksUnionCreateOneInlineInput"]: {
	/** Create and connect one AboutMelinksUnion document */
	create?: ResolverInputTypes["AboutMelinksUnionCreateInput"] | undefined | null
};
	["AboutMelinksUnionCreateWithPositionInput"]: {
	Link?: ResolverInputTypes["LinkCreateWithPositionInput"] | undefined | null
};
	["AboutMelinksUnionUpdateInput"]: {
	Link?: ResolverInputTypes["LinkUpdateInput"] | undefined | null
};
	["AboutMelinksUnionUpdateManyInlineInput"]: {
	/** Create and connect multiple AboutMelinksUnion component instances */
	create?: Array<ResolverInputTypes["AboutMelinksUnionCreateWithPositionInput"]> | undefined | null,
	/** Update multiple AboutMelinksUnion component instances */
	update?: Array<ResolverInputTypes["AboutMelinksUnionUpdateWithNestedWhereUniqueAndPositionInput"]> | undefined | null,
	/** Upsert multiple AboutMelinksUnion component instances */
	upsert?: Array<ResolverInputTypes["AboutMelinksUnionUpsertWithNestedWhereUniqueAndPositionInput"]> | undefined | null,
	/** Delete multiple AboutMelinksUnion documents */
	delete?: Array<ResolverInputTypes["AboutMelinksUnionWhereUniqueInput"]> | undefined | null
};
	["AboutMelinksUnionUpdateManyWithNestedWhereInput"]: {
	Link?: ResolverInputTypes["LinkUpdateManyWithNestedWhereInput"] | undefined | null
};
	["AboutMelinksUnionUpdateOneInlineInput"]: {
	/** Create and connect one AboutMelinksUnion document */
	create?: ResolverInputTypes["AboutMelinksUnionCreateInput"] | undefined | null,
	/** Update single AboutMelinksUnion document */
	update?: ResolverInputTypes["AboutMelinksUnionUpdateWithNestedWhereUniqueInput"] | undefined | null,
	/** Upsert single AboutMelinksUnion document */
	upsert?: ResolverInputTypes["AboutMelinksUnionUpsertWithNestedWhereUniqueInput"] | undefined | null,
	/** Delete currently connected AboutMelinksUnion document */
	delete?: boolean | undefined | null
};
	["AboutMelinksUnionUpdateWithNestedWhereUniqueAndPositionInput"]: {
	Link?: ResolverInputTypes["LinkUpdateWithNestedWhereUniqueAndPositionInput"] | undefined | null
};
	["AboutMelinksUnionUpdateWithNestedWhereUniqueInput"]: {
	Link?: ResolverInputTypes["LinkUpdateWithNestedWhereUniqueInput"] | undefined | null
};
	["AboutMelinksUnionUpsertWithNestedWhereUniqueAndPositionInput"]: {
	Link?: ResolverInputTypes["LinkUpsertWithNestedWhereUniqueAndPositionInput"] | undefined | null
};
	["AboutMelinksUnionUpsertWithNestedWhereUniqueInput"]: {
	Link?: ResolverInputTypes["LinkUpsertWithNestedWhereUniqueInput"] | undefined | null
};
	["AboutMelinksUnionWhereInput"]: {
	Link?: ResolverInputTypes["LinkWhereInput"] | undefined | null
};
	["AboutMelinksUnionWhereUniqueInput"]: {
	Link?: ResolverInputTypes["LinkWhereUniqueInput"] | undefined | null
};
	["Aggregate"]: AliasType<{
	count?:boolean | `@${string}`,
		__typename?: boolean | `@${string}`
}>;
	/** Asset system model */
["Asset"]: AliasType<{
	/** System stage field */
	stage?:boolean | `@${string}`,
	/** System Locale field */
	locale?:boolean | `@${string}`,
localizations?: [{	/** Potential locales that should be returned */
	locales: Array<ResolverInputTypes["Locale"]>,	/** Decides if the current locale should be included or not */
	includeCurrent: boolean},ResolverInputTypes["Asset"]],
documentInStages?: [{	/** Potential stages that should be returned */
	stages: Array<ResolverInputTypes["Stage"]>,	/** Decides if the current stage should be included or not */
	includeCurrent: boolean,	/** Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree */
	inheritLocale: boolean},ResolverInputTypes["Asset"]],
	/** The mime type of the file */
	mimeType?:boolean | `@${string}`,
	/** The file size */
	size?:boolean | `@${string}`,
	/** The file width */
	width?:boolean | `@${string}`,
	/** The height of the file */
	height?:boolean | `@${string}`,
	/** The file name */
	fileName?:boolean | `@${string}`,
	/** The file handle */
	handle?:boolean | `@${string}`,
publishedAt?: [{	/** Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both */
	variation: ResolverInputTypes["SystemDateTimeFieldVariation"]},boolean | `@${string}`],
updatedAt?: [{	/** Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both */
	variation: ResolverInputTypes["SystemDateTimeFieldVariation"]},boolean | `@${string}`],
createdAt?: [{	/** Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both */
	variation: ResolverInputTypes["SystemDateTimeFieldVariation"]},boolean | `@${string}`],
	/** The unique identifier */
	id?:boolean | `@${string}`,
publishedBy?: [{	/** Allows to optionally override locale filtering behaviour in the query's subtree.

Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument will overwrite any existing locale filtering defined in the query's tree for the subtree. */
	locales?: Array<ResolverInputTypes["Locale"]> | undefined | null},ResolverInputTypes["User"]],
updatedBy?: [{	/** Allows to optionally override locale filtering behaviour in the query's subtree.

Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument will overwrite any existing locale filtering defined in the query's tree for the subtree. */
	locales?: Array<ResolverInputTypes["Locale"]> | undefined | null},ResolverInputTypes["User"]],
createdBy?: [{	/** Allows to optionally override locale filtering behaviour in the query's subtree.

Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument will overwrite any existing locale filtering defined in the query's tree for the subtree. */
	locales?: Array<ResolverInputTypes["Locale"]> | undefined | null},ResolverInputTypes["User"]],
imageProject?: [{	where?: ResolverInputTypes["ProjectWhereInput"] | undefined | null,	orderBy?: ResolverInputTypes["ProjectOrderByInput"] | undefined | null,	skip?: number | undefined | null,	after?: string | undefined | null,	before?: string | undefined | null,	first?: number | undefined | null,	last?: number | undefined | null,	/** Allows to optionally override locale filtering behaviour in the query's subtree.

Note that `imageProject` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument will overwrite any existing locale filtering defined in the query's tree for the subtree. */
	locales?: Array<ResolverInputTypes["Locale"]> | undefined | null},ResolverInputTypes["Project"]],
og_imageSeo?: [{	where?: ResolverInputTypes["SeoWhereInput"] | undefined | null,	orderBy?: ResolverInputTypes["SeoOrderByInput"] | undefined | null,	skip?: number | undefined | null,	after?: string | undefined | null,	before?: string | undefined | null,	first?: number | undefined | null,	last?: number | undefined | null,	/** Allows to optionally override locale filtering behaviour in the query's subtree.

Note that `og_imageSeo` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument will overwrite any existing locale filtering defined in the query's tree for the subtree. */
	locales?: Array<ResolverInputTypes["Locale"]> | undefined | null},ResolverInputTypes["Seo"]],
photoAboutMe?: [{	where?: ResolverInputTypes["AboutMeWhereInput"] | undefined | null,	orderBy?: ResolverInputTypes["AboutMeOrderByInput"] | undefined | null,	skip?: number | undefined | null,	after?: string | undefined | null,	before?: string | undefined | null,	first?: number | undefined | null,	last?: number | undefined | null,	/** Allows to optionally override locale filtering behaviour in the query's subtree.

Note that `photoAboutMe` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument will overwrite any existing locale filtering defined in the query's tree for the subtree. */
	locales?: Array<ResolverInputTypes["Locale"]> | undefined | null},ResolverInputTypes["AboutMe"]],
scheduledIn?: [{	where?: ResolverInputTypes["ScheduledOperationWhereInput"] | undefined | null,	skip?: number | undefined | null,	after?: string | undefined | null,	before?: string | undefined | null,	first?: number | undefined | null,	last?: number | undefined | null,	/** Allows to optionally override locale filtering behaviour in the query's subtree.

Note that `scheduledIn` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument will overwrite any existing locale filtering defined in the query's tree for the subtree. */
	locales?: Array<ResolverInputTypes["Locale"]> | undefined | null},ResolverInputTypes["ScheduledOperation"]],
history?: [{	limit: number,	skip: number,	/** This is optional and can be used to fetch the document version history for a specific stage instead of the current one */
	stageOverride?: ResolverInputTypes["Stage"] | undefined | null},ResolverInputTypes["Version"]],
url?: [{	transformation?: ResolverInputTypes["AssetTransformationInput"] | undefined | null},boolean | `@${string}`],
		__typename?: boolean | `@${string}`
}>;
	["AssetConnectInput"]: {
	/** Document to connect */
	where: ResolverInputTypes["AssetWhereUniqueInput"],
	/** Allow to specify document position in list of connected documents, will default to appending at end of list */
	position?: ResolverInputTypes["ConnectPositionInput"] | undefined | null
};
	/** A connection to a list of items. */
["AssetConnection"]: AliasType<{
	/** Information to aid in pagination. */
	pageInfo?:ResolverInputTypes["PageInfo"],
	/** A list of edges. */
	edges?:ResolverInputTypes["AssetEdge"],
	aggregate?:ResolverInputTypes["Aggregate"],
		__typename?: boolean | `@${string}`
}>;
	["AssetCreateInput"]: {
	mimeType?: string | undefined | null,
	size?: number | undefined | null,
	width?: number | undefined | null,
	height?: number | undefined | null,
	fileName: string,
	handle: string,
	updatedAt?: ResolverInputTypes["DateTime"] | undefined | null,
	createdAt?: ResolverInputTypes["DateTime"] | undefined | null,
	imageProject?: ResolverInputTypes["ProjectCreateManyInlineInput"] | undefined | null,
	og_imageSeo?: ResolverInputTypes["SeoCreateManyInlineInput"] | undefined | null,
	iconLink?: ResolverInputTypes["LinkCreateManyInlineInput"] | undefined | null,
	iconSkill?: ResolverInputTypes["SkillCreateManyInlineInput"] | undefined | null,
	photoAboutMe?: ResolverInputTypes["AboutMeCreateManyInlineInput"] | undefined | null,
	/** Inline mutations for managing document localizations excluding the default locale */
	localizations?: ResolverInputTypes["AssetCreateLocalizationsInput"] | undefined | null
};
	["AssetCreateLocalizationDataInput"]: {
	mimeType?: string | undefined | null,
	size?: number | undefined | null,
	width?: number | undefined | null,
	height?: number | undefined | null,
	fileName: string,
	handle: string,
	updatedAt?: ResolverInputTypes["DateTime"] | undefined | null,
	createdAt?: ResolverInputTypes["DateTime"] | undefined | null
};
	["AssetCreateLocalizationInput"]: {
	/** Localization input */
	data: ResolverInputTypes["AssetCreateLocalizationDataInput"],
	locale: ResolverInputTypes["Locale"]
};
	["AssetCreateLocalizationsInput"]: {
	/** Create localizations for the newly-created document */
	create?: Array<ResolverInputTypes["AssetCreateLocalizationInput"]> | undefined | null
};
	["AssetCreateManyInlineInput"]: {
	/** Create and connect multiple existing Asset documents */
	create?: Array<ResolverInputTypes["AssetCreateInput"]> | undefined | null,
	/** Connect multiple existing Asset documents */
	connect?: Array<ResolverInputTypes["AssetWhereUniqueInput"]> | undefined | null
};
	["AssetCreateOneInlineInput"]: {
	/** Create and connect one Asset document */
	create?: ResolverInputTypes["AssetCreateInput"] | undefined | null,
	/** Connect one existing Asset document */
	connect?: ResolverInputTypes["AssetWhereUniqueInput"] | undefined | null
};
	/** An edge in a connection. */
["AssetEdge"]: AliasType<{
	/** The item at the end of the edge. */
	node?:ResolverInputTypes["Asset"],
	/** A cursor for use in pagination. */
	cursor?:boolean | `@${string}`,
		__typename?: boolean | `@${string}`
}>;
	/** Identifies documents */
["AssetManyWhereInput"]: {
	/** Contains search across all appropriate fields. */
	_search?: string | undefined | null,
	/** Logical AND on all given filters. */
	AND?: Array<ResolverInputTypes["AssetWhereInput"]> | undefined | null,
	/** Logical OR on all given filters. */
	OR?: Array<ResolverInputTypes["AssetWhereInput"]> | undefined | null,
	/** Logical NOT on all given filters combined by AND. */
	NOT?: Array<ResolverInputTypes["AssetWhereInput"]> | undefined | null,
	publishedAt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values that are not equal to given value. */
	publishedAt_not?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values that are contained in given list. */
	publishedAt_in?: Array<ResolverInputTypes["DateTime"] | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	publishedAt_not_in?: Array<ResolverInputTypes["DateTime"] | undefined | null> | undefined | null,
	/** All values less than the given value. */
	publishedAt_lt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values less than or equal the given value. */
	publishedAt_lte?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values greater than the given value. */
	publishedAt_gt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values greater than or equal the given value. */
	publishedAt_gte?: ResolverInputTypes["DateTime"] | undefined | null,
	updatedAt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values that are not equal to given value. */
	updatedAt_not?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values that are contained in given list. */
	updatedAt_in?: Array<ResolverInputTypes["DateTime"] | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	updatedAt_not_in?: Array<ResolverInputTypes["DateTime"] | undefined | null> | undefined | null,
	/** All values less than the given value. */
	updatedAt_lt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values less than or equal the given value. */
	updatedAt_lte?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values greater than the given value. */
	updatedAt_gt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values greater than or equal the given value. */
	updatedAt_gte?: ResolverInputTypes["DateTime"] | undefined | null,
	createdAt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values that are not equal to given value. */
	createdAt_not?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values that are contained in given list. */
	createdAt_in?: Array<ResolverInputTypes["DateTime"] | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	createdAt_not_in?: Array<ResolverInputTypes["DateTime"] | undefined | null> | undefined | null,
	/** All values less than the given value. */
	createdAt_lt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values less than or equal the given value. */
	createdAt_lte?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values greater than the given value. */
	createdAt_gt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values greater than or equal the given value. */
	createdAt_gte?: ResolverInputTypes["DateTime"] | undefined | null,
	id?: string | undefined | null,
	/** All values that are not equal to given value. */
	id_not?: string | undefined | null,
	/** All values that are contained in given list. */
	id_in?: Array<string | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	id_not_in?: Array<string | undefined | null> | undefined | null,
	/** All values containing the given string. */
	id_contains?: string | undefined | null,
	/** All values not containing the given string. */
	id_not_contains?: string | undefined | null,
	/** All values starting with the given string. */
	id_starts_with?: string | undefined | null,
	/** All values not starting with the given string. */
	id_not_starts_with?: string | undefined | null,
	/** All values ending with the given string. */
	id_ends_with?: string | undefined | null,
	/** All values not ending with the given string */
	id_not_ends_with?: string | undefined | null,
	publishedBy?: ResolverInputTypes["UserWhereInput"] | undefined | null,
	updatedBy?: ResolverInputTypes["UserWhereInput"] | undefined | null,
	createdBy?: ResolverInputTypes["UserWhereInput"] | undefined | null,
	imageProject_every?: ResolverInputTypes["ProjectWhereInput"] | undefined | null,
	imageProject_some?: ResolverInputTypes["ProjectWhereInput"] | undefined | null,
	imageProject_none?: ResolverInputTypes["ProjectWhereInput"] | undefined | null,
	og_imageSeo_every?: ResolverInputTypes["SeoWhereInput"] | undefined | null,
	og_imageSeo_some?: ResolverInputTypes["SeoWhereInput"] | undefined | null,
	og_imageSeo_none?: ResolverInputTypes["SeoWhereInput"] | undefined | null,
	photoAboutMe_every?: ResolverInputTypes["AboutMeWhereInput"] | undefined | null,
	photoAboutMe_some?: ResolverInputTypes["AboutMeWhereInput"] | undefined | null,
	photoAboutMe_none?: ResolverInputTypes["AboutMeWhereInput"] | undefined | null,
	scheduledIn_every?: ResolverInputTypes["ScheduledOperationWhereInput"] | undefined | null,
	scheduledIn_some?: ResolverInputTypes["ScheduledOperationWhereInput"] | undefined | null,
	scheduledIn_none?: ResolverInputTypes["ScheduledOperationWhereInput"] | undefined | null
};
	["AssetOrderByInput"]:AssetOrderByInput;
	/** Transformations for Assets */
["AssetTransformationInput"]: {
	image?: ResolverInputTypes["ImageTransformationInput"] | undefined | null,
	document?: ResolverInputTypes["DocumentTransformationInput"] | undefined | null,
	/** Pass true if you want to validate the passed transformation parameters */
	validateOptions?: boolean | undefined | null
};
	["AssetUpdateInput"]: {
	mimeType?: string | undefined | null,
	size?: number | undefined | null,
	width?: number | undefined | null,
	height?: number | undefined | null,
	fileName?: string | undefined | null,
	handle?: string | undefined | null,
	imageProject?: ResolverInputTypes["ProjectUpdateManyInlineInput"] | undefined | null,
	og_imageSeo?: ResolverInputTypes["SeoUpdateManyInlineInput"] | undefined | null,
	iconLink?: ResolverInputTypes["LinkUpdateManyInlineInput"] | undefined | null,
	iconSkill?: ResolverInputTypes["SkillUpdateManyInlineInput"] | undefined | null,
	photoAboutMe?: ResolverInputTypes["AboutMeUpdateManyInlineInput"] | undefined | null,
	/** Manage document localizations */
	localizations?: ResolverInputTypes["AssetUpdateLocalizationsInput"] | undefined | null
};
	["AssetUpdateLocalizationDataInput"]: {
	mimeType?: string | undefined | null,
	size?: number | undefined | null,
	width?: number | undefined | null,
	height?: number | undefined | null,
	fileName?: string | undefined | null,
	handle?: string | undefined | null
};
	["AssetUpdateLocalizationInput"]: {
	data: ResolverInputTypes["AssetUpdateLocalizationDataInput"],
	locale: ResolverInputTypes["Locale"]
};
	["AssetUpdateLocalizationsInput"]: {
	/** Localizations to create */
	create?: Array<ResolverInputTypes["AssetCreateLocalizationInput"]> | undefined | null,
	/** Localizations to update */
	update?: Array<ResolverInputTypes["AssetUpdateLocalizationInput"]> | undefined | null,
	upsert?: Array<ResolverInputTypes["AssetUpsertLocalizationInput"]> | undefined | null,
	/** Localizations to delete */
	delete?: Array<ResolverInputTypes["Locale"]> | undefined | null
};
	["AssetUpdateManyInlineInput"]: {
	/** Create and connect multiple Asset documents */
	create?: Array<ResolverInputTypes["AssetCreateInput"]> | undefined | null,
	/** Connect multiple existing Asset documents */
	connect?: Array<ResolverInputTypes["AssetConnectInput"]> | undefined | null,
	/** Override currently-connected documents with multiple existing Asset documents */
	set?: Array<ResolverInputTypes["AssetWhereUniqueInput"]> | undefined | null,
	/** Update multiple Asset documents */
	update?: Array<ResolverInputTypes["AssetUpdateWithNestedWhereUniqueInput"]> | undefined | null,
	/** Upsert multiple Asset documents */
	upsert?: Array<ResolverInputTypes["AssetUpsertWithNestedWhereUniqueInput"]> | undefined | null,
	/** Disconnect multiple Asset documents */
	disconnect?: Array<ResolverInputTypes["AssetWhereUniqueInput"]> | undefined | null,
	/** Delete multiple Asset documents */
	delete?: Array<ResolverInputTypes["AssetWhereUniqueInput"]> | undefined | null
};
	["AssetUpdateManyInput"]: {
	mimeType?: string | undefined | null,
	size?: number | undefined | null,
	width?: number | undefined | null,
	height?: number | undefined | null,
	fileName?: string | undefined | null,
	/** Optional updates to localizations */
	localizations?: ResolverInputTypes["AssetUpdateManyLocalizationsInput"] | undefined | null
};
	["AssetUpdateManyLocalizationDataInput"]: {
	mimeType?: string | undefined | null,
	size?: number | undefined | null,
	width?: number | undefined | null,
	height?: number | undefined | null,
	fileName?: string | undefined | null
};
	["AssetUpdateManyLocalizationInput"]: {
	data: ResolverInputTypes["AssetUpdateManyLocalizationDataInput"],
	locale: ResolverInputTypes["Locale"]
};
	["AssetUpdateManyLocalizationsInput"]: {
	/** Localizations to update */
	update?: Array<ResolverInputTypes["AssetUpdateManyLocalizationInput"]> | undefined | null
};
	["AssetUpdateManyWithNestedWhereInput"]: {
	/** Document search */
	where: ResolverInputTypes["AssetWhereInput"],
	/** Update many input */
	data: ResolverInputTypes["AssetUpdateManyInput"]
};
	["AssetUpdateOneInlineInput"]: {
	/** Create and connect one Asset document */
	create?: ResolverInputTypes["AssetCreateInput"] | undefined | null,
	/** Update single Asset document */
	update?: ResolverInputTypes["AssetUpdateWithNestedWhereUniqueInput"] | undefined | null,
	/** Upsert single Asset document */
	upsert?: ResolverInputTypes["AssetUpsertWithNestedWhereUniqueInput"] | undefined | null,
	/** Connect existing Asset document */
	connect?: ResolverInputTypes["AssetWhereUniqueInput"] | undefined | null,
	/** Disconnect currently connected Asset document */
	disconnect?: boolean | undefined | null,
	/** Delete currently connected Asset document */
	delete?: boolean | undefined | null
};
	["AssetUpdateWithNestedWhereUniqueInput"]: {
	/** Unique document search */
	where: ResolverInputTypes["AssetWhereUniqueInput"],
	/** Document to update */
	data: ResolverInputTypes["AssetUpdateInput"]
};
	["AssetUpsertInput"]: {
	/** Create document if it didn't exist */
	create: ResolverInputTypes["AssetCreateInput"],
	/** Update document if it exists */
	update: ResolverInputTypes["AssetUpdateInput"]
};
	["AssetUpsertLocalizationInput"]: {
	update: ResolverInputTypes["AssetUpdateLocalizationDataInput"],
	create: ResolverInputTypes["AssetCreateLocalizationDataInput"],
	locale: ResolverInputTypes["Locale"]
};
	["AssetUpsertWithNestedWhereUniqueInput"]: {
	/** Unique document search */
	where: ResolverInputTypes["AssetWhereUniqueInput"],
	/** Upsert data */
	data: ResolverInputTypes["AssetUpsertInput"]
};
	/** Identifies documents */
["AssetWhereInput"]: {
	/** Contains search across all appropriate fields. */
	_search?: string | undefined | null,
	/** Logical AND on all given filters. */
	AND?: Array<ResolverInputTypes["AssetWhereInput"]> | undefined | null,
	/** Logical OR on all given filters. */
	OR?: Array<ResolverInputTypes["AssetWhereInput"]> | undefined | null,
	/** Logical NOT on all given filters combined by AND. */
	NOT?: Array<ResolverInputTypes["AssetWhereInput"]> | undefined | null,
	mimeType?: string | undefined | null,
	/** All values that are not equal to given value. */
	mimeType_not?: string | undefined | null,
	/** All values that are contained in given list. */
	mimeType_in?: Array<string | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	mimeType_not_in?: Array<string | undefined | null> | undefined | null,
	/** All values containing the given string. */
	mimeType_contains?: string | undefined | null,
	/** All values not containing the given string. */
	mimeType_not_contains?: string | undefined | null,
	/** All values starting with the given string. */
	mimeType_starts_with?: string | undefined | null,
	/** All values not starting with the given string. */
	mimeType_not_starts_with?: string | undefined | null,
	/** All values ending with the given string. */
	mimeType_ends_with?: string | undefined | null,
	/** All values not ending with the given string */
	mimeType_not_ends_with?: string | undefined | null,
	size?: number | undefined | null,
	/** All values that are not equal to given value. */
	size_not?: number | undefined | null,
	/** All values that are contained in given list. */
	size_in?: Array<number | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	size_not_in?: Array<number | undefined | null> | undefined | null,
	/** All values less than the given value. */
	size_lt?: number | undefined | null,
	/** All values less than or equal the given value. */
	size_lte?: number | undefined | null,
	/** All values greater than the given value. */
	size_gt?: number | undefined | null,
	/** All values greater than or equal the given value. */
	size_gte?: number | undefined | null,
	width?: number | undefined | null,
	/** All values that are not equal to given value. */
	width_not?: number | undefined | null,
	/** All values that are contained in given list. */
	width_in?: Array<number | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	width_not_in?: Array<number | undefined | null> | undefined | null,
	/** All values less than the given value. */
	width_lt?: number | undefined | null,
	/** All values less than or equal the given value. */
	width_lte?: number | undefined | null,
	/** All values greater than the given value. */
	width_gt?: number | undefined | null,
	/** All values greater than or equal the given value. */
	width_gte?: number | undefined | null,
	height?: number | undefined | null,
	/** All values that are not equal to given value. */
	height_not?: number | undefined | null,
	/** All values that are contained in given list. */
	height_in?: Array<number | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	height_not_in?: Array<number | undefined | null> | undefined | null,
	/** All values less than the given value. */
	height_lt?: number | undefined | null,
	/** All values less than or equal the given value. */
	height_lte?: number | undefined | null,
	/** All values greater than the given value. */
	height_gt?: number | undefined | null,
	/** All values greater than or equal the given value. */
	height_gte?: number | undefined | null,
	fileName?: string | undefined | null,
	/** All values that are not equal to given value. */
	fileName_not?: string | undefined | null,
	/** All values that are contained in given list. */
	fileName_in?: Array<string | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	fileName_not_in?: Array<string | undefined | null> | undefined | null,
	/** All values containing the given string. */
	fileName_contains?: string | undefined | null,
	/** All values not containing the given string. */
	fileName_not_contains?: string | undefined | null,
	/** All values starting with the given string. */
	fileName_starts_with?: string | undefined | null,
	/** All values not starting with the given string. */
	fileName_not_starts_with?: string | undefined | null,
	/** All values ending with the given string. */
	fileName_ends_with?: string | undefined | null,
	/** All values not ending with the given string */
	fileName_not_ends_with?: string | undefined | null,
	handle?: string | undefined | null,
	/** All values that are not equal to given value. */
	handle_not?: string | undefined | null,
	/** All values that are contained in given list. */
	handle_in?: Array<string | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	handle_not_in?: Array<string | undefined | null> | undefined | null,
	/** All values containing the given string. */
	handle_contains?: string | undefined | null,
	/** All values not containing the given string. */
	handle_not_contains?: string | undefined | null,
	/** All values starting with the given string. */
	handle_starts_with?: string | undefined | null,
	/** All values not starting with the given string. */
	handle_not_starts_with?: string | undefined | null,
	/** All values ending with the given string. */
	handle_ends_with?: string | undefined | null,
	/** All values not ending with the given string */
	handle_not_ends_with?: string | undefined | null,
	publishedAt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values that are not equal to given value. */
	publishedAt_not?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values that are contained in given list. */
	publishedAt_in?: Array<ResolverInputTypes["DateTime"] | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	publishedAt_not_in?: Array<ResolverInputTypes["DateTime"] | undefined | null> | undefined | null,
	/** All values less than the given value. */
	publishedAt_lt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values less than or equal the given value. */
	publishedAt_lte?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values greater than the given value. */
	publishedAt_gt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values greater than or equal the given value. */
	publishedAt_gte?: ResolverInputTypes["DateTime"] | undefined | null,
	updatedAt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values that are not equal to given value. */
	updatedAt_not?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values that are contained in given list. */
	updatedAt_in?: Array<ResolverInputTypes["DateTime"] | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	updatedAt_not_in?: Array<ResolverInputTypes["DateTime"] | undefined | null> | undefined | null,
	/** All values less than the given value. */
	updatedAt_lt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values less than or equal the given value. */
	updatedAt_lte?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values greater than the given value. */
	updatedAt_gt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values greater than or equal the given value. */
	updatedAt_gte?: ResolverInputTypes["DateTime"] | undefined | null,
	createdAt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values that are not equal to given value. */
	createdAt_not?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values that are contained in given list. */
	createdAt_in?: Array<ResolverInputTypes["DateTime"] | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	createdAt_not_in?: Array<ResolverInputTypes["DateTime"] | undefined | null> | undefined | null,
	/** All values less than the given value. */
	createdAt_lt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values less than or equal the given value. */
	createdAt_lte?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values greater than the given value. */
	createdAt_gt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values greater than or equal the given value. */
	createdAt_gte?: ResolverInputTypes["DateTime"] | undefined | null,
	id?: string | undefined | null,
	/** All values that are not equal to given value. */
	id_not?: string | undefined | null,
	/** All values that are contained in given list. */
	id_in?: Array<string | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	id_not_in?: Array<string | undefined | null> | undefined | null,
	/** All values containing the given string. */
	id_contains?: string | undefined | null,
	/** All values not containing the given string. */
	id_not_contains?: string | undefined | null,
	/** All values starting with the given string. */
	id_starts_with?: string | undefined | null,
	/** All values not starting with the given string. */
	id_not_starts_with?: string | undefined | null,
	/** All values ending with the given string. */
	id_ends_with?: string | undefined | null,
	/** All values not ending with the given string */
	id_not_ends_with?: string | undefined | null,
	publishedBy?: ResolverInputTypes["UserWhereInput"] | undefined | null,
	updatedBy?: ResolverInputTypes["UserWhereInput"] | undefined | null,
	createdBy?: ResolverInputTypes["UserWhereInput"] | undefined | null,
	imageProject_every?: ResolverInputTypes["ProjectWhereInput"] | undefined | null,
	imageProject_some?: ResolverInputTypes["ProjectWhereInput"] | undefined | null,
	imageProject_none?: ResolverInputTypes["ProjectWhereInput"] | undefined | null,
	og_imageSeo_every?: ResolverInputTypes["SeoWhereInput"] | undefined | null,
	og_imageSeo_some?: ResolverInputTypes["SeoWhereInput"] | undefined | null,
	og_imageSeo_none?: ResolverInputTypes["SeoWhereInput"] | undefined | null,
	photoAboutMe_every?: ResolverInputTypes["AboutMeWhereInput"] | undefined | null,
	photoAboutMe_some?: ResolverInputTypes["AboutMeWhereInput"] | undefined | null,
	photoAboutMe_none?: ResolverInputTypes["AboutMeWhereInput"] | undefined | null,
	scheduledIn_every?: ResolverInputTypes["ScheduledOperationWhereInput"] | undefined | null,
	scheduledIn_some?: ResolverInputTypes["ScheduledOperationWhereInput"] | undefined | null,
	scheduledIn_none?: ResolverInputTypes["ScheduledOperationWhereInput"] | undefined | null
};
	/** References Asset record uniquely */
["AssetWhereUniqueInput"]: {
	id?: string | undefined | null
};
	["BatchPayload"]: AliasType<{
	/** The number of nodes that have been affected by the Batch operation. */
	count?:boolean | `@${string}`,
		__typename?: boolean | `@${string}`
}>;
	/** Representing a color value comprising of HEX, RGBA and css color values */
["Color"]: AliasType<{
	hex?:boolean | `@${string}`,
	rgba?:ResolverInputTypes["RGBA"],
	css?:boolean | `@${string}`,
		__typename?: boolean | `@${string}`
}>;
	/** Accepts either HEX or RGBA color value. At least one of hex or rgba value should be passed. If both are passed RGBA is used. */
["ColorInput"]: {
	hex?: ResolverInputTypes["Hex"] | undefined | null,
	rgba?: ResolverInputTypes["RGBAInput"] | undefined | null
};
	["Company"]: AliasType<{
	/** System stage field */
	stage?:boolean | `@${string}`,
	/** The unique identifier */
	id?:boolean | `@${string}`,
	companyName?:boolean | `@${string}`,
	companyWebsite?:boolean | `@${string}`,
		__typename?: boolean | `@${string}`
}>;
	["CompanyConnectInput"]: {
	/** Document to connect */
	where: ResolverInputTypes["CompanyWhereUniqueInput"],
	/** Allow to specify document position in list of connected documents, will default to appending at end of list */
	position?: ResolverInputTypes["ConnectPositionInput"] | undefined | null
};
	/** A connection to a list of items. */
["CompanyConnection"]: AliasType<{
	/** Information to aid in pagination. */
	pageInfo?:ResolverInputTypes["PageInfo"],
	/** A list of edges. */
	edges?:ResolverInputTypes["CompanyEdge"],
	aggregate?:ResolverInputTypes["Aggregate"],
		__typename?: boolean | `@${string}`
}>;
	["CompanyCreateInput"]: {
	companyName: string,
	companyWebsite: string
};
	["CompanyCreateManyInlineInput"]: {
	/** Create and connect multiple existing Company documents */
	create?: Array<ResolverInputTypes["CompanyCreateInput"]> | undefined | null
};
	["CompanyCreateOneInlineInput"]: {
	/** Create and connect one Company document */
	create?: ResolverInputTypes["CompanyCreateInput"] | undefined | null
};
	["CompanyCreateWithPositionInput"]: {
	/** Position in the list of existing component instances, will default to appending at the end of list */
	position?: ResolverInputTypes["ConnectPositionInput"] | undefined | null,
	/** Document to create */
	data: ResolverInputTypes["CompanyCreateInput"]
};
	/** An edge in a connection. */
["CompanyEdge"]: AliasType<{
	/** The item at the end of the edge. */
	node?:ResolverInputTypes["Company"],
	/** A cursor for use in pagination. */
	cursor?:boolean | `@${string}`,
		__typename?: boolean | `@${string}`
}>;
	/** Identifies documents */
["CompanyManyWhereInput"]: {
	/** Contains search across all appropriate fields. */
	_search?: string | undefined | null,
	/** Logical AND on all given filters. */
	AND?: Array<ResolverInputTypes["CompanyWhereInput"]> | undefined | null,
	/** Logical OR on all given filters. */
	OR?: Array<ResolverInputTypes["CompanyWhereInput"]> | undefined | null,
	/** Logical NOT on all given filters combined by AND. */
	NOT?: Array<ResolverInputTypes["CompanyWhereInput"]> | undefined | null,
	id?: string | undefined | null,
	/** All values that are not equal to given value. */
	id_not?: string | undefined | null,
	/** All values that are contained in given list. */
	id_in?: Array<string | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	id_not_in?: Array<string | undefined | null> | undefined | null,
	/** All values containing the given string. */
	id_contains?: string | undefined | null,
	/** All values not containing the given string. */
	id_not_contains?: string | undefined | null,
	/** All values starting with the given string. */
	id_starts_with?: string | undefined | null,
	/** All values not starting with the given string. */
	id_not_starts_with?: string | undefined | null,
	/** All values ending with the given string. */
	id_ends_with?: string | undefined | null,
	/** All values not ending with the given string */
	id_not_ends_with?: string | undefined | null,
	companyName?: string | undefined | null,
	/** All values that are not equal to given value. */
	companyName_not?: string | undefined | null,
	/** All values that are contained in given list. */
	companyName_in?: Array<string | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	companyName_not_in?: Array<string | undefined | null> | undefined | null,
	/** All values containing the given string. */
	companyName_contains?: string | undefined | null,
	/** All values not containing the given string. */
	companyName_not_contains?: string | undefined | null,
	/** All values starting with the given string. */
	companyName_starts_with?: string | undefined | null,
	/** All values not starting with the given string. */
	companyName_not_starts_with?: string | undefined | null,
	/** All values ending with the given string. */
	companyName_ends_with?: string | undefined | null,
	/** All values not ending with the given string */
	companyName_not_ends_with?: string | undefined | null,
	companyWebsite?: string | undefined | null,
	/** All values that are not equal to given value. */
	companyWebsite_not?: string | undefined | null,
	/** All values that are contained in given list. */
	companyWebsite_in?: Array<string | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	companyWebsite_not_in?: Array<string | undefined | null> | undefined | null,
	/** All values containing the given string. */
	companyWebsite_contains?: string | undefined | null,
	/** All values not containing the given string. */
	companyWebsite_not_contains?: string | undefined | null,
	/** All values starting with the given string. */
	companyWebsite_starts_with?: string | undefined | null,
	/** All values not starting with the given string. */
	companyWebsite_not_starts_with?: string | undefined | null,
	/** All values ending with the given string. */
	companyWebsite_ends_with?: string | undefined | null,
	/** All values not ending with the given string */
	companyWebsite_not_ends_with?: string | undefined | null
};
	["CompanyOrderByInput"]:CompanyOrderByInput;
	["CompanyParent"]: AliasType<{
	AboutMe?:ResolverInputTypes["AboutMe"],
		__typename?: boolean | `@${string}`
}>;
	["CompanyParentConnectInput"]: {
	AboutMe?: ResolverInputTypes["AboutMeConnectInput"] | undefined | null
};
	["CompanyParentCreateInput"]: {
	AboutMe?: ResolverInputTypes["AboutMeCreateInput"] | undefined | null
};
	["CompanyParentCreateManyInlineInput"]: {
	/** Create and connect multiple existing CompanyParent documents */
	create?: Array<ResolverInputTypes["CompanyParentCreateInput"]> | undefined | null,
	/** Connect multiple existing CompanyParent documents */
	connect?: Array<ResolverInputTypes["CompanyParentWhereUniqueInput"]> | undefined | null
};
	["CompanyParentCreateOneInlineInput"]: {
	/** Create and connect one CompanyParent document */
	create?: ResolverInputTypes["CompanyParentCreateInput"] | undefined | null,
	/** Connect one existing CompanyParent document */
	connect?: ResolverInputTypes["CompanyParentWhereUniqueInput"] | undefined | null
};
	["CompanyParentUpdateInput"]: {
	AboutMe?: ResolverInputTypes["AboutMeUpdateInput"] | undefined | null
};
	["CompanyParentUpdateManyInlineInput"]: {
	/** Create and connect multiple CompanyParent documents */
	create?: Array<ResolverInputTypes["CompanyParentCreateInput"]> | undefined | null,
	/** Connect multiple existing CompanyParent documents */
	connect?: Array<ResolverInputTypes["CompanyParentConnectInput"]> | undefined | null,
	/** Override currently-connected documents with multiple existing CompanyParent documents */
	set?: Array<ResolverInputTypes["CompanyParentWhereUniqueInput"]> | undefined | null,
	/** Update multiple CompanyParent documents */
	update?: Array<ResolverInputTypes["CompanyParentUpdateWithNestedWhereUniqueInput"]> | undefined | null,
	/** Upsert multiple CompanyParent documents */
	upsert?: Array<ResolverInputTypes["CompanyParentUpsertWithNestedWhereUniqueInput"]> | undefined | null,
	/** Disconnect multiple CompanyParent documents */
	disconnect?: Array<ResolverInputTypes["CompanyParentWhereUniqueInput"]> | undefined | null,
	/** Delete multiple CompanyParent documents */
	delete?: Array<ResolverInputTypes["CompanyParentWhereUniqueInput"]> | undefined | null
};
	["CompanyParentUpdateManyWithNestedWhereInput"]: {
	AboutMe?: ResolverInputTypes["AboutMeUpdateManyWithNestedWhereInput"] | undefined | null
};
	["CompanyParentUpdateOneInlineInput"]: {
	/** Create and connect one CompanyParent document */
	create?: ResolverInputTypes["CompanyParentCreateInput"] | undefined | null,
	/** Update single CompanyParent document */
	update?: ResolverInputTypes["CompanyParentUpdateWithNestedWhereUniqueInput"] | undefined | null,
	/** Upsert single CompanyParent document */
	upsert?: ResolverInputTypes["CompanyParentUpsertWithNestedWhereUniqueInput"] | undefined | null,
	/** Connect existing CompanyParent document */
	connect?: ResolverInputTypes["CompanyParentWhereUniqueInput"] | undefined | null,
	/** Disconnect currently connected CompanyParent document */
	disconnect?: boolean | undefined | null,
	/** Delete currently connected CompanyParent document */
	delete?: boolean | undefined | null
};
	["CompanyParentUpdateWithNestedWhereUniqueInput"]: {
	AboutMe?: ResolverInputTypes["AboutMeUpdateWithNestedWhereUniqueInput"] | undefined | null
};
	["CompanyParentUpsertWithNestedWhereUniqueInput"]: {
	AboutMe?: ResolverInputTypes["AboutMeUpsertWithNestedWhereUniqueInput"] | undefined | null
};
	["CompanyParentWhereInput"]: {
	AboutMe?: ResolverInputTypes["AboutMeWhereInput"] | undefined | null
};
	["CompanyParentWhereUniqueInput"]: {
	AboutMe?: ResolverInputTypes["AboutMeWhereUniqueInput"] | undefined | null
};
	["CompanyUpdateInput"]: {
	companyName?: string | undefined | null,
	companyWebsite?: string | undefined | null
};
	["CompanyUpdateManyInlineInput"]: {
	/** Create and connect multiple Company component instances */
	create?: Array<ResolverInputTypes["CompanyCreateWithPositionInput"]> | undefined | null,
	/** Update multiple Company component instances */
	update?: Array<ResolverInputTypes["CompanyUpdateWithNestedWhereUniqueAndPositionInput"]> | undefined | null,
	/** Upsert multiple Company component instances */
	upsert?: Array<ResolverInputTypes["CompanyUpsertWithNestedWhereUniqueAndPositionInput"]> | undefined | null,
	/** Delete multiple Company documents */
	delete?: Array<ResolverInputTypes["CompanyWhereUniqueInput"]> | undefined | null
};
	["CompanyUpdateManyInput"]: {
	companyName?: string | undefined | null,
	companyWebsite?: string | undefined | null
};
	["CompanyUpdateManyWithNestedWhereInput"]: {
	/** Document search */
	where: ResolverInputTypes["CompanyWhereInput"],
	/** Update many input */
	data: ResolverInputTypes["CompanyUpdateManyInput"]
};
	["CompanyUpdateOneInlineInput"]: {
	/** Create and connect one Company document */
	create?: ResolverInputTypes["CompanyCreateInput"] | undefined | null,
	/** Update single Company document */
	update?: ResolverInputTypes["CompanyUpdateWithNestedWhereUniqueInput"] | undefined | null,
	/** Upsert single Company document */
	upsert?: ResolverInputTypes["CompanyUpsertWithNestedWhereUniqueInput"] | undefined | null,
	/** Delete currently connected Company document */
	delete?: boolean | undefined | null
};
	["CompanyUpdateWithNestedWhereUniqueAndPositionInput"]: {
	/** Unique component instance search */
	where: ResolverInputTypes["CompanyWhereUniqueInput"],
	/** Position in the list of existing component instances, will default to appending at the end of list */
	position?: ResolverInputTypes["ConnectPositionInput"] | undefined | null,
	/** Document to update */
	data?: ResolverInputTypes["CompanyUpdateInput"] | undefined | null
};
	["CompanyUpdateWithNestedWhereUniqueInput"]: {
	/** Unique document search */
	where: ResolverInputTypes["CompanyWhereUniqueInput"],
	/** Document to update */
	data: ResolverInputTypes["CompanyUpdateInput"]
};
	["CompanyUpsertInput"]: {
	/** Create document if it didn't exist */
	create: ResolverInputTypes["CompanyCreateInput"],
	/** Update document if it exists */
	update: ResolverInputTypes["CompanyUpdateInput"]
};
	["CompanyUpsertWithNestedWhereUniqueAndPositionInput"]: {
	/** Unique component instance search */
	where: ResolverInputTypes["CompanyWhereUniqueInput"],
	/** Position in the list of existing component instances, will default to appending at the end of list */
	position?: ResolverInputTypes["ConnectPositionInput"] | undefined | null,
	/** Document to upsert */
	data?: ResolverInputTypes["CompanyUpsertInput"] | undefined | null
};
	["CompanyUpsertWithNestedWhereUniqueInput"]: {
	/** Unique document search */
	where: ResolverInputTypes["CompanyWhereUniqueInput"],
	/** Upsert data */
	data: ResolverInputTypes["CompanyUpsertInput"]
};
	/** Identifies documents */
["CompanyWhereInput"]: {
	/** Contains search across all appropriate fields. */
	_search?: string | undefined | null,
	/** Logical AND on all given filters. */
	AND?: Array<ResolverInputTypes["CompanyWhereInput"]> | undefined | null,
	/** Logical OR on all given filters. */
	OR?: Array<ResolverInputTypes["CompanyWhereInput"]> | undefined | null,
	/** Logical NOT on all given filters combined by AND. */
	NOT?: Array<ResolverInputTypes["CompanyWhereInput"]> | undefined | null,
	id?: string | undefined | null,
	/** All values that are not equal to given value. */
	id_not?: string | undefined | null,
	/** All values that are contained in given list. */
	id_in?: Array<string | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	id_not_in?: Array<string | undefined | null> | undefined | null,
	/** All values containing the given string. */
	id_contains?: string | undefined | null,
	/** All values not containing the given string. */
	id_not_contains?: string | undefined | null,
	/** All values starting with the given string. */
	id_starts_with?: string | undefined | null,
	/** All values not starting with the given string. */
	id_not_starts_with?: string | undefined | null,
	/** All values ending with the given string. */
	id_ends_with?: string | undefined | null,
	/** All values not ending with the given string */
	id_not_ends_with?: string | undefined | null,
	companyName?: string | undefined | null,
	/** All values that are not equal to given value. */
	companyName_not?: string | undefined | null,
	/** All values that are contained in given list. */
	companyName_in?: Array<string | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	companyName_not_in?: Array<string | undefined | null> | undefined | null,
	/** All values containing the given string. */
	companyName_contains?: string | undefined | null,
	/** All values not containing the given string. */
	companyName_not_contains?: string | undefined | null,
	/** All values starting with the given string. */
	companyName_starts_with?: string | undefined | null,
	/** All values not starting with the given string. */
	companyName_not_starts_with?: string | undefined | null,
	/** All values ending with the given string. */
	companyName_ends_with?: string | undefined | null,
	/** All values not ending with the given string */
	companyName_not_ends_with?: string | undefined | null,
	companyWebsite?: string | undefined | null,
	/** All values that are not equal to given value. */
	companyWebsite_not?: string | undefined | null,
	/** All values that are contained in given list. */
	companyWebsite_in?: Array<string | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	companyWebsite_not_in?: Array<string | undefined | null> | undefined | null,
	/** All values containing the given string. */
	companyWebsite_contains?: string | undefined | null,
	/** All values not containing the given string. */
	companyWebsite_not_contains?: string | undefined | null,
	/** All values starting with the given string. */
	companyWebsite_starts_with?: string | undefined | null,
	/** All values not starting with the given string. */
	companyWebsite_not_starts_with?: string | undefined | null,
	/** All values ending with the given string. */
	companyWebsite_ends_with?: string | undefined | null,
	/** All values not ending with the given string */
	companyWebsite_not_ends_with?: string | undefined | null
};
	/** References Company record uniquely */
["CompanyWhereUniqueInput"]: {
	id?: string | undefined | null
};
	["ConnectPositionInput"]: {
	/** Connect document after specified document */
	after?: string | undefined | null,
	/** Connect document before specified document */
	before?: string | undefined | null,
	/** Connect document at first position */
	start?: boolean | undefined | null,
	/** Connect document at last position */
	end?: boolean | undefined | null
};
	/** A date string, such as 2007-12-03 (YYYY-MM-DD), compliant with ISO 8601 standard for representation of dates using the Gregorian calendar. */
["Date"]:unknown;
	/** A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the date-timeformat outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representationof dates and times using the Gregorian calendar. */
["DateTime"]:unknown;
	["DocumentFileTypes"]:DocumentFileTypes;
	["DocumentOutputInput"]: {
	/** Transforms a document into a desired file type.
See this matrix for format support:

PDF:	jpg, odp, ods, odt, png, svg, txt, and webp
DOC:	docx, html, jpg, odt, pdf, png, svg, txt, and webp
DOCX:	doc, html, jpg, odt, pdf, png, svg, txt, and webp
ODT:	doc, docx, html, jpg, pdf, png, svg, txt, and webp
XLS:	jpg, pdf, ods, png, svg, xlsx, and webp
XLSX:	jpg, pdf, ods, png, svg, xls, and webp
ODS:	jpg, pdf, png, xls, svg, xlsx, and webp
PPT:	jpg, odp, pdf, png, svg, pptx, and webp
PPTX:	jpg, odp, pdf, png, svg, ppt, and webp
ODP:	jpg, pdf, png, ppt, svg, pptx, and webp
BMP:	jpg, odp, ods, odt, pdf, png, svg, and webp
GIF:	jpg, odp, ods, odt, pdf, png, svg, and webp
JPG:	jpg, odp, ods, odt, pdf, png, svg, and webp
PNG:	jpg, odp, ods, odt, pdf, png, svg, and webp
WEBP:	jpg, odp, ods, odt, pdf, png, svg, and webp
TIFF:	jpg, odp, ods, odt, pdf, png, svg, and webp
AI:	    jpg, odp, ods, odt, pdf, png, svg, and webp
PSD:	jpg, odp, ods, odt, pdf, png, svg, and webp
SVG:	jpg, odp, ods, odt, pdf, png, and webp
HTML:	jpg, odt, pdf, svg, txt, and webp
TXT:	jpg, html, odt, pdf, svg, and webp */
	format?: ResolverInputTypes["DocumentFileTypes"] | undefined | null
};
	/** Transformations for Documents */
["DocumentTransformationInput"]: {
	/** Changes the output for the file. */
	output?: ResolverInputTypes["DocumentOutputInput"] | undefined | null
};
	["DocumentVersion"]: AliasType<{
	id?:boolean | `@${string}`,
	stage?:boolean | `@${string}`,
	revision?:boolean | `@${string}`,
	createdAt?:boolean | `@${string}`,
	data?:boolean | `@${string}`,
		__typename?: boolean | `@${string}`
}>;
	["Hex"]:unknown;
	["ImageFit"]:ImageFit;
	["ImageResizeInput"]: {
	/** The width in pixels to resize the image to. The value must be an integer from 1 to 10000. */
	width?: number | undefined | null,
	/** The height in pixels to resize the image to. The value must be an integer from 1 to 10000. */
	height?: number | undefined | null,
	/** The default value for the fit parameter is fit:clip. */
	fit?: ResolverInputTypes["ImageFit"] | undefined | null
};
	/** Transformations for Images */
["ImageTransformationInput"]: {
	/** Resizes the image */
	resize?: ResolverInputTypes["ImageResizeInput"] | undefined | null
};
	/** Raw JSON value */
["Json"]:unknown;
	["Link"]: AliasType<{
	/** System stage field */
	stage?:boolean | `@${string}`,
	/** The unique identifier */
	id?:boolean | `@${string}`,
	name?:boolean | `@${string}`,
	url?:boolean | `@${string}`,
icon?: [{	/** Allows to optionally override locale filtering behaviour in the query's subtree.

Note that `icon` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument will overwrite any existing locale filtering defined in the query's tree for the subtree. */
	locales?: Array<ResolverInputTypes["Locale"]> | undefined | null},ResolverInputTypes["Asset"]],
		__typename?: boolean | `@${string}`
}>;
	["LinkConnectInput"]: {
	/** Document to connect */
	where: ResolverInputTypes["LinkWhereUniqueInput"],
	/** Allow to specify document position in list of connected documents, will default to appending at end of list */
	position?: ResolverInputTypes["ConnectPositionInput"] | undefined | null
};
	/** A connection to a list of items. */
["LinkConnection"]: AliasType<{
	/** Information to aid in pagination. */
	pageInfo?:ResolverInputTypes["PageInfo"],
	/** A list of edges. */
	edges?:ResolverInputTypes["LinkEdge"],
	aggregate?:ResolverInputTypes["Aggregate"],
		__typename?: boolean | `@${string}`
}>;
	["LinkCreateInput"]: {
	name: string,
	url: string,
	icon?: ResolverInputTypes["AssetCreateOneInlineInput"] | undefined | null
};
	["LinkCreateManyInlineInput"]: {
	/** Create and connect multiple existing Link documents */
	create?: Array<ResolverInputTypes["LinkCreateInput"]> | undefined | null
};
	["LinkCreateOneInlineInput"]: {
	/** Create and connect one Link document */
	create?: ResolverInputTypes["LinkCreateInput"] | undefined | null
};
	["LinkCreateWithPositionInput"]: {
	/** Position in the list of existing component instances, will default to appending at the end of list */
	position?: ResolverInputTypes["ConnectPositionInput"] | undefined | null,
	/** Document to create */
	data: ResolverInputTypes["LinkCreateInput"]
};
	/** An edge in a connection. */
["LinkEdge"]: AliasType<{
	/** The item at the end of the edge. */
	node?:ResolverInputTypes["Link"],
	/** A cursor for use in pagination. */
	cursor?:boolean | `@${string}`,
		__typename?: boolean | `@${string}`
}>;
	/** Identifies documents */
["LinkManyWhereInput"]: {
	/** Contains search across all appropriate fields. */
	_search?: string | undefined | null,
	/** Logical AND on all given filters. */
	AND?: Array<ResolverInputTypes["LinkWhereInput"]> | undefined | null,
	/** Logical OR on all given filters. */
	OR?: Array<ResolverInputTypes["LinkWhereInput"]> | undefined | null,
	/** Logical NOT on all given filters combined by AND. */
	NOT?: Array<ResolverInputTypes["LinkWhereInput"]> | undefined | null,
	id?: string | undefined | null,
	/** All values that are not equal to given value. */
	id_not?: string | undefined | null,
	/** All values that are contained in given list. */
	id_in?: Array<string | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	id_not_in?: Array<string | undefined | null> | undefined | null,
	/** All values containing the given string. */
	id_contains?: string | undefined | null,
	/** All values not containing the given string. */
	id_not_contains?: string | undefined | null,
	/** All values starting with the given string. */
	id_starts_with?: string | undefined | null,
	/** All values not starting with the given string. */
	id_not_starts_with?: string | undefined | null,
	/** All values ending with the given string. */
	id_ends_with?: string | undefined | null,
	/** All values not ending with the given string */
	id_not_ends_with?: string | undefined | null,
	name?: string | undefined | null,
	/** All values that are not equal to given value. */
	name_not?: string | undefined | null,
	/** All values that are contained in given list. */
	name_in?: Array<string | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	name_not_in?: Array<string | undefined | null> | undefined | null,
	/** All values containing the given string. */
	name_contains?: string | undefined | null,
	/** All values not containing the given string. */
	name_not_contains?: string | undefined | null,
	/** All values starting with the given string. */
	name_starts_with?: string | undefined | null,
	/** All values not starting with the given string. */
	name_not_starts_with?: string | undefined | null,
	/** All values ending with the given string. */
	name_ends_with?: string | undefined | null,
	/** All values not ending with the given string */
	name_not_ends_with?: string | undefined | null,
	url?: string | undefined | null,
	/** All values that are not equal to given value. */
	url_not?: string | undefined | null,
	/** All values that are contained in given list. */
	url_in?: Array<string | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	url_not_in?: Array<string | undefined | null> | undefined | null,
	/** All values containing the given string. */
	url_contains?: string | undefined | null,
	/** All values not containing the given string. */
	url_not_contains?: string | undefined | null,
	/** All values starting with the given string. */
	url_starts_with?: string | undefined | null,
	/** All values not starting with the given string. */
	url_not_starts_with?: string | undefined | null,
	/** All values ending with the given string. */
	url_ends_with?: string | undefined | null,
	/** All values not ending with the given string */
	url_not_ends_with?: string | undefined | null,
	icon?: ResolverInputTypes["AssetWhereInput"] | undefined | null
};
	["LinkOrderByInput"]:LinkOrderByInput;
	["LinkParent"]: AliasType<{
	AboutMe?:ResolverInputTypes["AboutMe"],
		__typename?: boolean | `@${string}`
}>;
	["LinkParentConnectInput"]: {
	AboutMe?: ResolverInputTypes["AboutMeConnectInput"] | undefined | null
};
	["LinkParentCreateInput"]: {
	AboutMe?: ResolverInputTypes["AboutMeCreateInput"] | undefined | null
};
	["LinkParentCreateManyInlineInput"]: {
	/** Create and connect multiple existing LinkParent documents */
	create?: Array<ResolverInputTypes["LinkParentCreateInput"]> | undefined | null,
	/** Connect multiple existing LinkParent documents */
	connect?: Array<ResolverInputTypes["LinkParentWhereUniqueInput"]> | undefined | null
};
	["LinkParentCreateOneInlineInput"]: {
	/** Create and connect one LinkParent document */
	create?: ResolverInputTypes["LinkParentCreateInput"] | undefined | null,
	/** Connect one existing LinkParent document */
	connect?: ResolverInputTypes["LinkParentWhereUniqueInput"] | undefined | null
};
	["LinkParentUpdateInput"]: {
	AboutMe?: ResolverInputTypes["AboutMeUpdateInput"] | undefined | null
};
	["LinkParentUpdateManyInlineInput"]: {
	/** Create and connect multiple LinkParent documents */
	create?: Array<ResolverInputTypes["LinkParentCreateInput"]> | undefined | null,
	/** Connect multiple existing LinkParent documents */
	connect?: Array<ResolverInputTypes["LinkParentConnectInput"]> | undefined | null,
	/** Override currently-connected documents with multiple existing LinkParent documents */
	set?: Array<ResolverInputTypes["LinkParentWhereUniqueInput"]> | undefined | null,
	/** Update multiple LinkParent documents */
	update?: Array<ResolverInputTypes["LinkParentUpdateWithNestedWhereUniqueInput"]> | undefined | null,
	/** Upsert multiple LinkParent documents */
	upsert?: Array<ResolverInputTypes["LinkParentUpsertWithNestedWhereUniqueInput"]> | undefined | null,
	/** Disconnect multiple LinkParent documents */
	disconnect?: Array<ResolverInputTypes["LinkParentWhereUniqueInput"]> | undefined | null,
	/** Delete multiple LinkParent documents */
	delete?: Array<ResolverInputTypes["LinkParentWhereUniqueInput"]> | undefined | null
};
	["LinkParentUpdateManyWithNestedWhereInput"]: {
	AboutMe?: ResolverInputTypes["AboutMeUpdateManyWithNestedWhereInput"] | undefined | null
};
	["LinkParentUpdateOneInlineInput"]: {
	/** Create and connect one LinkParent document */
	create?: ResolverInputTypes["LinkParentCreateInput"] | undefined | null,
	/** Update single LinkParent document */
	update?: ResolverInputTypes["LinkParentUpdateWithNestedWhereUniqueInput"] | undefined | null,
	/** Upsert single LinkParent document */
	upsert?: ResolverInputTypes["LinkParentUpsertWithNestedWhereUniqueInput"] | undefined | null,
	/** Connect existing LinkParent document */
	connect?: ResolverInputTypes["LinkParentWhereUniqueInput"] | undefined | null,
	/** Disconnect currently connected LinkParent document */
	disconnect?: boolean | undefined | null,
	/** Delete currently connected LinkParent document */
	delete?: boolean | undefined | null
};
	["LinkParentUpdateWithNestedWhereUniqueInput"]: {
	AboutMe?: ResolverInputTypes["AboutMeUpdateWithNestedWhereUniqueInput"] | undefined | null
};
	["LinkParentUpsertWithNestedWhereUniqueInput"]: {
	AboutMe?: ResolverInputTypes["AboutMeUpsertWithNestedWhereUniqueInput"] | undefined | null
};
	["LinkParentWhereInput"]: {
	AboutMe?: ResolverInputTypes["AboutMeWhereInput"] | undefined | null
};
	["LinkParentWhereUniqueInput"]: {
	AboutMe?: ResolverInputTypes["AboutMeWhereUniqueInput"] | undefined | null
};
	["LinkUpdateInput"]: {
	name?: string | undefined | null,
	url?: string | undefined | null,
	icon?: ResolverInputTypes["AssetUpdateOneInlineInput"] | undefined | null
};
	["LinkUpdateManyInlineInput"]: {
	/** Create and connect multiple Link component instances */
	create?: Array<ResolverInputTypes["LinkCreateWithPositionInput"]> | undefined | null,
	/** Update multiple Link component instances */
	update?: Array<ResolverInputTypes["LinkUpdateWithNestedWhereUniqueAndPositionInput"]> | undefined | null,
	/** Upsert multiple Link component instances */
	upsert?: Array<ResolverInputTypes["LinkUpsertWithNestedWhereUniqueAndPositionInput"]> | undefined | null,
	/** Delete multiple Link documents */
	delete?: Array<ResolverInputTypes["LinkWhereUniqueInput"]> | undefined | null
};
	["LinkUpdateManyInput"]: {
	url?: string | undefined | null
};
	["LinkUpdateManyWithNestedWhereInput"]: {
	/** Document search */
	where: ResolverInputTypes["LinkWhereInput"],
	/** Update many input */
	data: ResolverInputTypes["LinkUpdateManyInput"]
};
	["LinkUpdateOneInlineInput"]: {
	/** Create and connect one Link document */
	create?: ResolverInputTypes["LinkCreateInput"] | undefined | null,
	/** Update single Link document */
	update?: ResolverInputTypes["LinkUpdateWithNestedWhereUniqueInput"] | undefined | null,
	/** Upsert single Link document */
	upsert?: ResolverInputTypes["LinkUpsertWithNestedWhereUniqueInput"] | undefined | null,
	/** Delete currently connected Link document */
	delete?: boolean | undefined | null
};
	["LinkUpdateWithNestedWhereUniqueAndPositionInput"]: {
	/** Unique component instance search */
	where: ResolverInputTypes["LinkWhereUniqueInput"],
	/** Position in the list of existing component instances, will default to appending at the end of list */
	position?: ResolverInputTypes["ConnectPositionInput"] | undefined | null,
	/** Document to update */
	data?: ResolverInputTypes["LinkUpdateInput"] | undefined | null
};
	["LinkUpdateWithNestedWhereUniqueInput"]: {
	/** Unique document search */
	where: ResolverInputTypes["LinkWhereUniqueInput"],
	/** Document to update */
	data: ResolverInputTypes["LinkUpdateInput"]
};
	["LinkUpsertInput"]: {
	/** Create document if it didn't exist */
	create: ResolverInputTypes["LinkCreateInput"],
	/** Update document if it exists */
	update: ResolverInputTypes["LinkUpdateInput"]
};
	["LinkUpsertWithNestedWhereUniqueAndPositionInput"]: {
	/** Unique component instance search */
	where: ResolverInputTypes["LinkWhereUniqueInput"],
	/** Position in the list of existing component instances, will default to appending at the end of list */
	position?: ResolverInputTypes["ConnectPositionInput"] | undefined | null,
	/** Document to upsert */
	data?: ResolverInputTypes["LinkUpsertInput"] | undefined | null
};
	["LinkUpsertWithNestedWhereUniqueInput"]: {
	/** Unique document search */
	where: ResolverInputTypes["LinkWhereUniqueInput"],
	/** Upsert data */
	data: ResolverInputTypes["LinkUpsertInput"]
};
	/** Identifies documents */
["LinkWhereInput"]: {
	/** Contains search across all appropriate fields. */
	_search?: string | undefined | null,
	/** Logical AND on all given filters. */
	AND?: Array<ResolverInputTypes["LinkWhereInput"]> | undefined | null,
	/** Logical OR on all given filters. */
	OR?: Array<ResolverInputTypes["LinkWhereInput"]> | undefined | null,
	/** Logical NOT on all given filters combined by AND. */
	NOT?: Array<ResolverInputTypes["LinkWhereInput"]> | undefined | null,
	id?: string | undefined | null,
	/** All values that are not equal to given value. */
	id_not?: string | undefined | null,
	/** All values that are contained in given list. */
	id_in?: Array<string | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	id_not_in?: Array<string | undefined | null> | undefined | null,
	/** All values containing the given string. */
	id_contains?: string | undefined | null,
	/** All values not containing the given string. */
	id_not_contains?: string | undefined | null,
	/** All values starting with the given string. */
	id_starts_with?: string | undefined | null,
	/** All values not starting with the given string. */
	id_not_starts_with?: string | undefined | null,
	/** All values ending with the given string. */
	id_ends_with?: string | undefined | null,
	/** All values not ending with the given string */
	id_not_ends_with?: string | undefined | null,
	name?: string | undefined | null,
	/** All values that are not equal to given value. */
	name_not?: string | undefined | null,
	/** All values that are contained in given list. */
	name_in?: Array<string | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	name_not_in?: Array<string | undefined | null> | undefined | null,
	/** All values containing the given string. */
	name_contains?: string | undefined | null,
	/** All values not containing the given string. */
	name_not_contains?: string | undefined | null,
	/** All values starting with the given string. */
	name_starts_with?: string | undefined | null,
	/** All values not starting with the given string. */
	name_not_starts_with?: string | undefined | null,
	/** All values ending with the given string. */
	name_ends_with?: string | undefined | null,
	/** All values not ending with the given string */
	name_not_ends_with?: string | undefined | null,
	url?: string | undefined | null,
	/** All values that are not equal to given value. */
	url_not?: string | undefined | null,
	/** All values that are contained in given list. */
	url_in?: Array<string | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	url_not_in?: Array<string | undefined | null> | undefined | null,
	/** All values containing the given string. */
	url_contains?: string | undefined | null,
	/** All values not containing the given string. */
	url_not_contains?: string | undefined | null,
	/** All values starting with the given string. */
	url_starts_with?: string | undefined | null,
	/** All values not starting with the given string. */
	url_not_starts_with?: string | undefined | null,
	/** All values ending with the given string. */
	url_ends_with?: string | undefined | null,
	/** All values not ending with the given string */
	url_not_ends_with?: string | undefined | null,
	icon?: ResolverInputTypes["AssetWhereInput"] | undefined | null
};
	/** References Link record uniquely */
["LinkWhereUniqueInput"]: {
	id?: string | undefined | null,
	name?: string | undefined | null
};
	/** Locale system enumeration */
["Locale"]:Locale;
	/** Representing a geolocation point with latitude and longitude */
["Location"]: AliasType<{
	latitude?:boolean | `@${string}`,
	longitude?:boolean | `@${string}`,
distance?: [{	from: ResolverInputTypes["LocationInput"]},boolean | `@${string}`],
		__typename?: boolean | `@${string}`
}>;
	/** Input for a geolocation point with latitude and longitude */
["LocationInput"]: {
	latitude: number,
	longitude: number
};
	/** The Long scalar type represents non-fractional signed whole numeric values. Long can represent values between -(2^63) and 2^63 - 1. */
["Long"]:unknown;
	["Mutation"]: AliasType<{
createAsset?: [{	data: ResolverInputTypes["AssetCreateInput"]},ResolverInputTypes["Asset"]],
updateAsset?: [{	where: ResolverInputTypes["AssetWhereUniqueInput"],	data: ResolverInputTypes["AssetUpdateInput"]},ResolverInputTypes["Asset"]],
deleteAsset?: [{	/** Document to delete */
	where: ResolverInputTypes["AssetWhereUniqueInput"]},ResolverInputTypes["Asset"]],
upsertAsset?: [{	where: ResolverInputTypes["AssetWhereUniqueInput"],	upsert: ResolverInputTypes["AssetUpsertInput"]},ResolverInputTypes["Asset"]],
publishAsset?: [{	/** Document to publish */
	where: ResolverInputTypes["AssetWhereUniqueInput"],	/** Optional localizations to publish */
	locales?: Array<ResolverInputTypes["Locale"]> | undefined | null,	/** Whether to publish the base document */
	publishBase?: boolean | undefined | null,	/** Whether to include the default locale when publishBase is set */
	withDefaultLocale?: boolean | undefined | null,	/** Publishing target stage */
	to: Array<ResolverInputTypes["Stage"]>},ResolverInputTypes["Asset"]],
unpublishAsset?: [{	/** Document to unpublish */
	where: ResolverInputTypes["AssetWhereUniqueInput"],	/** Stages to unpublish document from */
	from: Array<ResolverInputTypes["Stage"]>,	/** Optional locales to unpublish. Unpublishing the default locale will completely remove the document from the selected stages */
	locales?: Array<ResolverInputTypes["Locale"]> | undefined | null,	/** Unpublish complete document including default localization and relations from stages. Can be disabled. */
	unpublishBase?: boolean | undefined | null},ResolverInputTypes["Asset"]],
updateManyAssetsConnection?: [{	/** Documents to apply update on */
	where?: ResolverInputTypes["AssetManyWhereInput"] | undefined | null,	/** Updates to document content */
	data: ResolverInputTypes["AssetUpdateManyInput"],	skip?: number | undefined | null,	first?: number | undefined | null,	last?: number | undefined | null,	before?: string | undefined | null,	after?: string | undefined | null},ResolverInputTypes["AssetConnection"]],
deleteManyAssetsConnection?: [{	/** Documents to delete */
	where?: ResolverInputTypes["AssetManyWhereInput"] | undefined | null,	skip?: number | undefined | null,	first?: number | undefined | null,	last?: number | undefined | null,	before?: string | undefined | null,	after?: string | undefined | null},ResolverInputTypes["AssetConnection"]],
publishManyAssetsConnection?: [{	/** Identifies documents in each stage to be published */
	where?: ResolverInputTypes["AssetManyWhereInput"] | undefined | null,	/** Stage to find matching documents in */
	from?: ResolverInputTypes["Stage"] | undefined | null,	/** Stages to publish documents to */
	to: Array<ResolverInputTypes["Stage"]>,	skip?: number | undefined | null,	first?: number | undefined | null,	last?: number | undefined | null,	before?: string | undefined | null,	after?: string | undefined | null,	/** Document localizations to publish */
	locales?: Array<ResolverInputTypes["Locale"]> | undefined | null,	/** Whether to publish the base document */
	publishBase?: boolean | undefined | null,	/** Whether to include the default locale when publishBase is true */
	withDefaultLocale?: boolean | undefined | null},ResolverInputTypes["AssetConnection"]],
unpublishManyAssetsConnection?: [{	/** Identifies documents in draft stage */
	where?: ResolverInputTypes["AssetManyWhereInput"] | undefined | null,	/** Stage to find matching documents in */
	stage?: ResolverInputTypes["Stage"] | undefined | null,	/** Stages to unpublish documents from */
	from: Array<ResolverInputTypes["Stage"]>,	skip?: number | undefined | null,	first?: number | undefined | null,	last?: number | undefined | null,	before?: string | undefined | null,	after?: string | undefined | null,	/** Locales to unpublish */
	locales?: Array<ResolverInputTypes["Locale"]> | undefined | null,	/** Whether to unpublish the base document and default localization */
	unpublishBase?: boolean | undefined | null},ResolverInputTypes["AssetConnection"]],
updateManyAssets?: [{	/** Documents to apply update on */
	where?: ResolverInputTypes["AssetManyWhereInput"] | undefined | null,	/** Updates to document content */
	data: ResolverInputTypes["AssetUpdateManyInput"]},ResolverInputTypes["BatchPayload"]],
deleteManyAssets?: [{	/** Documents to delete */
	where?: ResolverInputTypes["AssetManyWhereInput"] | undefined | null},ResolverInputTypes["BatchPayload"]],
publishManyAssets?: [{	/** Identifies documents in each stage to be published */
	where?: ResolverInputTypes["AssetManyWhereInput"] | undefined | null,	/** Stages to publish documents to */
	to: Array<ResolverInputTypes["Stage"]>,	/** Document localizations to publish */
	locales?: Array<ResolverInputTypes["Locale"]> | undefined | null,	/** Whether to publish the base document */
	publishBase?: boolean | undefined | null,	/** Whether to include the default locale when publishBase is true */
	withDefaultLocale?: boolean | undefined | null},ResolverInputTypes["BatchPayload"]],
unpublishManyAssets?: [{	/** Identifies documents in each stage */
	where?: ResolverInputTypes["AssetManyWhereInput"] | undefined | null,	/** Stages to unpublish documents from */
	from: Array<ResolverInputTypes["Stage"]>,	/** Locales to unpublish */
	locales?: Array<ResolverInputTypes["Locale"]> | undefined | null,	/** Whether to unpublish the base document and default localization */
	unpublishBase?: boolean | undefined | null},ResolverInputTypes["BatchPayload"]],
schedulePublishAsset?: [{	/** Document to publish */
	where: ResolverInputTypes["AssetWhereUniqueInput"],	/** Optional localizations to publish */
	locales?: Array<ResolverInputTypes["Locale"]> | undefined | null,	/** Whether to publish the base document */
	publishBase?: boolean | undefined | null,	/** Whether to include the default locale when publishBase is set */
	withDefaultLocale?: boolean | undefined | null,	/** Publishing target stage */
	to: Array<ResolverInputTypes["Stage"]>,	/** Release at point in time, will create new release containing this operation */
	releaseAt?: ResolverInputTypes["DateTime"] | undefined | null,	/** Optionally attach this scheduled operation to an existing release */
	releaseId?: string | undefined | null},ResolverInputTypes["Asset"]],
scheduleUnpublishAsset?: [{	/** Document to unpublish */
	where: ResolverInputTypes["AssetWhereUniqueInput"],	/** Stages to unpublish document from */
	from: Array<ResolverInputTypes["Stage"]>,	/** Release at point in time, will create new release containing this operation */
	releaseAt?: ResolverInputTypes["DateTime"] | undefined | null,	/** Optionally attach this scheduled operation to an existing release */
	releaseId?: string | undefined | null,	/** Optional locales to unpublish. Unpublishing the default locale will completely remove the document from the selected stages */
	locales?: Array<ResolverInputTypes["Locale"]> | undefined | null,	/** Unpublish complete document including default localization and relations from stages. Can be disabled. */
	unpublishBase?: boolean | undefined | null},ResolverInputTypes["Asset"]],
deleteScheduledOperation?: [{	/** Document to delete */
	where: ResolverInputTypes["ScheduledOperationWhereUniqueInput"]},ResolverInputTypes["ScheduledOperation"]],
createScheduledRelease?: [{	data: ResolverInputTypes["ScheduledReleaseCreateInput"]},ResolverInputTypes["ScheduledRelease"]],
updateScheduledRelease?: [{	where: ResolverInputTypes["ScheduledReleaseWhereUniqueInput"],	data: ResolverInputTypes["ScheduledReleaseUpdateInput"]},ResolverInputTypes["ScheduledRelease"]],
deleteScheduledRelease?: [{	/** Document to delete */
	where: ResolverInputTypes["ScheduledReleaseWhereUniqueInput"]},ResolverInputTypes["ScheduledRelease"]],
createProject?: [{	data: ResolverInputTypes["ProjectCreateInput"]},ResolverInputTypes["Project"]],
updateProject?: [{	where: ResolverInputTypes["ProjectWhereUniqueInput"],	data: ResolverInputTypes["ProjectUpdateInput"]},ResolverInputTypes["Project"]],
deleteProject?: [{	/** Document to delete */
	where: ResolverInputTypes["ProjectWhereUniqueInput"]},ResolverInputTypes["Project"]],
upsertProject?: [{	where: ResolverInputTypes["ProjectWhereUniqueInput"],	upsert: ResolverInputTypes["ProjectUpsertInput"]},ResolverInputTypes["Project"]],
publishProject?: [{	/** Document to publish */
	where: ResolverInputTypes["ProjectWhereUniqueInput"],	/** Publishing target stage */
	to: Array<ResolverInputTypes["Stage"]>},ResolverInputTypes["Project"]],
unpublishProject?: [{	/** Document to unpublish */
	where: ResolverInputTypes["ProjectWhereUniqueInput"],	/** Stages to unpublish document from */
	from: Array<ResolverInputTypes["Stage"]>},ResolverInputTypes["Project"]],
updateManyProjectsConnection?: [{	/** Documents to apply update on */
	where?: ResolverInputTypes["ProjectManyWhereInput"] | undefined | null,	/** Updates to document content */
	data: ResolverInputTypes["ProjectUpdateManyInput"],	skip?: number | undefined | null,	first?: number | undefined | null,	last?: number | undefined | null,	before?: string | undefined | null,	after?: string | undefined | null},ResolverInputTypes["ProjectConnection"]],
deleteManyProjectsConnection?: [{	/** Documents to delete */
	where?: ResolverInputTypes["ProjectManyWhereInput"] | undefined | null,	skip?: number | undefined | null,	first?: number | undefined | null,	last?: number | undefined | null,	before?: string | undefined | null,	after?: string | undefined | null},ResolverInputTypes["ProjectConnection"]],
publishManyProjectsConnection?: [{	/** Identifies documents in each stage to be published */
	where?: ResolverInputTypes["ProjectManyWhereInput"] | undefined | null,	/** Stage to find matching documents in */
	from?: ResolverInputTypes["Stage"] | undefined | null,	/** Stages to publish documents to */
	to: Array<ResolverInputTypes["Stage"]>,	skip?: number | undefined | null,	first?: number | undefined | null,	last?: number | undefined | null,	before?: string | undefined | null,	after?: string | undefined | null},ResolverInputTypes["ProjectConnection"]],
unpublishManyProjectsConnection?: [{	/** Identifies documents in draft stage */
	where?: ResolverInputTypes["ProjectManyWhereInput"] | undefined | null,	/** Stage to find matching documents in */
	stage?: ResolverInputTypes["Stage"] | undefined | null,	/** Stages to unpublish documents from */
	from: Array<ResolverInputTypes["Stage"]>,	skip?: number | undefined | null,	first?: number | undefined | null,	last?: number | undefined | null,	before?: string | undefined | null,	after?: string | undefined | null},ResolverInputTypes["ProjectConnection"]],
updateManyProjects?: [{	/** Documents to apply update on */
	where?: ResolverInputTypes["ProjectManyWhereInput"] | undefined | null,	/** Updates to document content */
	data: ResolverInputTypes["ProjectUpdateManyInput"]},ResolverInputTypes["BatchPayload"]],
deleteManyProjects?: [{	/** Documents to delete */
	where?: ResolverInputTypes["ProjectManyWhereInput"] | undefined | null},ResolverInputTypes["BatchPayload"]],
publishManyProjects?: [{	/** Identifies documents in each stage to be published */
	where?: ResolverInputTypes["ProjectManyWhereInput"] | undefined | null,	/** Stages to publish documents to */
	to: Array<ResolverInputTypes["Stage"]>},ResolverInputTypes["BatchPayload"]],
unpublishManyProjects?: [{	/** Identifies documents in each stage */
	where?: ResolverInputTypes["ProjectManyWhereInput"] | undefined | null,	/** Stages to unpublish documents from */
	from: Array<ResolverInputTypes["Stage"]>},ResolverInputTypes["BatchPayload"]],
schedulePublishProject?: [{	/** Document to publish */
	where: ResolverInputTypes["ProjectWhereUniqueInput"],	/** Publishing target stage */
	to: Array<ResolverInputTypes["Stage"]>,	/** Release at point in time, will create new release containing this operation */
	releaseAt?: ResolverInputTypes["DateTime"] | undefined | null,	/** Optionally attach this scheduled operation to an existing release */
	releaseId?: string | undefined | null},ResolverInputTypes["Project"]],
scheduleUnpublishProject?: [{	/** Document to unpublish */
	where: ResolverInputTypes["ProjectWhereUniqueInput"],	/** Stages to unpublish document from */
	from: Array<ResolverInputTypes["Stage"]>,	/** Release at point in time, will create new release containing this operation */
	releaseAt?: ResolverInputTypes["DateTime"] | undefined | null,	/** Optionally attach this scheduled operation to an existing release */
	releaseId?: string | undefined | null},ResolverInputTypes["Project"]],
createSeo?: [{	data: ResolverInputTypes["SeoCreateInput"]},ResolverInputTypes["Seo"]],
updateSeo?: [{	where: ResolverInputTypes["SeoWhereUniqueInput"],	data: ResolverInputTypes["SeoUpdateInput"]},ResolverInputTypes["Seo"]],
deleteSeo?: [{	/** Document to delete */
	where: ResolverInputTypes["SeoWhereUniqueInput"]},ResolverInputTypes["Seo"]],
upsertSeo?: [{	where: ResolverInputTypes["SeoWhereUniqueInput"],	upsert: ResolverInputTypes["SeoUpsertInput"]},ResolverInputTypes["Seo"]],
publishSeo?: [{	/** Document to publish */
	where: ResolverInputTypes["SeoWhereUniqueInput"],	/** Publishing target stage */
	to: Array<ResolverInputTypes["Stage"]>},ResolverInputTypes["Seo"]],
unpublishSeo?: [{	/** Document to unpublish */
	where: ResolverInputTypes["SeoWhereUniqueInput"],	/** Stages to unpublish document from */
	from: Array<ResolverInputTypes["Stage"]>},ResolverInputTypes["Seo"]],
updateManySeosConnection?: [{	/** Documents to apply update on */
	where?: ResolverInputTypes["SeoManyWhereInput"] | undefined | null,	/** Updates to document content */
	data: ResolverInputTypes["SeoUpdateManyInput"],	skip?: number | undefined | null,	first?: number | undefined | null,	last?: number | undefined | null,	before?: string | undefined | null,	after?: string | undefined | null},ResolverInputTypes["SeoConnection"]],
deleteManySeosConnection?: [{	/** Documents to delete */
	where?: ResolverInputTypes["SeoManyWhereInput"] | undefined | null,	skip?: number | undefined | null,	first?: number | undefined | null,	last?: number | undefined | null,	before?: string | undefined | null,	after?: string | undefined | null},ResolverInputTypes["SeoConnection"]],
publishManySeosConnection?: [{	/** Identifies documents in each stage to be published */
	where?: ResolverInputTypes["SeoManyWhereInput"] | undefined | null,	/** Stage to find matching documents in */
	from?: ResolverInputTypes["Stage"] | undefined | null,	/** Stages to publish documents to */
	to: Array<ResolverInputTypes["Stage"]>,	skip?: number | undefined | null,	first?: number | undefined | null,	last?: number | undefined | null,	before?: string | undefined | null,	after?: string | undefined | null},ResolverInputTypes["SeoConnection"]],
unpublishManySeosConnection?: [{	/** Identifies documents in draft stage */
	where?: ResolverInputTypes["SeoManyWhereInput"] | undefined | null,	/** Stage to find matching documents in */
	stage?: ResolverInputTypes["Stage"] | undefined | null,	/** Stages to unpublish documents from */
	from: Array<ResolverInputTypes["Stage"]>,	skip?: number | undefined | null,	first?: number | undefined | null,	last?: number | undefined | null,	before?: string | undefined | null,	after?: string | undefined | null},ResolverInputTypes["SeoConnection"]],
updateManySeos?: [{	/** Documents to apply update on */
	where?: ResolverInputTypes["SeoManyWhereInput"] | undefined | null,	/** Updates to document content */
	data: ResolverInputTypes["SeoUpdateManyInput"]},ResolverInputTypes["BatchPayload"]],
deleteManySeos?: [{	/** Documents to delete */
	where?: ResolverInputTypes["SeoManyWhereInput"] | undefined | null},ResolverInputTypes["BatchPayload"]],
publishManySeos?: [{	/** Identifies documents in each stage to be published */
	where?: ResolverInputTypes["SeoManyWhereInput"] | undefined | null,	/** Stages to publish documents to */
	to: Array<ResolverInputTypes["Stage"]>},ResolverInputTypes["BatchPayload"]],
unpublishManySeos?: [{	/** Identifies documents in each stage */
	where?: ResolverInputTypes["SeoManyWhereInput"] | undefined | null,	/** Stages to unpublish documents from */
	from: Array<ResolverInputTypes["Stage"]>},ResolverInputTypes["BatchPayload"]],
schedulePublishSeo?: [{	/** Document to publish */
	where: ResolverInputTypes["SeoWhereUniqueInput"],	/** Publishing target stage */
	to: Array<ResolverInputTypes["Stage"]>,	/** Release at point in time, will create new release containing this operation */
	releaseAt?: ResolverInputTypes["DateTime"] | undefined | null,	/** Optionally attach this scheduled operation to an existing release */
	releaseId?: string | undefined | null},ResolverInputTypes["Seo"]],
scheduleUnpublishSeo?: [{	/** Document to unpublish */
	where: ResolverInputTypes["SeoWhereUniqueInput"],	/** Stages to unpublish document from */
	from: Array<ResolverInputTypes["Stage"]>,	/** Release at point in time, will create new release containing this operation */
	releaseAt?: ResolverInputTypes["DateTime"] | undefined | null,	/** Optionally attach this scheduled operation to an existing release */
	releaseId?: string | undefined | null},ResolverInputTypes["Seo"]],
createAboutMe?: [{	data: ResolverInputTypes["AboutMeCreateInput"]},ResolverInputTypes["AboutMe"]],
updateAboutMe?: [{	where: ResolverInputTypes["AboutMeWhereUniqueInput"],	data: ResolverInputTypes["AboutMeUpdateInput"]},ResolverInputTypes["AboutMe"]],
deleteAboutMe?: [{	/** Document to delete */
	where: ResolverInputTypes["AboutMeWhereUniqueInput"]},ResolverInputTypes["AboutMe"]],
upsertAboutMe?: [{	where: ResolverInputTypes["AboutMeWhereUniqueInput"],	upsert: ResolverInputTypes["AboutMeUpsertInput"]},ResolverInputTypes["AboutMe"]],
publishAboutMe?: [{	/** Document to publish */
	where: ResolverInputTypes["AboutMeWhereUniqueInput"],	/** Publishing target stage */
	to: Array<ResolverInputTypes["Stage"]>},ResolverInputTypes["AboutMe"]],
unpublishAboutMe?: [{	/** Document to unpublish */
	where: ResolverInputTypes["AboutMeWhereUniqueInput"],	/** Stages to unpublish document from */
	from: Array<ResolverInputTypes["Stage"]>},ResolverInputTypes["AboutMe"]],
updateManyAboutMesConnection?: [{	/** Documents to apply update on */
	where?: ResolverInputTypes["AboutMeManyWhereInput"] | undefined | null,	/** Updates to document content */
	data: ResolverInputTypes["AboutMeUpdateManyInput"],	skip?: number | undefined | null,	first?: number | undefined | null,	last?: number | undefined | null,	before?: string | undefined | null,	after?: string | undefined | null},ResolverInputTypes["AboutMeConnection"]],
deleteManyAboutMesConnection?: [{	/** Documents to delete */
	where?: ResolverInputTypes["AboutMeManyWhereInput"] | undefined | null,	skip?: number | undefined | null,	first?: number | undefined | null,	last?: number | undefined | null,	before?: string | undefined | null,	after?: string | undefined | null},ResolverInputTypes["AboutMeConnection"]],
publishManyAboutMesConnection?: [{	/** Identifies documents in each stage to be published */
	where?: ResolverInputTypes["AboutMeManyWhereInput"] | undefined | null,	/** Stage to find matching documents in */
	from?: ResolverInputTypes["Stage"] | undefined | null,	/** Stages to publish documents to */
	to: Array<ResolverInputTypes["Stage"]>,	skip?: number | undefined | null,	first?: number | undefined | null,	last?: number | undefined | null,	before?: string | undefined | null,	after?: string | undefined | null},ResolverInputTypes["AboutMeConnection"]],
unpublishManyAboutMesConnection?: [{	/** Identifies documents in draft stage */
	where?: ResolverInputTypes["AboutMeManyWhereInput"] | undefined | null,	/** Stage to find matching documents in */
	stage?: ResolverInputTypes["Stage"] | undefined | null,	/** Stages to unpublish documents from */
	from: Array<ResolverInputTypes["Stage"]>,	skip?: number | undefined | null,	first?: number | undefined | null,	last?: number | undefined | null,	before?: string | undefined | null,	after?: string | undefined | null},ResolverInputTypes["AboutMeConnection"]],
updateManyAboutMes?: [{	/** Documents to apply update on */
	where?: ResolverInputTypes["AboutMeManyWhereInput"] | undefined | null,	/** Updates to document content */
	data: ResolverInputTypes["AboutMeUpdateManyInput"]},ResolverInputTypes["BatchPayload"]],
deleteManyAboutMes?: [{	/** Documents to delete */
	where?: ResolverInputTypes["AboutMeManyWhereInput"] | undefined | null},ResolverInputTypes["BatchPayload"]],
publishManyAboutMes?: [{	/** Identifies documents in each stage to be published */
	where?: ResolverInputTypes["AboutMeManyWhereInput"] | undefined | null,	/** Stages to publish documents to */
	to: Array<ResolverInputTypes["Stage"]>},ResolverInputTypes["BatchPayload"]],
unpublishManyAboutMes?: [{	/** Identifies documents in each stage */
	where?: ResolverInputTypes["AboutMeManyWhereInput"] | undefined | null,	/** Stages to unpublish documents from */
	from: Array<ResolverInputTypes["Stage"]>},ResolverInputTypes["BatchPayload"]],
schedulePublishAboutMe?: [{	/** Document to publish */
	where: ResolverInputTypes["AboutMeWhereUniqueInput"],	/** Publishing target stage */
	to: Array<ResolverInputTypes["Stage"]>,	/** Release at point in time, will create new release containing this operation */
	releaseAt?: ResolverInputTypes["DateTime"] | undefined | null,	/** Optionally attach this scheduled operation to an existing release */
	releaseId?: string | undefined | null},ResolverInputTypes["AboutMe"]],
scheduleUnpublishAboutMe?: [{	/** Document to unpublish */
	where: ResolverInputTypes["AboutMeWhereUniqueInput"],	/** Stages to unpublish document from */
	from: Array<ResolverInputTypes["Stage"]>,	/** Release at point in time, will create new release containing this operation */
	releaseAt?: ResolverInputTypes["DateTime"] | undefined | null,	/** Optionally attach this scheduled operation to an existing release */
	releaseId?: string | undefined | null},ResolverInputTypes["AboutMe"]],
createSkillCategory?: [{	data: ResolverInputTypes["SkillCategoryCreateInput"]},ResolverInputTypes["SkillCategory"]],
updateSkillCategory?: [{	where: ResolverInputTypes["SkillCategoryWhereUniqueInput"],	data: ResolverInputTypes["SkillCategoryUpdateInput"]},ResolverInputTypes["SkillCategory"]],
deleteSkillCategory?: [{	/** Document to delete */
	where: ResolverInputTypes["SkillCategoryWhereUniqueInput"]},ResolverInputTypes["SkillCategory"]],
upsertSkillCategory?: [{	where: ResolverInputTypes["SkillCategoryWhereUniqueInput"],	upsert: ResolverInputTypes["SkillCategoryUpsertInput"]},ResolverInputTypes["SkillCategory"]],
publishSkillCategory?: [{	/** Document to publish */
	where: ResolverInputTypes["SkillCategoryWhereUniqueInput"],	/** Publishing target stage */
	to: Array<ResolverInputTypes["Stage"]>},ResolverInputTypes["SkillCategory"]],
unpublishSkillCategory?: [{	/** Document to unpublish */
	where: ResolverInputTypes["SkillCategoryWhereUniqueInput"],	/** Stages to unpublish document from */
	from: Array<ResolverInputTypes["Stage"]>},ResolverInputTypes["SkillCategory"]],
updateManySkillCategoriesConnection?: [{	/** Documents to apply update on */
	where?: ResolverInputTypes["SkillCategoryManyWhereInput"] | undefined | null,	/** Updates to document content */
	data: ResolverInputTypes["SkillCategoryUpdateManyInput"],	skip?: number | undefined | null,	first?: number | undefined | null,	last?: number | undefined | null,	before?: string | undefined | null,	after?: string | undefined | null},ResolverInputTypes["SkillCategoryConnection"]],
deleteManySkillCategoriesConnection?: [{	/** Documents to delete */
	where?: ResolverInputTypes["SkillCategoryManyWhereInput"] | undefined | null,	skip?: number | undefined | null,	first?: number | undefined | null,	last?: number | undefined | null,	before?: string | undefined | null,	after?: string | undefined | null},ResolverInputTypes["SkillCategoryConnection"]],
publishManySkillCategoriesConnection?: [{	/** Identifies documents in each stage to be published */
	where?: ResolverInputTypes["SkillCategoryManyWhereInput"] | undefined | null,	/** Stage to find matching documents in */
	from?: ResolverInputTypes["Stage"] | undefined | null,	/** Stages to publish documents to */
	to: Array<ResolverInputTypes["Stage"]>,	skip?: number | undefined | null,	first?: number | undefined | null,	last?: number | undefined | null,	before?: string | undefined | null,	after?: string | undefined | null},ResolverInputTypes["SkillCategoryConnection"]],
unpublishManySkillCategoriesConnection?: [{	/** Identifies documents in draft stage */
	where?: ResolverInputTypes["SkillCategoryManyWhereInput"] | undefined | null,	/** Stage to find matching documents in */
	stage?: ResolverInputTypes["Stage"] | undefined | null,	/** Stages to unpublish documents from */
	from: Array<ResolverInputTypes["Stage"]>,	skip?: number | undefined | null,	first?: number | undefined | null,	last?: number | undefined | null,	before?: string | undefined | null,	after?: string | undefined | null},ResolverInputTypes["SkillCategoryConnection"]],
updateManySkillCategories?: [{	/** Documents to apply update on */
	where?: ResolverInputTypes["SkillCategoryManyWhereInput"] | undefined | null,	/** Updates to document content */
	data: ResolverInputTypes["SkillCategoryUpdateManyInput"]},ResolverInputTypes["BatchPayload"]],
deleteManySkillCategories?: [{	/** Documents to delete */
	where?: ResolverInputTypes["SkillCategoryManyWhereInput"] | undefined | null},ResolverInputTypes["BatchPayload"]],
publishManySkillCategories?: [{	/** Identifies documents in each stage to be published */
	where?: ResolverInputTypes["SkillCategoryManyWhereInput"] | undefined | null,	/** Stages to publish documents to */
	to: Array<ResolverInputTypes["Stage"]>},ResolverInputTypes["BatchPayload"]],
unpublishManySkillCategories?: [{	/** Identifies documents in each stage */
	where?: ResolverInputTypes["SkillCategoryManyWhereInput"] | undefined | null,	/** Stages to unpublish documents from */
	from: Array<ResolverInputTypes["Stage"]>},ResolverInputTypes["BatchPayload"]],
schedulePublishSkillCategory?: [{	/** Document to publish */
	where: ResolverInputTypes["SkillCategoryWhereUniqueInput"],	/** Publishing target stage */
	to: Array<ResolverInputTypes["Stage"]>,	/** Release at point in time, will create new release containing this operation */
	releaseAt?: ResolverInputTypes["DateTime"] | undefined | null,	/** Optionally attach this scheduled operation to an existing release */
	releaseId?: string | undefined | null},ResolverInputTypes["SkillCategory"]],
scheduleUnpublishSkillCategory?: [{	/** Document to unpublish */
	where: ResolverInputTypes["SkillCategoryWhereUniqueInput"],	/** Stages to unpublish document from */
	from: Array<ResolverInputTypes["Stage"]>,	/** Release at point in time, will create new release containing this operation */
	releaseAt?: ResolverInputTypes["DateTime"] | undefined | null,	/** Optionally attach this scheduled operation to an existing release */
	releaseId?: string | undefined | null},ResolverInputTypes["SkillCategory"]],
		__typename?: boolean | `@${string}`
}>;
	/** An object with an ID */
["Node"]:AliasType<{
		/** The id of the object. */
	id?:boolean | `@${string}`,
	/** The Stage of an object */
	stage?:boolean | `@${string}`;
		['...on AboutMe']?: Omit<ResolverInputTypes["AboutMe"],keyof ResolverInputTypes["Node"]>;
		['...on Asset']?: Omit<ResolverInputTypes["Asset"],keyof ResolverInputTypes["Node"]>;
		['...on Project']?: Omit<ResolverInputTypes["Project"],keyof ResolverInputTypes["Node"]>;
		['...on ScheduledOperation']?: Omit<ResolverInputTypes["ScheduledOperation"],keyof ResolverInputTypes["Node"]>;
		['...on ScheduledRelease']?: Omit<ResolverInputTypes["ScheduledRelease"],keyof ResolverInputTypes["Node"]>;
		['...on Seo']?: Omit<ResolverInputTypes["Seo"],keyof ResolverInputTypes["Node"]>;
		['...on SkillCategory']?: Omit<ResolverInputTypes["SkillCategory"],keyof ResolverInputTypes["Node"]>;
		['...on User']?: Omit<ResolverInputTypes["User"],keyof ResolverInputTypes["Node"]>;
		__typename?: boolean | `@${string}`
}>;
	/** Information about pagination in a connection. */
["PageInfo"]: AliasType<{
	/** When paginating forwards, are there more items? */
	hasNextPage?:boolean | `@${string}`,
	/** When paginating backwards, are there more items? */
	hasPreviousPage?:boolean | `@${string}`,
	/** When paginating backwards, the cursor to continue. */
	startCursor?:boolean | `@${string}`,
	/** When paginating forwards, the cursor to continue. */
	endCursor?:boolean | `@${string}`,
	/** Number of items in the current page. */
	pageSize?:boolean | `@${string}`,
		__typename?: boolean | `@${string}`
}>;
	["Project"]: AliasType<{
	/** System stage field */
	stage?:boolean | `@${string}`,
documentInStages?: [{	/** Potential stages that should be returned */
	stages: Array<ResolverInputTypes["Stage"]>,	/** Decides if the current stage should be included or not */
	includeCurrent: boolean,	/** Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree */
	inheritLocale: boolean},ResolverInputTypes["Project"]],
	/** The time the document was published. Null on documents in draft stage. */
	publishedAt?:boolean | `@${string}`,
	/** The time the document was updated */
	updatedAt?:boolean | `@${string}`,
	/** The time the document was created */
	createdAt?:boolean | `@${string}`,
	/** The unique identifier */
	id?:boolean | `@${string}`,
	name?:boolean | `@${string}`,
	description?:boolean | `@${string}`,
	demo?:boolean | `@${string}`,
	sourceCode?:boolean | `@${string}`,
publishedBy?: [{	/** Allows to optionally override locale filtering behaviour in the query's subtree.

Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument will overwrite any existing locale filtering defined in the query's tree for the subtree. */
	locales?: Array<ResolverInputTypes["Locale"]> | undefined | null},ResolverInputTypes["User"]],
updatedBy?: [{	/** Allows to optionally override locale filtering behaviour in the query's subtree.

Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument will overwrite any existing locale filtering defined in the query's tree for the subtree. */
	locales?: Array<ResolverInputTypes["Locale"]> | undefined | null},ResolverInputTypes["User"]],
createdBy?: [{	/** Allows to optionally override locale filtering behaviour in the query's subtree.

Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument will overwrite any existing locale filtering defined in the query's tree for the subtree. */
	locales?: Array<ResolverInputTypes["Locale"]> | undefined | null},ResolverInputTypes["User"]],
image?: [{	where?: ResolverInputTypes["AssetWhereInput"] | undefined | null,	orderBy?: ResolverInputTypes["AssetOrderByInput"] | undefined | null,	skip?: number | undefined | null,	after?: string | undefined | null,	before?: string | undefined | null,	first?: number | undefined | null,	last?: number | undefined | null,	/** Allows to optionally override locale filtering behaviour in the query's subtree.

Note that `image` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument will overwrite any existing locale filtering defined in the query's tree for the subtree. */
	locales?: Array<ResolverInputTypes["Locale"]> | undefined | null},ResolverInputTypes["Asset"]],
	/** Tech stack for project */
	stack?:boolean | `@${string}`,
scheduledIn?: [{	where?: ResolverInputTypes["ScheduledOperationWhereInput"] | undefined | null,	skip?: number | undefined | null,	after?: string | undefined | null,	before?: string | undefined | null,	first?: number | undefined | null,	last?: number | undefined | null,	/** Allows to optionally override locale filtering behaviour in the query's subtree.

Note that `scheduledIn` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument will overwrite any existing locale filtering defined in the query's tree for the subtree. */
	locales?: Array<ResolverInputTypes["Locale"]> | undefined | null},ResolverInputTypes["ScheduledOperation"]],
history?: [{	limit: number,	skip: number,	/** This is optional and can be used to fetch the document version history for a specific stage instead of the current one */
	stageOverride?: ResolverInputTypes["Stage"] | undefined | null},ResolverInputTypes["Version"]],
		__typename?: boolean | `@${string}`
}>;
	["ProjectConnectInput"]: {
	/** Document to connect */
	where: ResolverInputTypes["ProjectWhereUniqueInput"],
	/** Allow to specify document position in list of connected documents, will default to appending at end of list */
	position?: ResolverInputTypes["ConnectPositionInput"] | undefined | null
};
	/** A connection to a list of items. */
["ProjectConnection"]: AliasType<{
	/** Information to aid in pagination. */
	pageInfo?:ResolverInputTypes["PageInfo"],
	/** A list of edges. */
	edges?:ResolverInputTypes["ProjectEdge"],
	aggregate?:ResolverInputTypes["Aggregate"],
		__typename?: boolean | `@${string}`
}>;
	["ProjectCreateInput"]: {
	updatedAt?: ResolverInputTypes["DateTime"] | undefined | null,
	createdAt?: ResolverInputTypes["DateTime"] | undefined | null,
	name: string,
	description: string,
	demo?: string | undefined | null,
	sourceCode?: string | undefined | null,
	image: ResolverInputTypes["AssetCreateManyInlineInput"],
	stack?: Array<ResolverInputTypes["Technologies"]> | undefined | null
};
	["ProjectCreateManyInlineInput"]: {
	/** Create and connect multiple existing Project documents */
	create?: Array<ResolverInputTypes["ProjectCreateInput"]> | undefined | null,
	/** Connect multiple existing Project documents */
	connect?: Array<ResolverInputTypes["ProjectWhereUniqueInput"]> | undefined | null
};
	["ProjectCreateOneInlineInput"]: {
	/** Create and connect one Project document */
	create?: ResolverInputTypes["ProjectCreateInput"] | undefined | null,
	/** Connect one existing Project document */
	connect?: ResolverInputTypes["ProjectWhereUniqueInput"] | undefined | null
};
	/** An edge in a connection. */
["ProjectEdge"]: AliasType<{
	/** The item at the end of the edge. */
	node?:ResolverInputTypes["Project"],
	/** A cursor for use in pagination. */
	cursor?:boolean | `@${string}`,
		__typename?: boolean | `@${string}`
}>;
	/** Identifies documents */
["ProjectManyWhereInput"]: {
	/** Contains search across all appropriate fields. */
	_search?: string | undefined | null,
	/** Logical AND on all given filters. */
	AND?: Array<ResolverInputTypes["ProjectWhereInput"]> | undefined | null,
	/** Logical OR on all given filters. */
	OR?: Array<ResolverInputTypes["ProjectWhereInput"]> | undefined | null,
	/** Logical NOT on all given filters combined by AND. */
	NOT?: Array<ResolverInputTypes["ProjectWhereInput"]> | undefined | null,
	publishedAt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values that are not equal to given value. */
	publishedAt_not?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values that are contained in given list. */
	publishedAt_in?: Array<ResolverInputTypes["DateTime"] | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	publishedAt_not_in?: Array<ResolverInputTypes["DateTime"] | undefined | null> | undefined | null,
	/** All values less than the given value. */
	publishedAt_lt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values less than or equal the given value. */
	publishedAt_lte?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values greater than the given value. */
	publishedAt_gt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values greater than or equal the given value. */
	publishedAt_gte?: ResolverInputTypes["DateTime"] | undefined | null,
	updatedAt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values that are not equal to given value. */
	updatedAt_not?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values that are contained in given list. */
	updatedAt_in?: Array<ResolverInputTypes["DateTime"] | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	updatedAt_not_in?: Array<ResolverInputTypes["DateTime"] | undefined | null> | undefined | null,
	/** All values less than the given value. */
	updatedAt_lt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values less than or equal the given value. */
	updatedAt_lte?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values greater than the given value. */
	updatedAt_gt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values greater than or equal the given value. */
	updatedAt_gte?: ResolverInputTypes["DateTime"] | undefined | null,
	createdAt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values that are not equal to given value. */
	createdAt_not?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values that are contained in given list. */
	createdAt_in?: Array<ResolverInputTypes["DateTime"] | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	createdAt_not_in?: Array<ResolverInputTypes["DateTime"] | undefined | null> | undefined | null,
	/** All values less than the given value. */
	createdAt_lt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values less than or equal the given value. */
	createdAt_lte?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values greater than the given value. */
	createdAt_gt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values greater than or equal the given value. */
	createdAt_gte?: ResolverInputTypes["DateTime"] | undefined | null,
	id?: string | undefined | null,
	/** All values that are not equal to given value. */
	id_not?: string | undefined | null,
	/** All values that are contained in given list. */
	id_in?: Array<string | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	id_not_in?: Array<string | undefined | null> | undefined | null,
	/** All values containing the given string. */
	id_contains?: string | undefined | null,
	/** All values not containing the given string. */
	id_not_contains?: string | undefined | null,
	/** All values starting with the given string. */
	id_starts_with?: string | undefined | null,
	/** All values not starting with the given string. */
	id_not_starts_with?: string | undefined | null,
	/** All values ending with the given string. */
	id_ends_with?: string | undefined | null,
	/** All values not ending with the given string */
	id_not_ends_with?: string | undefined | null,
	name?: string | undefined | null,
	/** All values that are not equal to given value. */
	name_not?: string | undefined | null,
	/** All values that are contained in given list. */
	name_in?: Array<string | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	name_not_in?: Array<string | undefined | null> | undefined | null,
	/** All values containing the given string. */
	name_contains?: string | undefined | null,
	/** All values not containing the given string. */
	name_not_contains?: string | undefined | null,
	/** All values starting with the given string. */
	name_starts_with?: string | undefined | null,
	/** All values not starting with the given string. */
	name_not_starts_with?: string | undefined | null,
	/** All values ending with the given string. */
	name_ends_with?: string | undefined | null,
	/** All values not ending with the given string */
	name_not_ends_with?: string | undefined | null,
	description?: string | undefined | null,
	/** All values that are not equal to given value. */
	description_not?: string | undefined | null,
	/** All values that are contained in given list. */
	description_in?: Array<string | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	description_not_in?: Array<string | undefined | null> | undefined | null,
	/** All values containing the given string. */
	description_contains?: string | undefined | null,
	/** All values not containing the given string. */
	description_not_contains?: string | undefined | null,
	/** All values starting with the given string. */
	description_starts_with?: string | undefined | null,
	/** All values not starting with the given string. */
	description_not_starts_with?: string | undefined | null,
	/** All values ending with the given string. */
	description_ends_with?: string | undefined | null,
	/** All values not ending with the given string */
	description_not_ends_with?: string | undefined | null,
	demo?: string | undefined | null,
	/** All values that are not equal to given value. */
	demo_not?: string | undefined | null,
	/** All values that are contained in given list. */
	demo_in?: Array<string | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	demo_not_in?: Array<string | undefined | null> | undefined | null,
	/** All values containing the given string. */
	demo_contains?: string | undefined | null,
	/** All values not containing the given string. */
	demo_not_contains?: string | undefined | null,
	/** All values starting with the given string. */
	demo_starts_with?: string | undefined | null,
	/** All values not starting with the given string. */
	demo_not_starts_with?: string | undefined | null,
	/** All values ending with the given string. */
	demo_ends_with?: string | undefined | null,
	/** All values not ending with the given string */
	demo_not_ends_with?: string | undefined | null,
	sourceCode?: string | undefined | null,
	/** All values that are not equal to given value. */
	sourceCode_not?: string | undefined | null,
	/** All values that are contained in given list. */
	sourceCode_in?: Array<string | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	sourceCode_not_in?: Array<string | undefined | null> | undefined | null,
	/** All values containing the given string. */
	sourceCode_contains?: string | undefined | null,
	/** All values not containing the given string. */
	sourceCode_not_contains?: string | undefined | null,
	/** All values starting with the given string. */
	sourceCode_starts_with?: string | undefined | null,
	/** All values not starting with the given string. */
	sourceCode_not_starts_with?: string | undefined | null,
	/** All values ending with the given string. */
	sourceCode_ends_with?: string | undefined | null,
	/** All values not ending with the given string */
	sourceCode_not_ends_with?: string | undefined | null,
	publishedBy?: ResolverInputTypes["UserWhereInput"] | undefined | null,
	updatedBy?: ResolverInputTypes["UserWhereInput"] | undefined | null,
	createdBy?: ResolverInputTypes["UserWhereInput"] | undefined | null,
	image_every?: ResolverInputTypes["AssetWhereInput"] | undefined | null,
	image_some?: ResolverInputTypes["AssetWhereInput"] | undefined | null,
	image_none?: ResolverInputTypes["AssetWhereInput"] | undefined | null,
	/** Matches if the field array contains *all* items provided to the filter and order does match */
	stack?: Array<ResolverInputTypes["Technologies"]> | undefined | null,
	/** Matches if the field array does not contains *all* items provided to the filter or order does not match */
	stack_not?: Array<ResolverInputTypes["Technologies"]> | undefined | null,
	/** Matches if the field array contains *all* items provided to the filter */
	stack_contains_all?: Array<ResolverInputTypes["Technologies"]> | undefined | null,
	/** Matches if the field array contains at least one item provided to the filter */
	stack_contains_some?: Array<ResolverInputTypes["Technologies"]> | undefined | null,
	/** Matches if the field array does not contain any of the items provided to the filter */
	stack_contains_none?: Array<ResolverInputTypes["Technologies"]> | undefined | null,
	scheduledIn_every?: ResolverInputTypes["ScheduledOperationWhereInput"] | undefined | null,
	scheduledIn_some?: ResolverInputTypes["ScheduledOperationWhereInput"] | undefined | null,
	scheduledIn_none?: ResolverInputTypes["ScheduledOperationWhereInput"] | undefined | null
};
	["ProjectOrderByInput"]:ProjectOrderByInput;
	["ProjectUpdateInput"]: {
	name?: string | undefined | null,
	description?: string | undefined | null,
	demo?: string | undefined | null,
	sourceCode?: string | undefined | null,
	image?: ResolverInputTypes["AssetUpdateManyInlineInput"] | undefined | null,
	stack?: Array<ResolverInputTypes["Technologies"]> | undefined | null
};
	["ProjectUpdateManyInlineInput"]: {
	/** Create and connect multiple Project documents */
	create?: Array<ResolverInputTypes["ProjectCreateInput"]> | undefined | null,
	/** Connect multiple existing Project documents */
	connect?: Array<ResolverInputTypes["ProjectConnectInput"]> | undefined | null,
	/** Override currently-connected documents with multiple existing Project documents */
	set?: Array<ResolverInputTypes["ProjectWhereUniqueInput"]> | undefined | null,
	/** Update multiple Project documents */
	update?: Array<ResolverInputTypes["ProjectUpdateWithNestedWhereUniqueInput"]> | undefined | null,
	/** Upsert multiple Project documents */
	upsert?: Array<ResolverInputTypes["ProjectUpsertWithNestedWhereUniqueInput"]> | undefined | null,
	/** Disconnect multiple Project documents */
	disconnect?: Array<ResolverInputTypes["ProjectWhereUniqueInput"]> | undefined | null,
	/** Delete multiple Project documents */
	delete?: Array<ResolverInputTypes["ProjectWhereUniqueInput"]> | undefined | null
};
	["ProjectUpdateManyInput"]: {
	description?: string | undefined | null,
	demo?: string | undefined | null,
	sourceCode?: string | undefined | null,
	stack?: Array<ResolverInputTypes["Technologies"]> | undefined | null
};
	["ProjectUpdateManyWithNestedWhereInput"]: {
	/** Document search */
	where: ResolverInputTypes["ProjectWhereInput"],
	/** Update many input */
	data: ResolverInputTypes["ProjectUpdateManyInput"]
};
	["ProjectUpdateOneInlineInput"]: {
	/** Create and connect one Project document */
	create?: ResolverInputTypes["ProjectCreateInput"] | undefined | null,
	/** Update single Project document */
	update?: ResolverInputTypes["ProjectUpdateWithNestedWhereUniqueInput"] | undefined | null,
	/** Upsert single Project document */
	upsert?: ResolverInputTypes["ProjectUpsertWithNestedWhereUniqueInput"] | undefined | null,
	/** Connect existing Project document */
	connect?: ResolverInputTypes["ProjectWhereUniqueInput"] | undefined | null,
	/** Disconnect currently connected Project document */
	disconnect?: boolean | undefined | null,
	/** Delete currently connected Project document */
	delete?: boolean | undefined | null
};
	["ProjectUpdateWithNestedWhereUniqueInput"]: {
	/** Unique document search */
	where: ResolverInputTypes["ProjectWhereUniqueInput"],
	/** Document to update */
	data: ResolverInputTypes["ProjectUpdateInput"]
};
	["ProjectUpsertInput"]: {
	/** Create document if it didn't exist */
	create: ResolverInputTypes["ProjectCreateInput"],
	/** Update document if it exists */
	update: ResolverInputTypes["ProjectUpdateInput"]
};
	["ProjectUpsertWithNestedWhereUniqueInput"]: {
	/** Unique document search */
	where: ResolverInputTypes["ProjectWhereUniqueInput"],
	/** Upsert data */
	data: ResolverInputTypes["ProjectUpsertInput"]
};
	/** Identifies documents */
["ProjectWhereInput"]: {
	/** Contains search across all appropriate fields. */
	_search?: string | undefined | null,
	/** Logical AND on all given filters. */
	AND?: Array<ResolverInputTypes["ProjectWhereInput"]> | undefined | null,
	/** Logical OR on all given filters. */
	OR?: Array<ResolverInputTypes["ProjectWhereInput"]> | undefined | null,
	/** Logical NOT on all given filters combined by AND. */
	NOT?: Array<ResolverInputTypes["ProjectWhereInput"]> | undefined | null,
	publishedAt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values that are not equal to given value. */
	publishedAt_not?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values that are contained in given list. */
	publishedAt_in?: Array<ResolverInputTypes["DateTime"] | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	publishedAt_not_in?: Array<ResolverInputTypes["DateTime"] | undefined | null> | undefined | null,
	/** All values less than the given value. */
	publishedAt_lt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values less than or equal the given value. */
	publishedAt_lte?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values greater than the given value. */
	publishedAt_gt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values greater than or equal the given value. */
	publishedAt_gte?: ResolverInputTypes["DateTime"] | undefined | null,
	updatedAt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values that are not equal to given value. */
	updatedAt_not?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values that are contained in given list. */
	updatedAt_in?: Array<ResolverInputTypes["DateTime"] | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	updatedAt_not_in?: Array<ResolverInputTypes["DateTime"] | undefined | null> | undefined | null,
	/** All values less than the given value. */
	updatedAt_lt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values less than or equal the given value. */
	updatedAt_lte?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values greater than the given value. */
	updatedAt_gt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values greater than or equal the given value. */
	updatedAt_gte?: ResolverInputTypes["DateTime"] | undefined | null,
	createdAt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values that are not equal to given value. */
	createdAt_not?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values that are contained in given list. */
	createdAt_in?: Array<ResolverInputTypes["DateTime"] | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	createdAt_not_in?: Array<ResolverInputTypes["DateTime"] | undefined | null> | undefined | null,
	/** All values less than the given value. */
	createdAt_lt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values less than or equal the given value. */
	createdAt_lte?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values greater than the given value. */
	createdAt_gt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values greater than or equal the given value. */
	createdAt_gte?: ResolverInputTypes["DateTime"] | undefined | null,
	id?: string | undefined | null,
	/** All values that are not equal to given value. */
	id_not?: string | undefined | null,
	/** All values that are contained in given list. */
	id_in?: Array<string | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	id_not_in?: Array<string | undefined | null> | undefined | null,
	/** All values containing the given string. */
	id_contains?: string | undefined | null,
	/** All values not containing the given string. */
	id_not_contains?: string | undefined | null,
	/** All values starting with the given string. */
	id_starts_with?: string | undefined | null,
	/** All values not starting with the given string. */
	id_not_starts_with?: string | undefined | null,
	/** All values ending with the given string. */
	id_ends_with?: string | undefined | null,
	/** All values not ending with the given string */
	id_not_ends_with?: string | undefined | null,
	name?: string | undefined | null,
	/** All values that are not equal to given value. */
	name_not?: string | undefined | null,
	/** All values that are contained in given list. */
	name_in?: Array<string | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	name_not_in?: Array<string | undefined | null> | undefined | null,
	/** All values containing the given string. */
	name_contains?: string | undefined | null,
	/** All values not containing the given string. */
	name_not_contains?: string | undefined | null,
	/** All values starting with the given string. */
	name_starts_with?: string | undefined | null,
	/** All values not starting with the given string. */
	name_not_starts_with?: string | undefined | null,
	/** All values ending with the given string. */
	name_ends_with?: string | undefined | null,
	/** All values not ending with the given string */
	name_not_ends_with?: string | undefined | null,
	description?: string | undefined | null,
	/** All values that are not equal to given value. */
	description_not?: string | undefined | null,
	/** All values that are contained in given list. */
	description_in?: Array<string | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	description_not_in?: Array<string | undefined | null> | undefined | null,
	/** All values containing the given string. */
	description_contains?: string | undefined | null,
	/** All values not containing the given string. */
	description_not_contains?: string | undefined | null,
	/** All values starting with the given string. */
	description_starts_with?: string | undefined | null,
	/** All values not starting with the given string. */
	description_not_starts_with?: string | undefined | null,
	/** All values ending with the given string. */
	description_ends_with?: string | undefined | null,
	/** All values not ending with the given string */
	description_not_ends_with?: string | undefined | null,
	demo?: string | undefined | null,
	/** All values that are not equal to given value. */
	demo_not?: string | undefined | null,
	/** All values that are contained in given list. */
	demo_in?: Array<string | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	demo_not_in?: Array<string | undefined | null> | undefined | null,
	/** All values containing the given string. */
	demo_contains?: string | undefined | null,
	/** All values not containing the given string. */
	demo_not_contains?: string | undefined | null,
	/** All values starting with the given string. */
	demo_starts_with?: string | undefined | null,
	/** All values not starting with the given string. */
	demo_not_starts_with?: string | undefined | null,
	/** All values ending with the given string. */
	demo_ends_with?: string | undefined | null,
	/** All values not ending with the given string */
	demo_not_ends_with?: string | undefined | null,
	sourceCode?: string | undefined | null,
	/** All values that are not equal to given value. */
	sourceCode_not?: string | undefined | null,
	/** All values that are contained in given list. */
	sourceCode_in?: Array<string | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	sourceCode_not_in?: Array<string | undefined | null> | undefined | null,
	/** All values containing the given string. */
	sourceCode_contains?: string | undefined | null,
	/** All values not containing the given string. */
	sourceCode_not_contains?: string | undefined | null,
	/** All values starting with the given string. */
	sourceCode_starts_with?: string | undefined | null,
	/** All values not starting with the given string. */
	sourceCode_not_starts_with?: string | undefined | null,
	/** All values ending with the given string. */
	sourceCode_ends_with?: string | undefined | null,
	/** All values not ending with the given string */
	sourceCode_not_ends_with?: string | undefined | null,
	publishedBy?: ResolverInputTypes["UserWhereInput"] | undefined | null,
	updatedBy?: ResolverInputTypes["UserWhereInput"] | undefined | null,
	createdBy?: ResolverInputTypes["UserWhereInput"] | undefined | null,
	image_every?: ResolverInputTypes["AssetWhereInput"] | undefined | null,
	image_some?: ResolverInputTypes["AssetWhereInput"] | undefined | null,
	image_none?: ResolverInputTypes["AssetWhereInput"] | undefined | null,
	/** Matches if the field array contains *all* items provided to the filter and order does match */
	stack?: Array<ResolverInputTypes["Technologies"]> | undefined | null,
	/** Matches if the field array does not contains *all* items provided to the filter or order does not match */
	stack_not?: Array<ResolverInputTypes["Technologies"]> | undefined | null,
	/** Matches if the field array contains *all* items provided to the filter */
	stack_contains_all?: Array<ResolverInputTypes["Technologies"]> | undefined | null,
	/** Matches if the field array contains at least one item provided to the filter */
	stack_contains_some?: Array<ResolverInputTypes["Technologies"]> | undefined | null,
	/** Matches if the field array does not contain any of the items provided to the filter */
	stack_contains_none?: Array<ResolverInputTypes["Technologies"]> | undefined | null,
	scheduledIn_every?: ResolverInputTypes["ScheduledOperationWhereInput"] | undefined | null,
	scheduledIn_some?: ResolverInputTypes["ScheduledOperationWhereInput"] | undefined | null,
	scheduledIn_none?: ResolverInputTypes["ScheduledOperationWhereInput"] | undefined | null
};
	/** References Project record uniquely */
["ProjectWhereUniqueInput"]: {
	id?: string | undefined | null,
	name?: string | undefined | null
};
	["PublishLocaleInput"]: {
	/** Locales to publish */
	locale: ResolverInputTypes["Locale"],
	/** Stages to publish selected locales to */
	stages: Array<ResolverInputTypes["Stage"]>
};
	["Query"]: AliasType<{
node?: [{	/** The ID of an object */
	id: string,	stage: ResolverInputTypes["Stage"],	/** Defines which locales should be returned.

Note that `Node` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree. */
	locales: Array<ResolverInputTypes["Locale"]>},ResolverInputTypes["Node"]],
users?: [{	where?: ResolverInputTypes["UserWhereInput"] | undefined | null,	orderBy?: ResolverInputTypes["UserOrderByInput"] | undefined | null,	skip?: number | undefined | null,	after?: string | undefined | null,	before?: string | undefined | null,	first?: number | undefined | null,	last?: number | undefined | null,	stage: ResolverInputTypes["Stage"],	/** Defines which locales should be returned.

Note that `User` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree. */
	locales: Array<ResolverInputTypes["Locale"]>},ResolverInputTypes["User"]],
user?: [{	where: ResolverInputTypes["UserWhereUniqueInput"],	stage: ResolverInputTypes["Stage"],	/** Defines which locales should be returned.

Note that `User` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree. */
	locales: Array<ResolverInputTypes["Locale"]>},ResolverInputTypes["User"]],
usersConnection?: [{	where?: ResolverInputTypes["UserWhereInput"] | undefined | null,	orderBy?: ResolverInputTypes["UserOrderByInput"] | undefined | null,	skip?: number | undefined | null,	after?: string | undefined | null,	before?: string | undefined | null,	first?: number | undefined | null,	last?: number | undefined | null,	stage: ResolverInputTypes["Stage"],	/** Defines which locales should be returned.

Note that `User` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree. */
	locales: Array<ResolverInputTypes["Locale"]>},ResolverInputTypes["UserConnection"]],
assets?: [{	where?: ResolverInputTypes["AssetWhereInput"] | undefined | null,	orderBy?: ResolverInputTypes["AssetOrderByInput"] | undefined | null,	skip?: number | undefined | null,	after?: string | undefined | null,	before?: string | undefined | null,	first?: number | undefined | null,	last?: number | undefined | null,	stage: ResolverInputTypes["Stage"],	/** Defines which locales should be returned.

Note that `Asset` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.

This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree. */
	locales: Array<ResolverInputTypes["Locale"]>},ResolverInputTypes["Asset"]],
asset?: [{	where: ResolverInputTypes["AssetWhereUniqueInput"],	stage: ResolverInputTypes["Stage"],	/** Defines which locales should be returned.

Note that `Asset` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.

This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree. */
	locales: Array<ResolverInputTypes["Locale"]>},ResolverInputTypes["Asset"]],
assetsConnection?: [{	where?: ResolverInputTypes["AssetWhereInput"] | undefined | null,	orderBy?: ResolverInputTypes["AssetOrderByInput"] | undefined | null,	skip?: number | undefined | null,	after?: string | undefined | null,	before?: string | undefined | null,	first?: number | undefined | null,	last?: number | undefined | null,	stage: ResolverInputTypes["Stage"],	/** Defines which locales should be returned.

Note that `Asset` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.

This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree. */
	locales: Array<ResolverInputTypes["Locale"]>},ResolverInputTypes["AssetConnection"]],
assetVersion?: [{	where: ResolverInputTypes["VersionWhereInput"]},ResolverInputTypes["DocumentVersion"]],
scheduledOperations?: [{	where?: ResolverInputTypes["ScheduledOperationWhereInput"] | undefined | null,	orderBy?: ResolverInputTypes["ScheduledOperationOrderByInput"] | undefined | null,	skip?: number | undefined | null,	after?: string | undefined | null,	before?: string | undefined | null,	first?: number | undefined | null,	last?: number | undefined | null,	stage: ResolverInputTypes["Stage"],	/** Defines which locales should be returned.

Note that `ScheduledOperation` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree. */
	locales: Array<ResolverInputTypes["Locale"]>},ResolverInputTypes["ScheduledOperation"]],
scheduledOperation?: [{	where: ResolverInputTypes["ScheduledOperationWhereUniqueInput"],	stage: ResolverInputTypes["Stage"],	/** Defines which locales should be returned.

Note that `ScheduledOperation` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree. */
	locales: Array<ResolverInputTypes["Locale"]>},ResolverInputTypes["ScheduledOperation"]],
scheduledOperationsConnection?: [{	where?: ResolverInputTypes["ScheduledOperationWhereInput"] | undefined | null,	orderBy?: ResolverInputTypes["ScheduledOperationOrderByInput"] | undefined | null,	skip?: number | undefined | null,	after?: string | undefined | null,	before?: string | undefined | null,	first?: number | undefined | null,	last?: number | undefined | null,	stage: ResolverInputTypes["Stage"],	/** Defines which locales should be returned.

Note that `ScheduledOperation` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree. */
	locales: Array<ResolverInputTypes["Locale"]>},ResolverInputTypes["ScheduledOperationConnection"]],
scheduledReleases?: [{	where?: ResolverInputTypes["ScheduledReleaseWhereInput"] | undefined | null,	orderBy?: ResolverInputTypes["ScheduledReleaseOrderByInput"] | undefined | null,	skip?: number | undefined | null,	after?: string | undefined | null,	before?: string | undefined | null,	first?: number | undefined | null,	last?: number | undefined | null,	stage: ResolverInputTypes["Stage"],	/** Defines which locales should be returned.

Note that `ScheduledRelease` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree. */
	locales: Array<ResolverInputTypes["Locale"]>},ResolverInputTypes["ScheduledRelease"]],
scheduledRelease?: [{	where: ResolverInputTypes["ScheduledReleaseWhereUniqueInput"],	stage: ResolverInputTypes["Stage"],	/** Defines which locales should be returned.

Note that `ScheduledRelease` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree. */
	locales: Array<ResolverInputTypes["Locale"]>},ResolverInputTypes["ScheduledRelease"]],
scheduledReleasesConnection?: [{	where?: ResolverInputTypes["ScheduledReleaseWhereInput"] | undefined | null,	orderBy?: ResolverInputTypes["ScheduledReleaseOrderByInput"] | undefined | null,	skip?: number | undefined | null,	after?: string | undefined | null,	before?: string | undefined | null,	first?: number | undefined | null,	last?: number | undefined | null,	stage: ResolverInputTypes["Stage"],	/** Defines which locales should be returned.

Note that `ScheduledRelease` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree. */
	locales: Array<ResolverInputTypes["Locale"]>},ResolverInputTypes["ScheduledReleaseConnection"]],
projects?: [{	where?: ResolverInputTypes["ProjectWhereInput"] | undefined | null,	orderBy?: ResolverInputTypes["ProjectOrderByInput"] | undefined | null,	skip?: number | undefined | null,	after?: string | undefined | null,	before?: string | undefined | null,	first?: number | undefined | null,	last?: number | undefined | null,	stage: ResolverInputTypes["Stage"],	/** Defines which locales should be returned.

Note that `Project` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree. */
	locales: Array<ResolverInputTypes["Locale"]>},ResolverInputTypes["Project"]],
project?: [{	where: ResolverInputTypes["ProjectWhereUniqueInput"],	stage: ResolverInputTypes["Stage"],	/** Defines which locales should be returned.

Note that `Project` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree. */
	locales: Array<ResolverInputTypes["Locale"]>},ResolverInputTypes["Project"]],
projectsConnection?: [{	where?: ResolverInputTypes["ProjectWhereInput"] | undefined | null,	orderBy?: ResolverInputTypes["ProjectOrderByInput"] | undefined | null,	skip?: number | undefined | null,	after?: string | undefined | null,	before?: string | undefined | null,	first?: number | undefined | null,	last?: number | undefined | null,	stage: ResolverInputTypes["Stage"],	/** Defines which locales should be returned.

Note that `Project` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree. */
	locales: Array<ResolverInputTypes["Locale"]>},ResolverInputTypes["ProjectConnection"]],
projectVersion?: [{	where: ResolverInputTypes["VersionWhereInput"]},ResolverInputTypes["DocumentVersion"]],
seos?: [{	where?: ResolverInputTypes["SeoWhereInput"] | undefined | null,	orderBy?: ResolverInputTypes["SeoOrderByInput"] | undefined | null,	skip?: number | undefined | null,	after?: string | undefined | null,	before?: string | undefined | null,	first?: number | undefined | null,	last?: number | undefined | null,	stage: ResolverInputTypes["Stage"],	/** Defines which locales should be returned.

Note that `Seo` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree. */
	locales: Array<ResolverInputTypes["Locale"]>},ResolverInputTypes["Seo"]],
seo?: [{	where: ResolverInputTypes["SeoWhereUniqueInput"],	stage: ResolverInputTypes["Stage"],	/** Defines which locales should be returned.

Note that `Seo` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree. */
	locales: Array<ResolverInputTypes["Locale"]>},ResolverInputTypes["Seo"]],
seosConnection?: [{	where?: ResolverInputTypes["SeoWhereInput"] | undefined | null,	orderBy?: ResolverInputTypes["SeoOrderByInput"] | undefined | null,	skip?: number | undefined | null,	after?: string | undefined | null,	before?: string | undefined | null,	first?: number | undefined | null,	last?: number | undefined | null,	stage: ResolverInputTypes["Stage"],	/** Defines which locales should be returned.

Note that `Seo` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree. */
	locales: Array<ResolverInputTypes["Locale"]>},ResolverInputTypes["SeoConnection"]],
seoVersion?: [{	where: ResolverInputTypes["VersionWhereInput"]},ResolverInputTypes["DocumentVersion"]],
aboutMes?: [{	where?: ResolverInputTypes["AboutMeWhereInput"] | undefined | null,	orderBy?: ResolverInputTypes["AboutMeOrderByInput"] | undefined | null,	skip?: number | undefined | null,	after?: string | undefined | null,	before?: string | undefined | null,	first?: number | undefined | null,	last?: number | undefined | null,	stage: ResolverInputTypes["Stage"],	/** Defines which locales should be returned.

Note that `AboutMe` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree. */
	locales: Array<ResolverInputTypes["Locale"]>},ResolverInputTypes["AboutMe"]],
aboutMe?: [{	where: ResolverInputTypes["AboutMeWhereUniqueInput"],	stage: ResolverInputTypes["Stage"],	/** Defines which locales should be returned.

Note that `AboutMe` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree. */
	locales: Array<ResolverInputTypes["Locale"]>},ResolverInputTypes["AboutMe"]],
aboutMesConnection?: [{	where?: ResolverInputTypes["AboutMeWhereInput"] | undefined | null,	orderBy?: ResolverInputTypes["AboutMeOrderByInput"] | undefined | null,	skip?: number | undefined | null,	after?: string | undefined | null,	before?: string | undefined | null,	first?: number | undefined | null,	last?: number | undefined | null,	stage: ResolverInputTypes["Stage"],	/** Defines which locales should be returned.

Note that `AboutMe` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree. */
	locales: Array<ResolverInputTypes["Locale"]>},ResolverInputTypes["AboutMeConnection"]],
aboutMeVersion?: [{	where: ResolverInputTypes["VersionWhereInput"]},ResolverInputTypes["DocumentVersion"]],
skillCategories?: [{	where?: ResolverInputTypes["SkillCategoryWhereInput"] | undefined | null,	orderBy?: ResolverInputTypes["SkillCategoryOrderByInput"] | undefined | null,	skip?: number | undefined | null,	after?: string | undefined | null,	before?: string | undefined | null,	first?: number | undefined | null,	last?: number | undefined | null,	stage: ResolverInputTypes["Stage"],	/** Defines which locales should be returned.

Note that `SkillCategory` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree. */
	locales: Array<ResolverInputTypes["Locale"]>},ResolverInputTypes["SkillCategory"]],
skillCategory?: [{	where: ResolverInputTypes["SkillCategoryWhereUniqueInput"],	stage: ResolverInputTypes["Stage"],	/** Defines which locales should be returned.

Note that `SkillCategory` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree. */
	locales: Array<ResolverInputTypes["Locale"]>},ResolverInputTypes["SkillCategory"]],
skillCategoriesConnection?: [{	where?: ResolverInputTypes["SkillCategoryWhereInput"] | undefined | null,	orderBy?: ResolverInputTypes["SkillCategoryOrderByInput"] | undefined | null,	skip?: number | undefined | null,	after?: string | undefined | null,	before?: string | undefined | null,	first?: number | undefined | null,	last?: number | undefined | null,	stage: ResolverInputTypes["Stage"],	/** Defines which locales should be returned.

Note that `SkillCategory` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree. */
	locales: Array<ResolverInputTypes["Locale"]>},ResolverInputTypes["SkillCategoryConnection"]],
skillCategoryVersion?: [{	where: ResolverInputTypes["VersionWhereInput"]},ResolverInputTypes["DocumentVersion"]],
		__typename?: boolean | `@${string}`
}>;
	/** Representing a RGBA color value: https://developer.mozilla.org/en-US/docs/Web/CSS/color_value#rgb()_and_rgba() */
["RGBA"]: AliasType<{
	r?:boolean | `@${string}`,
	g?:boolean | `@${string}`,
	b?:boolean | `@${string}`,
	a?:boolean | `@${string}`,
		__typename?: boolean | `@${string}`
}>;
	["RGBAHue"]:unknown;
	/** Input type representing a RGBA color value: https://developer.mozilla.org/en-US/docs/Web/CSS/color_value#rgb()_and_rgba() */
["RGBAInput"]: {
	r: ResolverInputTypes["RGBAHue"],
	g: ResolverInputTypes["RGBAHue"],
	b: ResolverInputTypes["RGBAHue"],
	a: ResolverInputTypes["RGBATransparency"]
};
	["RGBATransparency"]:unknown;
	/** Custom type representing a rich text value comprising of raw rich text ast, html, markdown and text values */
["RichText"]: AliasType<{
	/** Returns AST representation */
	raw?:boolean | `@${string}`,
	/** Returns HTMl representation */
	html?:boolean | `@${string}`,
	/** Returns Markdown representation */
	markdown?:boolean | `@${string}`,
	/** Returns plain-text contents of RichText */
	text?:boolean | `@${string}`,
		__typename?: boolean | `@${string}`
}>;
	/** Slate-compatible RichText AST */
["RichTextAST"]:unknown;
	/** Scheduled Operation system model */
["ScheduledOperation"]: AliasType<{
	/** System stage field */
	stage?:boolean | `@${string}`,
documentInStages?: [{	/** Potential stages that should be returned */
	stages: Array<ResolverInputTypes["Stage"]>,	/** Decides if the current stage should be included or not */
	includeCurrent: boolean,	/** Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree */
	inheritLocale: boolean},ResolverInputTypes["ScheduledOperation"]],
	/** Raw operation payload including all details, this field is subject to change */
	rawPayload?:boolean | `@${string}`,
	/** Operation error message */
	errorMessage?:boolean | `@${string}`,
	/** Operation description */
	description?:boolean | `@${string}`,
	/** The time the document was published. Null on documents in draft stage. */
	publishedAt?:boolean | `@${string}`,
	/** The time the document was updated */
	updatedAt?:boolean | `@${string}`,
	/** The time the document was created */
	createdAt?:boolean | `@${string}`,
	/** The unique identifier */
	id?:boolean | `@${string}`,
release?: [{	/** Allows to optionally override locale filtering behaviour in the query's subtree.

Note that `release` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument will overwrite any existing locale filtering defined in the query's tree for the subtree. */
	locales?: Array<ResolverInputTypes["Locale"]> | undefined | null},ResolverInputTypes["ScheduledRelease"]],
publishedBy?: [{	/** Allows to optionally override locale filtering behaviour in the query's subtree.

Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument will overwrite any existing locale filtering defined in the query's tree for the subtree. */
	locales?: Array<ResolverInputTypes["Locale"]> | undefined | null},ResolverInputTypes["User"]],
updatedBy?: [{	/** Allows to optionally override locale filtering behaviour in the query's subtree.

Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument will overwrite any existing locale filtering defined in the query's tree for the subtree. */
	locales?: Array<ResolverInputTypes["Locale"]> | undefined | null},ResolverInputTypes["User"]],
createdBy?: [{	/** Allows to optionally override locale filtering behaviour in the query's subtree.

Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument will overwrite any existing locale filtering defined in the query's tree for the subtree. */
	locales?: Array<ResolverInputTypes["Locale"]> | undefined | null},ResolverInputTypes["User"]],
	/** operation Status */
	status?:boolean | `@${string}`,
affectedDocuments?: [{	skip?: number | undefined | null,	after?: string | undefined | null,	before?: string | undefined | null,	first?: number | undefined | null,	last?: number | undefined | null,	/** Allows to optionally override locale filtering behaviour in the query's subtree.

Note that `affectedDocuments` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument will overwrite any existing locale filtering defined in the query's tree for the subtree. */
	locales?: Array<ResolverInputTypes["Locale"]> | undefined | null},ResolverInputTypes["ScheduledOperationAffectedDocument"]],
		__typename?: boolean | `@${string}`
}>;
	["ScheduledOperationAffectedDocument"]: AliasType<{
	AboutMe?:ResolverInputTypes["AboutMe"],
	Asset?:ResolverInputTypes["Asset"],
	Project?:ResolverInputTypes["Project"],
	Seo?:ResolverInputTypes["Seo"],
	SkillCategory?:ResolverInputTypes["SkillCategory"],
		__typename?: boolean | `@${string}`
}>;
	["ScheduledOperationConnectInput"]: {
	/** Document to connect */
	where: ResolverInputTypes["ScheduledOperationWhereUniqueInput"],
	/** Allow to specify document position in list of connected documents, will default to appending at end of list */
	position?: ResolverInputTypes["ConnectPositionInput"] | undefined | null
};
	/** A connection to a list of items. */
["ScheduledOperationConnection"]: AliasType<{
	/** Information to aid in pagination. */
	pageInfo?:ResolverInputTypes["PageInfo"],
	/** A list of edges. */
	edges?:ResolverInputTypes["ScheduledOperationEdge"],
	aggregate?:ResolverInputTypes["Aggregate"],
		__typename?: boolean | `@${string}`
}>;
	["ScheduledOperationCreateManyInlineInput"]: {
	/** Connect multiple existing ScheduledOperation documents */
	connect?: Array<ResolverInputTypes["ScheduledOperationWhereUniqueInput"]> | undefined | null
};
	["ScheduledOperationCreateOneInlineInput"]: {
	/** Connect one existing ScheduledOperation document */
	connect?: ResolverInputTypes["ScheduledOperationWhereUniqueInput"] | undefined | null
};
	/** An edge in a connection. */
["ScheduledOperationEdge"]: AliasType<{
	/** The item at the end of the edge. */
	node?:ResolverInputTypes["ScheduledOperation"],
	/** A cursor for use in pagination. */
	cursor?:boolean | `@${string}`,
		__typename?: boolean | `@${string}`
}>;
	/** Identifies documents */
["ScheduledOperationManyWhereInput"]: {
	/** Contains search across all appropriate fields. */
	_search?: string | undefined | null,
	/** Logical AND on all given filters. */
	AND?: Array<ResolverInputTypes["ScheduledOperationWhereInput"]> | undefined | null,
	/** Logical OR on all given filters. */
	OR?: Array<ResolverInputTypes["ScheduledOperationWhereInput"]> | undefined | null,
	/** Logical NOT on all given filters combined by AND. */
	NOT?: Array<ResolverInputTypes["ScheduledOperationWhereInput"]> | undefined | null,
	errorMessage?: string | undefined | null,
	/** All values that are not equal to given value. */
	errorMessage_not?: string | undefined | null,
	/** All values that are contained in given list. */
	errorMessage_in?: Array<string | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	errorMessage_not_in?: Array<string | undefined | null> | undefined | null,
	/** All values containing the given string. */
	errorMessage_contains?: string | undefined | null,
	/** All values not containing the given string. */
	errorMessage_not_contains?: string | undefined | null,
	/** All values starting with the given string. */
	errorMessage_starts_with?: string | undefined | null,
	/** All values not starting with the given string. */
	errorMessage_not_starts_with?: string | undefined | null,
	/** All values ending with the given string. */
	errorMessage_ends_with?: string | undefined | null,
	/** All values not ending with the given string */
	errorMessage_not_ends_with?: string | undefined | null,
	description?: string | undefined | null,
	/** All values that are not equal to given value. */
	description_not?: string | undefined | null,
	/** All values that are contained in given list. */
	description_in?: Array<string | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	description_not_in?: Array<string | undefined | null> | undefined | null,
	/** All values containing the given string. */
	description_contains?: string | undefined | null,
	/** All values not containing the given string. */
	description_not_contains?: string | undefined | null,
	/** All values starting with the given string. */
	description_starts_with?: string | undefined | null,
	/** All values not starting with the given string. */
	description_not_starts_with?: string | undefined | null,
	/** All values ending with the given string. */
	description_ends_with?: string | undefined | null,
	/** All values not ending with the given string */
	description_not_ends_with?: string | undefined | null,
	publishedAt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values that are not equal to given value. */
	publishedAt_not?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values that are contained in given list. */
	publishedAt_in?: Array<ResolverInputTypes["DateTime"] | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	publishedAt_not_in?: Array<ResolverInputTypes["DateTime"] | undefined | null> | undefined | null,
	/** All values less than the given value. */
	publishedAt_lt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values less than or equal the given value. */
	publishedAt_lte?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values greater than the given value. */
	publishedAt_gt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values greater than or equal the given value. */
	publishedAt_gte?: ResolverInputTypes["DateTime"] | undefined | null,
	updatedAt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values that are not equal to given value. */
	updatedAt_not?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values that are contained in given list. */
	updatedAt_in?: Array<ResolverInputTypes["DateTime"] | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	updatedAt_not_in?: Array<ResolverInputTypes["DateTime"] | undefined | null> | undefined | null,
	/** All values less than the given value. */
	updatedAt_lt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values less than or equal the given value. */
	updatedAt_lte?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values greater than the given value. */
	updatedAt_gt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values greater than or equal the given value. */
	updatedAt_gte?: ResolverInputTypes["DateTime"] | undefined | null,
	createdAt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values that are not equal to given value. */
	createdAt_not?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values that are contained in given list. */
	createdAt_in?: Array<ResolverInputTypes["DateTime"] | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	createdAt_not_in?: Array<ResolverInputTypes["DateTime"] | undefined | null> | undefined | null,
	/** All values less than the given value. */
	createdAt_lt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values less than or equal the given value. */
	createdAt_lte?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values greater than the given value. */
	createdAt_gt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values greater than or equal the given value. */
	createdAt_gte?: ResolverInputTypes["DateTime"] | undefined | null,
	id?: string | undefined | null,
	/** All values that are not equal to given value. */
	id_not?: string | undefined | null,
	/** All values that are contained in given list. */
	id_in?: Array<string | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	id_not_in?: Array<string | undefined | null> | undefined | null,
	/** All values containing the given string. */
	id_contains?: string | undefined | null,
	/** All values not containing the given string. */
	id_not_contains?: string | undefined | null,
	/** All values starting with the given string. */
	id_starts_with?: string | undefined | null,
	/** All values not starting with the given string. */
	id_not_starts_with?: string | undefined | null,
	/** All values ending with the given string. */
	id_ends_with?: string | undefined | null,
	/** All values not ending with the given string */
	id_not_ends_with?: string | undefined | null,
	release?: ResolverInputTypes["ScheduledReleaseWhereInput"] | undefined | null,
	publishedBy?: ResolverInputTypes["UserWhereInput"] | undefined | null,
	updatedBy?: ResolverInputTypes["UserWhereInput"] | undefined | null,
	createdBy?: ResolverInputTypes["UserWhereInput"] | undefined | null,
	status?: ResolverInputTypes["ScheduledOperationStatus"] | undefined | null,
	/** All values that are not equal to given value. */
	status_not?: ResolverInputTypes["ScheduledOperationStatus"] | undefined | null,
	/** All values that are contained in given list. */
	status_in?: Array<ResolverInputTypes["ScheduledOperationStatus"] | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	status_not_in?: Array<ResolverInputTypes["ScheduledOperationStatus"] | undefined | null> | undefined | null
};
	["ScheduledOperationOrderByInput"]:ScheduledOperationOrderByInput;
	/** System Scheduled Operation Status */
["ScheduledOperationStatus"]:ScheduledOperationStatus;
	["ScheduledOperationUpdateManyInlineInput"]: {
	/** Connect multiple existing ScheduledOperation documents */
	connect?: Array<ResolverInputTypes["ScheduledOperationConnectInput"]> | undefined | null,
	/** Override currently-connected documents with multiple existing ScheduledOperation documents */
	set?: Array<ResolverInputTypes["ScheduledOperationWhereUniqueInput"]> | undefined | null,
	/** Disconnect multiple ScheduledOperation documents */
	disconnect?: Array<ResolverInputTypes["ScheduledOperationWhereUniqueInput"]> | undefined | null
};
	["ScheduledOperationUpdateOneInlineInput"]: {
	/** Connect existing ScheduledOperation document */
	connect?: ResolverInputTypes["ScheduledOperationWhereUniqueInput"] | undefined | null,
	/** Disconnect currently connected ScheduledOperation document */
	disconnect?: boolean | undefined | null
};
	/** Identifies documents */
["ScheduledOperationWhereInput"]: {
	/** Contains search across all appropriate fields. */
	_search?: string | undefined | null,
	/** Logical AND on all given filters. */
	AND?: Array<ResolverInputTypes["ScheduledOperationWhereInput"]> | undefined | null,
	/** Logical OR on all given filters. */
	OR?: Array<ResolverInputTypes["ScheduledOperationWhereInput"]> | undefined | null,
	/** Logical NOT on all given filters combined by AND. */
	NOT?: Array<ResolverInputTypes["ScheduledOperationWhereInput"]> | undefined | null,
	errorMessage?: string | undefined | null,
	/** All values that are not equal to given value. */
	errorMessage_not?: string | undefined | null,
	/** All values that are contained in given list. */
	errorMessage_in?: Array<string | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	errorMessage_not_in?: Array<string | undefined | null> | undefined | null,
	/** All values containing the given string. */
	errorMessage_contains?: string | undefined | null,
	/** All values not containing the given string. */
	errorMessage_not_contains?: string | undefined | null,
	/** All values starting with the given string. */
	errorMessage_starts_with?: string | undefined | null,
	/** All values not starting with the given string. */
	errorMessage_not_starts_with?: string | undefined | null,
	/** All values ending with the given string. */
	errorMessage_ends_with?: string | undefined | null,
	/** All values not ending with the given string */
	errorMessage_not_ends_with?: string | undefined | null,
	description?: string | undefined | null,
	/** All values that are not equal to given value. */
	description_not?: string | undefined | null,
	/** All values that are contained in given list. */
	description_in?: Array<string | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	description_not_in?: Array<string | undefined | null> | undefined | null,
	/** All values containing the given string. */
	description_contains?: string | undefined | null,
	/** All values not containing the given string. */
	description_not_contains?: string | undefined | null,
	/** All values starting with the given string. */
	description_starts_with?: string | undefined | null,
	/** All values not starting with the given string. */
	description_not_starts_with?: string | undefined | null,
	/** All values ending with the given string. */
	description_ends_with?: string | undefined | null,
	/** All values not ending with the given string */
	description_not_ends_with?: string | undefined | null,
	publishedAt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values that are not equal to given value. */
	publishedAt_not?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values that are contained in given list. */
	publishedAt_in?: Array<ResolverInputTypes["DateTime"] | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	publishedAt_not_in?: Array<ResolverInputTypes["DateTime"] | undefined | null> | undefined | null,
	/** All values less than the given value. */
	publishedAt_lt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values less than or equal the given value. */
	publishedAt_lte?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values greater than the given value. */
	publishedAt_gt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values greater than or equal the given value. */
	publishedAt_gte?: ResolverInputTypes["DateTime"] | undefined | null,
	updatedAt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values that are not equal to given value. */
	updatedAt_not?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values that are contained in given list. */
	updatedAt_in?: Array<ResolverInputTypes["DateTime"] | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	updatedAt_not_in?: Array<ResolverInputTypes["DateTime"] | undefined | null> | undefined | null,
	/** All values less than the given value. */
	updatedAt_lt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values less than or equal the given value. */
	updatedAt_lte?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values greater than the given value. */
	updatedAt_gt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values greater than or equal the given value. */
	updatedAt_gte?: ResolverInputTypes["DateTime"] | undefined | null,
	createdAt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values that are not equal to given value. */
	createdAt_not?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values that are contained in given list. */
	createdAt_in?: Array<ResolverInputTypes["DateTime"] | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	createdAt_not_in?: Array<ResolverInputTypes["DateTime"] | undefined | null> | undefined | null,
	/** All values less than the given value. */
	createdAt_lt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values less than or equal the given value. */
	createdAt_lte?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values greater than the given value. */
	createdAt_gt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values greater than or equal the given value. */
	createdAt_gte?: ResolverInputTypes["DateTime"] | undefined | null,
	id?: string | undefined | null,
	/** All values that are not equal to given value. */
	id_not?: string | undefined | null,
	/** All values that are contained in given list. */
	id_in?: Array<string | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	id_not_in?: Array<string | undefined | null> | undefined | null,
	/** All values containing the given string. */
	id_contains?: string | undefined | null,
	/** All values not containing the given string. */
	id_not_contains?: string | undefined | null,
	/** All values starting with the given string. */
	id_starts_with?: string | undefined | null,
	/** All values not starting with the given string. */
	id_not_starts_with?: string | undefined | null,
	/** All values ending with the given string. */
	id_ends_with?: string | undefined | null,
	/** All values not ending with the given string */
	id_not_ends_with?: string | undefined | null,
	release?: ResolverInputTypes["ScheduledReleaseWhereInput"] | undefined | null,
	publishedBy?: ResolverInputTypes["UserWhereInput"] | undefined | null,
	updatedBy?: ResolverInputTypes["UserWhereInput"] | undefined | null,
	createdBy?: ResolverInputTypes["UserWhereInput"] | undefined | null,
	status?: ResolverInputTypes["ScheduledOperationStatus"] | undefined | null,
	/** All values that are not equal to given value. */
	status_not?: ResolverInputTypes["ScheduledOperationStatus"] | undefined | null,
	/** All values that are contained in given list. */
	status_in?: Array<ResolverInputTypes["ScheduledOperationStatus"] | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	status_not_in?: Array<ResolverInputTypes["ScheduledOperationStatus"] | undefined | null> | undefined | null
};
	/** References ScheduledOperation record uniquely */
["ScheduledOperationWhereUniqueInput"]: {
	id?: string | undefined | null
};
	/** Scheduled Release system model */
["ScheduledRelease"]: AliasType<{
	/** System stage field */
	stage?:boolean | `@${string}`,
documentInStages?: [{	/** Potential stages that should be returned */
	stages: Array<ResolverInputTypes["Stage"]>,	/** Decides if the current stage should be included or not */
	includeCurrent: boolean,	/** Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree */
	inheritLocale: boolean},ResolverInputTypes["ScheduledRelease"]],
	/** Release date and time */
	releaseAt?:boolean | `@${string}`,
	/** Whether scheduled release is implicit */
	isImplicit?:boolean | `@${string}`,
	/** Whether scheduled release should be run */
	isActive?:boolean | `@${string}`,
	/** Release error message */
	errorMessage?:boolean | `@${string}`,
	/** Release description */
	description?:boolean | `@${string}`,
	/** Release Title */
	title?:boolean | `@${string}`,
	/** The time the document was published. Null on documents in draft stage. */
	publishedAt?:boolean | `@${string}`,
	/** The time the document was updated */
	updatedAt?:boolean | `@${string}`,
	/** The time the document was created */
	createdAt?:boolean | `@${string}`,
	/** The unique identifier */
	id?:boolean | `@${string}`,
operations?: [{	where?: ResolverInputTypes["ScheduledOperationWhereInput"] | undefined | null,	orderBy?: ResolverInputTypes["ScheduledOperationOrderByInput"] | undefined | null,	skip?: number | undefined | null,	after?: string | undefined | null,	before?: string | undefined | null,	first?: number | undefined | null,	last?: number | undefined | null,	/** Allows to optionally override locale filtering behaviour in the query's subtree.

Note that `operations` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument will overwrite any existing locale filtering defined in the query's tree for the subtree. */
	locales?: Array<ResolverInputTypes["Locale"]> | undefined | null},ResolverInputTypes["ScheduledOperation"]],
publishedBy?: [{	/** Allows to optionally override locale filtering behaviour in the query's subtree.

Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument will overwrite any existing locale filtering defined in the query's tree for the subtree. */
	locales?: Array<ResolverInputTypes["Locale"]> | undefined | null},ResolverInputTypes["User"]],
updatedBy?: [{	/** Allows to optionally override locale filtering behaviour in the query's subtree.

Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument will overwrite any existing locale filtering defined in the query's tree for the subtree. */
	locales?: Array<ResolverInputTypes["Locale"]> | undefined | null},ResolverInputTypes["User"]],
createdBy?: [{	/** Allows to optionally override locale filtering behaviour in the query's subtree.

Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument will overwrite any existing locale filtering defined in the query's tree for the subtree. */
	locales?: Array<ResolverInputTypes["Locale"]> | undefined | null},ResolverInputTypes["User"]],
	/** Release Status */
	status?:boolean | `@${string}`,
		__typename?: boolean | `@${string}`
}>;
	["ScheduledReleaseConnectInput"]: {
	/** Document to connect */
	where: ResolverInputTypes["ScheduledReleaseWhereUniqueInput"],
	/** Allow to specify document position in list of connected documents, will default to appending at end of list */
	position?: ResolverInputTypes["ConnectPositionInput"] | undefined | null
};
	/** A connection to a list of items. */
["ScheduledReleaseConnection"]: AliasType<{
	/** Information to aid in pagination. */
	pageInfo?:ResolverInputTypes["PageInfo"],
	/** A list of edges. */
	edges?:ResolverInputTypes["ScheduledReleaseEdge"],
	aggregate?:ResolverInputTypes["Aggregate"],
		__typename?: boolean | `@${string}`
}>;
	["ScheduledReleaseCreateInput"]: {
	releaseAt?: ResolverInputTypes["DateTime"] | undefined | null,
	isActive?: boolean | undefined | null,
	errorMessage?: string | undefined | null,
	description?: string | undefined | null,
	title?: string | undefined | null,
	updatedAt?: ResolverInputTypes["DateTime"] | undefined | null,
	createdAt?: ResolverInputTypes["DateTime"] | undefined | null
};
	["ScheduledReleaseCreateManyInlineInput"]: {
	/** Create and connect multiple existing ScheduledRelease documents */
	create?: Array<ResolverInputTypes["ScheduledReleaseCreateInput"]> | undefined | null,
	/** Connect multiple existing ScheduledRelease documents */
	connect?: Array<ResolverInputTypes["ScheduledReleaseWhereUniqueInput"]> | undefined | null
};
	["ScheduledReleaseCreateOneInlineInput"]: {
	/** Create and connect one ScheduledRelease document */
	create?: ResolverInputTypes["ScheduledReleaseCreateInput"] | undefined | null,
	/** Connect one existing ScheduledRelease document */
	connect?: ResolverInputTypes["ScheduledReleaseWhereUniqueInput"] | undefined | null
};
	/** An edge in a connection. */
["ScheduledReleaseEdge"]: AliasType<{
	/** The item at the end of the edge. */
	node?:ResolverInputTypes["ScheduledRelease"],
	/** A cursor for use in pagination. */
	cursor?:boolean | `@${string}`,
		__typename?: boolean | `@${string}`
}>;
	/** Identifies documents */
["ScheduledReleaseManyWhereInput"]: {
	/** Contains search across all appropriate fields. */
	_search?: string | undefined | null,
	/** Logical AND on all given filters. */
	AND?: Array<ResolverInputTypes["ScheduledReleaseWhereInput"]> | undefined | null,
	/** Logical OR on all given filters. */
	OR?: Array<ResolverInputTypes["ScheduledReleaseWhereInput"]> | undefined | null,
	/** Logical NOT on all given filters combined by AND. */
	NOT?: Array<ResolverInputTypes["ScheduledReleaseWhereInput"]> | undefined | null,
	releaseAt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values that are not equal to given value. */
	releaseAt_not?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values that are contained in given list. */
	releaseAt_in?: Array<ResolverInputTypes["DateTime"] | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	releaseAt_not_in?: Array<ResolverInputTypes["DateTime"] | undefined | null> | undefined | null,
	/** All values less than the given value. */
	releaseAt_lt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values less than or equal the given value. */
	releaseAt_lte?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values greater than the given value. */
	releaseAt_gt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values greater than or equal the given value. */
	releaseAt_gte?: ResolverInputTypes["DateTime"] | undefined | null,
	isImplicit?: boolean | undefined | null,
	/** All values that are not equal to given value. */
	isImplicit_not?: boolean | undefined | null,
	isActive?: boolean | undefined | null,
	/** All values that are not equal to given value. */
	isActive_not?: boolean | undefined | null,
	errorMessage?: string | undefined | null,
	/** All values that are not equal to given value. */
	errorMessage_not?: string | undefined | null,
	/** All values that are contained in given list. */
	errorMessage_in?: Array<string | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	errorMessage_not_in?: Array<string | undefined | null> | undefined | null,
	/** All values containing the given string. */
	errorMessage_contains?: string | undefined | null,
	/** All values not containing the given string. */
	errorMessage_not_contains?: string | undefined | null,
	/** All values starting with the given string. */
	errorMessage_starts_with?: string | undefined | null,
	/** All values not starting with the given string. */
	errorMessage_not_starts_with?: string | undefined | null,
	/** All values ending with the given string. */
	errorMessage_ends_with?: string | undefined | null,
	/** All values not ending with the given string */
	errorMessage_not_ends_with?: string | undefined | null,
	description?: string | undefined | null,
	/** All values that are not equal to given value. */
	description_not?: string | undefined | null,
	/** All values that are contained in given list. */
	description_in?: Array<string | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	description_not_in?: Array<string | undefined | null> | undefined | null,
	/** All values containing the given string. */
	description_contains?: string | undefined | null,
	/** All values not containing the given string. */
	description_not_contains?: string | undefined | null,
	/** All values starting with the given string. */
	description_starts_with?: string | undefined | null,
	/** All values not starting with the given string. */
	description_not_starts_with?: string | undefined | null,
	/** All values ending with the given string. */
	description_ends_with?: string | undefined | null,
	/** All values not ending with the given string */
	description_not_ends_with?: string | undefined | null,
	title?: string | undefined | null,
	/** All values that are not equal to given value. */
	title_not?: string | undefined | null,
	/** All values that are contained in given list. */
	title_in?: Array<string | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	title_not_in?: Array<string | undefined | null> | undefined | null,
	/** All values containing the given string. */
	title_contains?: string | undefined | null,
	/** All values not containing the given string. */
	title_not_contains?: string | undefined | null,
	/** All values starting with the given string. */
	title_starts_with?: string | undefined | null,
	/** All values not starting with the given string. */
	title_not_starts_with?: string | undefined | null,
	/** All values ending with the given string. */
	title_ends_with?: string | undefined | null,
	/** All values not ending with the given string */
	title_not_ends_with?: string | undefined | null,
	publishedAt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values that are not equal to given value. */
	publishedAt_not?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values that are contained in given list. */
	publishedAt_in?: Array<ResolverInputTypes["DateTime"] | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	publishedAt_not_in?: Array<ResolverInputTypes["DateTime"] | undefined | null> | undefined | null,
	/** All values less than the given value. */
	publishedAt_lt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values less than or equal the given value. */
	publishedAt_lte?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values greater than the given value. */
	publishedAt_gt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values greater than or equal the given value. */
	publishedAt_gte?: ResolverInputTypes["DateTime"] | undefined | null,
	updatedAt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values that are not equal to given value. */
	updatedAt_not?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values that are contained in given list. */
	updatedAt_in?: Array<ResolverInputTypes["DateTime"] | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	updatedAt_not_in?: Array<ResolverInputTypes["DateTime"] | undefined | null> | undefined | null,
	/** All values less than the given value. */
	updatedAt_lt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values less than or equal the given value. */
	updatedAt_lte?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values greater than the given value. */
	updatedAt_gt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values greater than or equal the given value. */
	updatedAt_gte?: ResolverInputTypes["DateTime"] | undefined | null,
	createdAt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values that are not equal to given value. */
	createdAt_not?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values that are contained in given list. */
	createdAt_in?: Array<ResolverInputTypes["DateTime"] | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	createdAt_not_in?: Array<ResolverInputTypes["DateTime"] | undefined | null> | undefined | null,
	/** All values less than the given value. */
	createdAt_lt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values less than or equal the given value. */
	createdAt_lte?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values greater than the given value. */
	createdAt_gt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values greater than or equal the given value. */
	createdAt_gte?: ResolverInputTypes["DateTime"] | undefined | null,
	id?: string | undefined | null,
	/** All values that are not equal to given value. */
	id_not?: string | undefined | null,
	/** All values that are contained in given list. */
	id_in?: Array<string | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	id_not_in?: Array<string | undefined | null> | undefined | null,
	/** All values containing the given string. */
	id_contains?: string | undefined | null,
	/** All values not containing the given string. */
	id_not_contains?: string | undefined | null,
	/** All values starting with the given string. */
	id_starts_with?: string | undefined | null,
	/** All values not starting with the given string. */
	id_not_starts_with?: string | undefined | null,
	/** All values ending with the given string. */
	id_ends_with?: string | undefined | null,
	/** All values not ending with the given string */
	id_not_ends_with?: string | undefined | null,
	operations_every?: ResolverInputTypes["ScheduledOperationWhereInput"] | undefined | null,
	operations_some?: ResolverInputTypes["ScheduledOperationWhereInput"] | undefined | null,
	operations_none?: ResolverInputTypes["ScheduledOperationWhereInput"] | undefined | null,
	publishedBy?: ResolverInputTypes["UserWhereInput"] | undefined | null,
	updatedBy?: ResolverInputTypes["UserWhereInput"] | undefined | null,
	createdBy?: ResolverInputTypes["UserWhereInput"] | undefined | null,
	status?: ResolverInputTypes["ScheduledReleaseStatus"] | undefined | null,
	/** All values that are not equal to given value. */
	status_not?: ResolverInputTypes["ScheduledReleaseStatus"] | undefined | null,
	/** All values that are contained in given list. */
	status_in?: Array<ResolverInputTypes["ScheduledReleaseStatus"] | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	status_not_in?: Array<ResolverInputTypes["ScheduledReleaseStatus"] | undefined | null> | undefined | null
};
	["ScheduledReleaseOrderByInput"]:ScheduledReleaseOrderByInput;
	/** System Scheduled Release Status */
["ScheduledReleaseStatus"]:ScheduledReleaseStatus;
	["ScheduledReleaseUpdateInput"]: {
	releaseAt?: ResolverInputTypes["DateTime"] | undefined | null,
	isActive?: boolean | undefined | null,
	errorMessage?: string | undefined | null,
	description?: string | undefined | null,
	title?: string | undefined | null
};
	["ScheduledReleaseUpdateManyInlineInput"]: {
	/** Create and connect multiple ScheduledRelease documents */
	create?: Array<ResolverInputTypes["ScheduledReleaseCreateInput"]> | undefined | null,
	/** Connect multiple existing ScheduledRelease documents */
	connect?: Array<ResolverInputTypes["ScheduledReleaseConnectInput"]> | undefined | null,
	/** Override currently-connected documents with multiple existing ScheduledRelease documents */
	set?: Array<ResolverInputTypes["ScheduledReleaseWhereUniqueInput"]> | undefined | null,
	/** Update multiple ScheduledRelease documents */
	update?: Array<ResolverInputTypes["ScheduledReleaseUpdateWithNestedWhereUniqueInput"]> | undefined | null,
	/** Upsert multiple ScheduledRelease documents */
	upsert?: Array<ResolverInputTypes["ScheduledReleaseUpsertWithNestedWhereUniqueInput"]> | undefined | null,
	/** Disconnect multiple ScheduledRelease documents */
	disconnect?: Array<ResolverInputTypes["ScheduledReleaseWhereUniqueInput"]> | undefined | null,
	/** Delete multiple ScheduledRelease documents */
	delete?: Array<ResolverInputTypes["ScheduledReleaseWhereUniqueInput"]> | undefined | null
};
	["ScheduledReleaseUpdateManyInput"]: {
	releaseAt?: ResolverInputTypes["DateTime"] | undefined | null,
	isActive?: boolean | undefined | null,
	errorMessage?: string | undefined | null,
	description?: string | undefined | null,
	title?: string | undefined | null
};
	["ScheduledReleaseUpdateManyWithNestedWhereInput"]: {
	/** Document search */
	where: ResolverInputTypes["ScheduledReleaseWhereInput"],
	/** Update many input */
	data: ResolverInputTypes["ScheduledReleaseUpdateManyInput"]
};
	["ScheduledReleaseUpdateOneInlineInput"]: {
	/** Create and connect one ScheduledRelease document */
	create?: ResolverInputTypes["ScheduledReleaseCreateInput"] | undefined | null,
	/** Update single ScheduledRelease document */
	update?: ResolverInputTypes["ScheduledReleaseUpdateWithNestedWhereUniqueInput"] | undefined | null,
	/** Upsert single ScheduledRelease document */
	upsert?: ResolverInputTypes["ScheduledReleaseUpsertWithNestedWhereUniqueInput"] | undefined | null,
	/** Connect existing ScheduledRelease document */
	connect?: ResolverInputTypes["ScheduledReleaseWhereUniqueInput"] | undefined | null,
	/** Disconnect currently connected ScheduledRelease document */
	disconnect?: boolean | undefined | null,
	/** Delete currently connected ScheduledRelease document */
	delete?: boolean | undefined | null
};
	["ScheduledReleaseUpdateWithNestedWhereUniqueInput"]: {
	/** Unique document search */
	where: ResolverInputTypes["ScheduledReleaseWhereUniqueInput"],
	/** Document to update */
	data: ResolverInputTypes["ScheduledReleaseUpdateInput"]
};
	["ScheduledReleaseUpsertInput"]: {
	/** Create document if it didn't exist */
	create: ResolverInputTypes["ScheduledReleaseCreateInput"],
	/** Update document if it exists */
	update: ResolverInputTypes["ScheduledReleaseUpdateInput"]
};
	["ScheduledReleaseUpsertWithNestedWhereUniqueInput"]: {
	/** Unique document search */
	where: ResolverInputTypes["ScheduledReleaseWhereUniqueInput"],
	/** Upsert data */
	data: ResolverInputTypes["ScheduledReleaseUpsertInput"]
};
	/** Identifies documents */
["ScheduledReleaseWhereInput"]: {
	/** Contains search across all appropriate fields. */
	_search?: string | undefined | null,
	/** Logical AND on all given filters. */
	AND?: Array<ResolverInputTypes["ScheduledReleaseWhereInput"]> | undefined | null,
	/** Logical OR on all given filters. */
	OR?: Array<ResolverInputTypes["ScheduledReleaseWhereInput"]> | undefined | null,
	/** Logical NOT on all given filters combined by AND. */
	NOT?: Array<ResolverInputTypes["ScheduledReleaseWhereInput"]> | undefined | null,
	releaseAt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values that are not equal to given value. */
	releaseAt_not?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values that are contained in given list. */
	releaseAt_in?: Array<ResolverInputTypes["DateTime"] | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	releaseAt_not_in?: Array<ResolverInputTypes["DateTime"] | undefined | null> | undefined | null,
	/** All values less than the given value. */
	releaseAt_lt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values less than or equal the given value. */
	releaseAt_lte?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values greater than the given value. */
	releaseAt_gt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values greater than or equal the given value. */
	releaseAt_gte?: ResolverInputTypes["DateTime"] | undefined | null,
	isImplicit?: boolean | undefined | null,
	/** All values that are not equal to given value. */
	isImplicit_not?: boolean | undefined | null,
	isActive?: boolean | undefined | null,
	/** All values that are not equal to given value. */
	isActive_not?: boolean | undefined | null,
	errorMessage?: string | undefined | null,
	/** All values that are not equal to given value. */
	errorMessage_not?: string | undefined | null,
	/** All values that are contained in given list. */
	errorMessage_in?: Array<string | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	errorMessage_not_in?: Array<string | undefined | null> | undefined | null,
	/** All values containing the given string. */
	errorMessage_contains?: string | undefined | null,
	/** All values not containing the given string. */
	errorMessage_not_contains?: string | undefined | null,
	/** All values starting with the given string. */
	errorMessage_starts_with?: string | undefined | null,
	/** All values not starting with the given string. */
	errorMessage_not_starts_with?: string | undefined | null,
	/** All values ending with the given string. */
	errorMessage_ends_with?: string | undefined | null,
	/** All values not ending with the given string */
	errorMessage_not_ends_with?: string | undefined | null,
	description?: string | undefined | null,
	/** All values that are not equal to given value. */
	description_not?: string | undefined | null,
	/** All values that are contained in given list. */
	description_in?: Array<string | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	description_not_in?: Array<string | undefined | null> | undefined | null,
	/** All values containing the given string. */
	description_contains?: string | undefined | null,
	/** All values not containing the given string. */
	description_not_contains?: string | undefined | null,
	/** All values starting with the given string. */
	description_starts_with?: string | undefined | null,
	/** All values not starting with the given string. */
	description_not_starts_with?: string | undefined | null,
	/** All values ending with the given string. */
	description_ends_with?: string | undefined | null,
	/** All values not ending with the given string */
	description_not_ends_with?: string | undefined | null,
	title?: string | undefined | null,
	/** All values that are not equal to given value. */
	title_not?: string | undefined | null,
	/** All values that are contained in given list. */
	title_in?: Array<string | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	title_not_in?: Array<string | undefined | null> | undefined | null,
	/** All values containing the given string. */
	title_contains?: string | undefined | null,
	/** All values not containing the given string. */
	title_not_contains?: string | undefined | null,
	/** All values starting with the given string. */
	title_starts_with?: string | undefined | null,
	/** All values not starting with the given string. */
	title_not_starts_with?: string | undefined | null,
	/** All values ending with the given string. */
	title_ends_with?: string | undefined | null,
	/** All values not ending with the given string */
	title_not_ends_with?: string | undefined | null,
	publishedAt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values that are not equal to given value. */
	publishedAt_not?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values that are contained in given list. */
	publishedAt_in?: Array<ResolverInputTypes["DateTime"] | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	publishedAt_not_in?: Array<ResolverInputTypes["DateTime"] | undefined | null> | undefined | null,
	/** All values less than the given value. */
	publishedAt_lt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values less than or equal the given value. */
	publishedAt_lte?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values greater than the given value. */
	publishedAt_gt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values greater than or equal the given value. */
	publishedAt_gte?: ResolverInputTypes["DateTime"] | undefined | null,
	updatedAt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values that are not equal to given value. */
	updatedAt_not?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values that are contained in given list. */
	updatedAt_in?: Array<ResolverInputTypes["DateTime"] | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	updatedAt_not_in?: Array<ResolverInputTypes["DateTime"] | undefined | null> | undefined | null,
	/** All values less than the given value. */
	updatedAt_lt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values less than or equal the given value. */
	updatedAt_lte?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values greater than the given value. */
	updatedAt_gt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values greater than or equal the given value. */
	updatedAt_gte?: ResolverInputTypes["DateTime"] | undefined | null,
	createdAt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values that are not equal to given value. */
	createdAt_not?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values that are contained in given list. */
	createdAt_in?: Array<ResolverInputTypes["DateTime"] | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	createdAt_not_in?: Array<ResolverInputTypes["DateTime"] | undefined | null> | undefined | null,
	/** All values less than the given value. */
	createdAt_lt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values less than or equal the given value. */
	createdAt_lte?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values greater than the given value. */
	createdAt_gt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values greater than or equal the given value. */
	createdAt_gte?: ResolverInputTypes["DateTime"] | undefined | null,
	id?: string | undefined | null,
	/** All values that are not equal to given value. */
	id_not?: string | undefined | null,
	/** All values that are contained in given list. */
	id_in?: Array<string | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	id_not_in?: Array<string | undefined | null> | undefined | null,
	/** All values containing the given string. */
	id_contains?: string | undefined | null,
	/** All values not containing the given string. */
	id_not_contains?: string | undefined | null,
	/** All values starting with the given string. */
	id_starts_with?: string | undefined | null,
	/** All values not starting with the given string. */
	id_not_starts_with?: string | undefined | null,
	/** All values ending with the given string. */
	id_ends_with?: string | undefined | null,
	/** All values not ending with the given string */
	id_not_ends_with?: string | undefined | null,
	operations_every?: ResolverInputTypes["ScheduledOperationWhereInput"] | undefined | null,
	operations_some?: ResolverInputTypes["ScheduledOperationWhereInput"] | undefined | null,
	operations_none?: ResolverInputTypes["ScheduledOperationWhereInput"] | undefined | null,
	publishedBy?: ResolverInputTypes["UserWhereInput"] | undefined | null,
	updatedBy?: ResolverInputTypes["UserWhereInput"] | undefined | null,
	createdBy?: ResolverInputTypes["UserWhereInput"] | undefined | null,
	status?: ResolverInputTypes["ScheduledReleaseStatus"] | undefined | null,
	/** All values that are not equal to given value. */
	status_not?: ResolverInputTypes["ScheduledReleaseStatus"] | undefined | null,
	/** All values that are contained in given list. */
	status_in?: Array<ResolverInputTypes["ScheduledReleaseStatus"] | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	status_not_in?: Array<ResolverInputTypes["ScheduledReleaseStatus"] | undefined | null> | undefined | null
};
	/** References ScheduledRelease record uniquely */
["ScheduledReleaseWhereUniqueInput"]: {
	id?: string | undefined | null
};
	["Seo"]: AliasType<{
	/** System stage field */
	stage?:boolean | `@${string}`,
documentInStages?: [{	/** Potential stages that should be returned */
	stages: Array<ResolverInputTypes["Stage"]>,	/** Decides if the current stage should be included or not */
	includeCurrent: boolean,	/** Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree */
	inheritLocale: boolean},ResolverInputTypes["Seo"]],
	/** The time the document was published. Null on documents in draft stage. */
	publishedAt?:boolean | `@${string}`,
	/** The time the document was updated */
	updatedAt?:boolean | `@${string}`,
	/** The time the document was created */
	createdAt?:boolean | `@${string}`,
	/** The unique identifier */
	id?:boolean | `@${string}`,
	title?:boolean | `@${string}`,
	description?:boolean | `@${string}`,
	keywords?:boolean | `@${string}`,
publishedBy?: [{	/** Allows to optionally override locale filtering behaviour in the query's subtree.

Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument will overwrite any existing locale filtering defined in the query's tree for the subtree. */
	locales?: Array<ResolverInputTypes["Locale"]> | undefined | null},ResolverInputTypes["User"]],
updatedBy?: [{	/** Allows to optionally override locale filtering behaviour in the query's subtree.

Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument will overwrite any existing locale filtering defined in the query's tree for the subtree. */
	locales?: Array<ResolverInputTypes["Locale"]> | undefined | null},ResolverInputTypes["User"]],
createdBy?: [{	/** Allows to optionally override locale filtering behaviour in the query's subtree.

Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument will overwrite any existing locale filtering defined in the query's tree for the subtree. */
	locales?: Array<ResolverInputTypes["Locale"]> | undefined | null},ResolverInputTypes["User"]],
og_image?: [{	/** Allows to optionally override locale filtering behaviour in the query's subtree.

Note that `og_image` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument will overwrite any existing locale filtering defined in the query's tree for the subtree. */
	locales?: Array<ResolverInputTypes["Locale"]> | undefined | null},ResolverInputTypes["Asset"]],
scheduledIn?: [{	where?: ResolverInputTypes["ScheduledOperationWhereInput"] | undefined | null,	skip?: number | undefined | null,	after?: string | undefined | null,	before?: string | undefined | null,	first?: number | undefined | null,	last?: number | undefined | null,	/** Allows to optionally override locale filtering behaviour in the query's subtree.

Note that `scheduledIn` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument will overwrite any existing locale filtering defined in the query's tree for the subtree. */
	locales?: Array<ResolverInputTypes["Locale"]> | undefined | null},ResolverInputTypes["ScheduledOperation"]],
history?: [{	limit: number,	skip: number,	/** This is optional and can be used to fetch the document version history for a specific stage instead of the current one */
	stageOverride?: ResolverInputTypes["Stage"] | undefined | null},ResolverInputTypes["Version"]],
		__typename?: boolean | `@${string}`
}>;
	["SeoConnectInput"]: {
	/** Document to connect */
	where: ResolverInputTypes["SeoWhereUniqueInput"],
	/** Allow to specify document position in list of connected documents, will default to appending at end of list */
	position?: ResolverInputTypes["ConnectPositionInput"] | undefined | null
};
	/** A connection to a list of items. */
["SeoConnection"]: AliasType<{
	/** Information to aid in pagination. */
	pageInfo?:ResolverInputTypes["PageInfo"],
	/** A list of edges. */
	edges?:ResolverInputTypes["SeoEdge"],
	aggregate?:ResolverInputTypes["Aggregate"],
		__typename?: boolean | `@${string}`
}>;
	["SeoCreateInput"]: {
	updatedAt?: ResolverInputTypes["DateTime"] | undefined | null,
	createdAt?: ResolverInputTypes["DateTime"] | undefined | null,
	title: string,
	description: string,
	keywords: Array<string>,
	og_image: ResolverInputTypes["AssetCreateOneInlineInput"]
};
	["SeoCreateManyInlineInput"]: {
	/** Create and connect multiple existing Seo documents */
	create?: Array<ResolverInputTypes["SeoCreateInput"]> | undefined | null,
	/** Connect multiple existing Seo documents */
	connect?: Array<ResolverInputTypes["SeoWhereUniqueInput"]> | undefined | null
};
	["SeoCreateOneInlineInput"]: {
	/** Create and connect one Seo document */
	create?: ResolverInputTypes["SeoCreateInput"] | undefined | null,
	/** Connect one existing Seo document */
	connect?: ResolverInputTypes["SeoWhereUniqueInput"] | undefined | null
};
	/** An edge in a connection. */
["SeoEdge"]: AliasType<{
	/** The item at the end of the edge. */
	node?:ResolverInputTypes["Seo"],
	/** A cursor for use in pagination. */
	cursor?:boolean | `@${string}`,
		__typename?: boolean | `@${string}`
}>;
	/** Identifies documents */
["SeoManyWhereInput"]: {
	/** Contains search across all appropriate fields. */
	_search?: string | undefined | null,
	/** Logical AND on all given filters. */
	AND?: Array<ResolverInputTypes["SeoWhereInput"]> | undefined | null,
	/** Logical OR on all given filters. */
	OR?: Array<ResolverInputTypes["SeoWhereInput"]> | undefined | null,
	/** Logical NOT on all given filters combined by AND. */
	NOT?: Array<ResolverInputTypes["SeoWhereInput"]> | undefined | null,
	publishedAt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values that are not equal to given value. */
	publishedAt_not?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values that are contained in given list. */
	publishedAt_in?: Array<ResolverInputTypes["DateTime"] | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	publishedAt_not_in?: Array<ResolverInputTypes["DateTime"] | undefined | null> | undefined | null,
	/** All values less than the given value. */
	publishedAt_lt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values less than or equal the given value. */
	publishedAt_lte?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values greater than the given value. */
	publishedAt_gt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values greater than or equal the given value. */
	publishedAt_gte?: ResolverInputTypes["DateTime"] | undefined | null,
	updatedAt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values that are not equal to given value. */
	updatedAt_not?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values that are contained in given list. */
	updatedAt_in?: Array<ResolverInputTypes["DateTime"] | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	updatedAt_not_in?: Array<ResolverInputTypes["DateTime"] | undefined | null> | undefined | null,
	/** All values less than the given value. */
	updatedAt_lt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values less than or equal the given value. */
	updatedAt_lte?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values greater than the given value. */
	updatedAt_gt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values greater than or equal the given value. */
	updatedAt_gte?: ResolverInputTypes["DateTime"] | undefined | null,
	createdAt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values that are not equal to given value. */
	createdAt_not?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values that are contained in given list. */
	createdAt_in?: Array<ResolverInputTypes["DateTime"] | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	createdAt_not_in?: Array<ResolverInputTypes["DateTime"] | undefined | null> | undefined | null,
	/** All values less than the given value. */
	createdAt_lt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values less than or equal the given value. */
	createdAt_lte?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values greater than the given value. */
	createdAt_gt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values greater than or equal the given value. */
	createdAt_gte?: ResolverInputTypes["DateTime"] | undefined | null,
	id?: string | undefined | null,
	/** All values that are not equal to given value. */
	id_not?: string | undefined | null,
	/** All values that are contained in given list. */
	id_in?: Array<string | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	id_not_in?: Array<string | undefined | null> | undefined | null,
	/** All values containing the given string. */
	id_contains?: string | undefined | null,
	/** All values not containing the given string. */
	id_not_contains?: string | undefined | null,
	/** All values starting with the given string. */
	id_starts_with?: string | undefined | null,
	/** All values not starting with the given string. */
	id_not_starts_with?: string | undefined | null,
	/** All values ending with the given string. */
	id_ends_with?: string | undefined | null,
	/** All values not ending with the given string */
	id_not_ends_with?: string | undefined | null,
	title?: string | undefined | null,
	/** All values that are not equal to given value. */
	title_not?: string | undefined | null,
	/** All values that are contained in given list. */
	title_in?: Array<string | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	title_not_in?: Array<string | undefined | null> | undefined | null,
	/** All values containing the given string. */
	title_contains?: string | undefined | null,
	/** All values not containing the given string. */
	title_not_contains?: string | undefined | null,
	/** All values starting with the given string. */
	title_starts_with?: string | undefined | null,
	/** All values not starting with the given string. */
	title_not_starts_with?: string | undefined | null,
	/** All values ending with the given string. */
	title_ends_with?: string | undefined | null,
	/** All values not ending with the given string */
	title_not_ends_with?: string | undefined | null,
	description?: string | undefined | null,
	/** All values that are not equal to given value. */
	description_not?: string | undefined | null,
	/** All values that are contained in given list. */
	description_in?: Array<string | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	description_not_in?: Array<string | undefined | null> | undefined | null,
	/** All values containing the given string. */
	description_contains?: string | undefined | null,
	/** All values not containing the given string. */
	description_not_contains?: string | undefined | null,
	/** All values starting with the given string. */
	description_starts_with?: string | undefined | null,
	/** All values not starting with the given string. */
	description_not_starts_with?: string | undefined | null,
	/** All values ending with the given string. */
	description_ends_with?: string | undefined | null,
	/** All values not ending with the given string */
	description_not_ends_with?: string | undefined | null,
	/** Matches if the field array contains *all* items provided to the filter and order does match */
	keywords?: Array<string> | undefined | null,
	/** Matches if the field array does not contains *all* items provided to the filter or order does not match */
	keywords_not?: Array<string> | undefined | null,
	/** Matches if the field array contains *all* items provided to the filter */
	keywords_contains_all?: Array<string> | undefined | null,
	/** Matches if the field array contains at least one item provided to the filter */
	keywords_contains_some?: Array<string> | undefined | null,
	/** Matches if the field array does not contain any of the items provided to the filter */
	keywords_contains_none?: Array<string> | undefined | null,
	publishedBy?: ResolverInputTypes["UserWhereInput"] | undefined | null,
	updatedBy?: ResolverInputTypes["UserWhereInput"] | undefined | null,
	createdBy?: ResolverInputTypes["UserWhereInput"] | undefined | null,
	og_image?: ResolverInputTypes["AssetWhereInput"] | undefined | null,
	scheduledIn_every?: ResolverInputTypes["ScheduledOperationWhereInput"] | undefined | null,
	scheduledIn_some?: ResolverInputTypes["ScheduledOperationWhereInput"] | undefined | null,
	scheduledIn_none?: ResolverInputTypes["ScheduledOperationWhereInput"] | undefined | null
};
	["SeoOrderByInput"]:SeoOrderByInput;
	["SeoUpdateInput"]: {
	title?: string | undefined | null,
	description?: string | undefined | null,
	keywords?: Array<string> | undefined | null,
	og_image?: ResolverInputTypes["AssetUpdateOneInlineInput"] | undefined | null
};
	["SeoUpdateManyInlineInput"]: {
	/** Create and connect multiple Seo documents */
	create?: Array<ResolverInputTypes["SeoCreateInput"]> | undefined | null,
	/** Connect multiple existing Seo documents */
	connect?: Array<ResolverInputTypes["SeoConnectInput"]> | undefined | null,
	/** Override currently-connected documents with multiple existing Seo documents */
	set?: Array<ResolverInputTypes["SeoWhereUniqueInput"]> | undefined | null,
	/** Update multiple Seo documents */
	update?: Array<ResolverInputTypes["SeoUpdateWithNestedWhereUniqueInput"]> | undefined | null,
	/** Upsert multiple Seo documents */
	upsert?: Array<ResolverInputTypes["SeoUpsertWithNestedWhereUniqueInput"]> | undefined | null,
	/** Disconnect multiple Seo documents */
	disconnect?: Array<ResolverInputTypes["SeoWhereUniqueInput"]> | undefined | null,
	/** Delete multiple Seo documents */
	delete?: Array<ResolverInputTypes["SeoWhereUniqueInput"]> | undefined | null
};
	["SeoUpdateManyInput"]: {
	title?: string | undefined | null,
	description?: string | undefined | null,
	keywords?: Array<string> | undefined | null
};
	["SeoUpdateManyWithNestedWhereInput"]: {
	/** Document search */
	where: ResolverInputTypes["SeoWhereInput"],
	/** Update many input */
	data: ResolverInputTypes["SeoUpdateManyInput"]
};
	["SeoUpdateOneInlineInput"]: {
	/** Create and connect one Seo document */
	create?: ResolverInputTypes["SeoCreateInput"] | undefined | null,
	/** Update single Seo document */
	update?: ResolverInputTypes["SeoUpdateWithNestedWhereUniqueInput"] | undefined | null,
	/** Upsert single Seo document */
	upsert?: ResolverInputTypes["SeoUpsertWithNestedWhereUniqueInput"] | undefined | null,
	/** Connect existing Seo document */
	connect?: ResolverInputTypes["SeoWhereUniqueInput"] | undefined | null,
	/** Disconnect currently connected Seo document */
	disconnect?: boolean | undefined | null,
	/** Delete currently connected Seo document */
	delete?: boolean | undefined | null
};
	["SeoUpdateWithNestedWhereUniqueInput"]: {
	/** Unique document search */
	where: ResolverInputTypes["SeoWhereUniqueInput"],
	/** Document to update */
	data: ResolverInputTypes["SeoUpdateInput"]
};
	["SeoUpsertInput"]: {
	/** Create document if it didn't exist */
	create: ResolverInputTypes["SeoCreateInput"],
	/** Update document if it exists */
	update: ResolverInputTypes["SeoUpdateInput"]
};
	["SeoUpsertWithNestedWhereUniqueInput"]: {
	/** Unique document search */
	where: ResolverInputTypes["SeoWhereUniqueInput"],
	/** Upsert data */
	data: ResolverInputTypes["SeoUpsertInput"]
};
	/** Identifies documents */
["SeoWhereInput"]: {
	/** Contains search across all appropriate fields. */
	_search?: string | undefined | null,
	/** Logical AND on all given filters. */
	AND?: Array<ResolverInputTypes["SeoWhereInput"]> | undefined | null,
	/** Logical OR on all given filters. */
	OR?: Array<ResolverInputTypes["SeoWhereInput"]> | undefined | null,
	/** Logical NOT on all given filters combined by AND. */
	NOT?: Array<ResolverInputTypes["SeoWhereInput"]> | undefined | null,
	publishedAt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values that are not equal to given value. */
	publishedAt_not?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values that are contained in given list. */
	publishedAt_in?: Array<ResolverInputTypes["DateTime"] | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	publishedAt_not_in?: Array<ResolverInputTypes["DateTime"] | undefined | null> | undefined | null,
	/** All values less than the given value. */
	publishedAt_lt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values less than or equal the given value. */
	publishedAt_lte?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values greater than the given value. */
	publishedAt_gt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values greater than or equal the given value. */
	publishedAt_gte?: ResolverInputTypes["DateTime"] | undefined | null,
	updatedAt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values that are not equal to given value. */
	updatedAt_not?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values that are contained in given list. */
	updatedAt_in?: Array<ResolverInputTypes["DateTime"] | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	updatedAt_not_in?: Array<ResolverInputTypes["DateTime"] | undefined | null> | undefined | null,
	/** All values less than the given value. */
	updatedAt_lt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values less than or equal the given value. */
	updatedAt_lte?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values greater than the given value. */
	updatedAt_gt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values greater than or equal the given value. */
	updatedAt_gte?: ResolverInputTypes["DateTime"] | undefined | null,
	createdAt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values that are not equal to given value. */
	createdAt_not?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values that are contained in given list. */
	createdAt_in?: Array<ResolverInputTypes["DateTime"] | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	createdAt_not_in?: Array<ResolverInputTypes["DateTime"] | undefined | null> | undefined | null,
	/** All values less than the given value. */
	createdAt_lt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values less than or equal the given value. */
	createdAt_lte?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values greater than the given value. */
	createdAt_gt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values greater than or equal the given value. */
	createdAt_gte?: ResolverInputTypes["DateTime"] | undefined | null,
	id?: string | undefined | null,
	/** All values that are not equal to given value. */
	id_not?: string | undefined | null,
	/** All values that are contained in given list. */
	id_in?: Array<string | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	id_not_in?: Array<string | undefined | null> | undefined | null,
	/** All values containing the given string. */
	id_contains?: string | undefined | null,
	/** All values not containing the given string. */
	id_not_contains?: string | undefined | null,
	/** All values starting with the given string. */
	id_starts_with?: string | undefined | null,
	/** All values not starting with the given string. */
	id_not_starts_with?: string | undefined | null,
	/** All values ending with the given string. */
	id_ends_with?: string | undefined | null,
	/** All values not ending with the given string */
	id_not_ends_with?: string | undefined | null,
	title?: string | undefined | null,
	/** All values that are not equal to given value. */
	title_not?: string | undefined | null,
	/** All values that are contained in given list. */
	title_in?: Array<string | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	title_not_in?: Array<string | undefined | null> | undefined | null,
	/** All values containing the given string. */
	title_contains?: string | undefined | null,
	/** All values not containing the given string. */
	title_not_contains?: string | undefined | null,
	/** All values starting with the given string. */
	title_starts_with?: string | undefined | null,
	/** All values not starting with the given string. */
	title_not_starts_with?: string | undefined | null,
	/** All values ending with the given string. */
	title_ends_with?: string | undefined | null,
	/** All values not ending with the given string */
	title_not_ends_with?: string | undefined | null,
	description?: string | undefined | null,
	/** All values that are not equal to given value. */
	description_not?: string | undefined | null,
	/** All values that are contained in given list. */
	description_in?: Array<string | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	description_not_in?: Array<string | undefined | null> | undefined | null,
	/** All values containing the given string. */
	description_contains?: string | undefined | null,
	/** All values not containing the given string. */
	description_not_contains?: string | undefined | null,
	/** All values starting with the given string. */
	description_starts_with?: string | undefined | null,
	/** All values not starting with the given string. */
	description_not_starts_with?: string | undefined | null,
	/** All values ending with the given string. */
	description_ends_with?: string | undefined | null,
	/** All values not ending with the given string */
	description_not_ends_with?: string | undefined | null,
	/** Matches if the field array contains *all* items provided to the filter and order does match */
	keywords?: Array<string> | undefined | null,
	/** Matches if the field array does not contains *all* items provided to the filter or order does not match */
	keywords_not?: Array<string> | undefined | null,
	/** Matches if the field array contains *all* items provided to the filter */
	keywords_contains_all?: Array<string> | undefined | null,
	/** Matches if the field array contains at least one item provided to the filter */
	keywords_contains_some?: Array<string> | undefined | null,
	/** Matches if the field array does not contain any of the items provided to the filter */
	keywords_contains_none?: Array<string> | undefined | null,
	publishedBy?: ResolverInputTypes["UserWhereInput"] | undefined | null,
	updatedBy?: ResolverInputTypes["UserWhereInput"] | undefined | null,
	createdBy?: ResolverInputTypes["UserWhereInput"] | undefined | null,
	og_image?: ResolverInputTypes["AssetWhereInput"] | undefined | null,
	scheduledIn_every?: ResolverInputTypes["ScheduledOperationWhereInput"] | undefined | null,
	scheduledIn_some?: ResolverInputTypes["ScheduledOperationWhereInput"] | undefined | null,
	scheduledIn_none?: ResolverInputTypes["ScheduledOperationWhereInput"] | undefined | null
};
	/** References Seo record uniquely */
["SeoWhereUniqueInput"]: {
	id?: string | undefined | null
};
	["Skill"]: AliasType<{
	/** System stage field */
	stage?:boolean | `@${string}`,
	/** The unique identifier */
	id?:boolean | `@${string}`,
	name?:boolean | `@${string}`,
icon?: [{	/** Allows to optionally override locale filtering behaviour in the query's subtree.

Note that `icon` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument will overwrite any existing locale filtering defined in the query's tree for the subtree. */
	locales?: Array<ResolverInputTypes["Locale"]> | undefined | null},ResolverInputTypes["Asset"]],
		__typename?: boolean | `@${string}`
}>;
	["SkillCategory"]: AliasType<{
	/** System stage field */
	stage?:boolean | `@${string}`,
documentInStages?: [{	/** Potential stages that should be returned */
	stages: Array<ResolverInputTypes["Stage"]>,	/** Decides if the current stage should be included or not */
	includeCurrent: boolean,	/** Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree */
	inheritLocale: boolean},ResolverInputTypes["SkillCategory"]],
	/** The time the document was published. Null on documents in draft stage. */
	publishedAt?:boolean | `@${string}`,
	/** The time the document was updated */
	updatedAt?:boolean | `@${string}`,
	/** The time the document was created */
	createdAt?:boolean | `@${string}`,
	/** The unique identifier */
	id?:boolean | `@${string}`,
	name?:boolean | `@${string}`,
skillsList?: [{	skip?: number | undefined | null,	after?: string | undefined | null,	before?: string | undefined | null,	first?: number | undefined | null,	last?: number | undefined | null,	/** Allows to optionally override locale filtering behaviour in the query's subtree.

Note that `skillsList` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument will overwrite any existing locale filtering defined in the query's tree for the subtree. */
	locales?: Array<ResolverInputTypes["Locale"]> | undefined | null},ResolverInputTypes["SkillCategoryskillsListUnion"]],
publishedBy?: [{	/** Allows to optionally override locale filtering behaviour in the query's subtree.

Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument will overwrite any existing locale filtering defined in the query's tree for the subtree. */
	locales?: Array<ResolverInputTypes["Locale"]> | undefined | null},ResolverInputTypes["User"]],
updatedBy?: [{	/** Allows to optionally override locale filtering behaviour in the query's subtree.

Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument will overwrite any existing locale filtering defined in the query's tree for the subtree. */
	locales?: Array<ResolverInputTypes["Locale"]> | undefined | null},ResolverInputTypes["User"]],
createdBy?: [{	/** Allows to optionally override locale filtering behaviour in the query's subtree.

Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument will overwrite any existing locale filtering defined in the query's tree for the subtree. */
	locales?: Array<ResolverInputTypes["Locale"]> | undefined | null},ResolverInputTypes["User"]],
scheduledIn?: [{	where?: ResolverInputTypes["ScheduledOperationWhereInput"] | undefined | null,	skip?: number | undefined | null,	after?: string | undefined | null,	before?: string | undefined | null,	first?: number | undefined | null,	last?: number | undefined | null,	/** Allows to optionally override locale filtering behaviour in the query's subtree.

Note that `scheduledIn` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

This argument will overwrite any existing locale filtering defined in the query's tree for the subtree. */
	locales?: Array<ResolverInputTypes["Locale"]> | undefined | null},ResolverInputTypes["ScheduledOperation"]],
history?: [{	limit: number,	skip: number,	/** This is optional and can be used to fetch the document version history for a specific stage instead of the current one */
	stageOverride?: ResolverInputTypes["Stage"] | undefined | null},ResolverInputTypes["Version"]],
		__typename?: boolean | `@${string}`
}>;
	["SkillCategoryConnectInput"]: {
	/** Document to connect */
	where: ResolverInputTypes["SkillCategoryWhereUniqueInput"],
	/** Allow to specify document position in list of connected documents, will default to appending at end of list */
	position?: ResolverInputTypes["ConnectPositionInput"] | undefined | null
};
	/** A connection to a list of items. */
["SkillCategoryConnection"]: AliasType<{
	/** Information to aid in pagination. */
	pageInfo?:ResolverInputTypes["PageInfo"],
	/** A list of edges. */
	edges?:ResolverInputTypes["SkillCategoryEdge"],
	aggregate?:ResolverInputTypes["Aggregate"],
		__typename?: boolean | `@${string}`
}>;
	["SkillCategoryCreateInput"]: {
	updatedAt?: ResolverInputTypes["DateTime"] | undefined | null,
	createdAt?: ResolverInputTypes["DateTime"] | undefined | null,
	name: string,
	skillsList?: ResolverInputTypes["SkillCategoryskillsListUnionCreateManyInlineInput"] | undefined | null
};
	["SkillCategoryCreateManyInlineInput"]: {
	/** Create and connect multiple existing SkillCategory documents */
	create?: Array<ResolverInputTypes["SkillCategoryCreateInput"]> | undefined | null,
	/** Connect multiple existing SkillCategory documents */
	connect?: Array<ResolverInputTypes["SkillCategoryWhereUniqueInput"]> | undefined | null
};
	["SkillCategoryCreateOneInlineInput"]: {
	/** Create and connect one SkillCategory document */
	create?: ResolverInputTypes["SkillCategoryCreateInput"] | undefined | null,
	/** Connect one existing SkillCategory document */
	connect?: ResolverInputTypes["SkillCategoryWhereUniqueInput"] | undefined | null
};
	/** An edge in a connection. */
["SkillCategoryEdge"]: AliasType<{
	/** The item at the end of the edge. */
	node?:ResolverInputTypes["SkillCategory"],
	/** A cursor for use in pagination. */
	cursor?:boolean | `@${string}`,
		__typename?: boolean | `@${string}`
}>;
	/** Identifies documents */
["SkillCategoryManyWhereInput"]: {
	/** Contains search across all appropriate fields. */
	_search?: string | undefined | null,
	/** Logical AND on all given filters. */
	AND?: Array<ResolverInputTypes["SkillCategoryWhereInput"]> | undefined | null,
	/** Logical OR on all given filters. */
	OR?: Array<ResolverInputTypes["SkillCategoryWhereInput"]> | undefined | null,
	/** Logical NOT on all given filters combined by AND. */
	NOT?: Array<ResolverInputTypes["SkillCategoryWhereInput"]> | undefined | null,
	publishedAt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values that are not equal to given value. */
	publishedAt_not?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values that are contained in given list. */
	publishedAt_in?: Array<ResolverInputTypes["DateTime"] | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	publishedAt_not_in?: Array<ResolverInputTypes["DateTime"] | undefined | null> | undefined | null,
	/** All values less than the given value. */
	publishedAt_lt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values less than or equal the given value. */
	publishedAt_lte?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values greater than the given value. */
	publishedAt_gt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values greater than or equal the given value. */
	publishedAt_gte?: ResolverInputTypes["DateTime"] | undefined | null,
	updatedAt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values that are not equal to given value. */
	updatedAt_not?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values that are contained in given list. */
	updatedAt_in?: Array<ResolverInputTypes["DateTime"] | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	updatedAt_not_in?: Array<ResolverInputTypes["DateTime"] | undefined | null> | undefined | null,
	/** All values less than the given value. */
	updatedAt_lt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values less than or equal the given value. */
	updatedAt_lte?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values greater than the given value. */
	updatedAt_gt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values greater than or equal the given value. */
	updatedAt_gte?: ResolverInputTypes["DateTime"] | undefined | null,
	createdAt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values that are not equal to given value. */
	createdAt_not?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values that are contained in given list. */
	createdAt_in?: Array<ResolverInputTypes["DateTime"] | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	createdAt_not_in?: Array<ResolverInputTypes["DateTime"] | undefined | null> | undefined | null,
	/** All values less than the given value. */
	createdAt_lt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values less than or equal the given value. */
	createdAt_lte?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values greater than the given value. */
	createdAt_gt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values greater than or equal the given value. */
	createdAt_gte?: ResolverInputTypes["DateTime"] | undefined | null,
	id?: string | undefined | null,
	/** All values that are not equal to given value. */
	id_not?: string | undefined | null,
	/** All values that are contained in given list. */
	id_in?: Array<string | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	id_not_in?: Array<string | undefined | null> | undefined | null,
	/** All values containing the given string. */
	id_contains?: string | undefined | null,
	/** All values not containing the given string. */
	id_not_contains?: string | undefined | null,
	/** All values starting with the given string. */
	id_starts_with?: string | undefined | null,
	/** All values not starting with the given string. */
	id_not_starts_with?: string | undefined | null,
	/** All values ending with the given string. */
	id_ends_with?: string | undefined | null,
	/** All values not ending with the given string */
	id_not_ends_with?: string | undefined | null,
	name?: string | undefined | null,
	/** All values that are not equal to given value. */
	name_not?: string | undefined | null,
	/** All values that are contained in given list. */
	name_in?: Array<string | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	name_not_in?: Array<string | undefined | null> | undefined | null,
	/** All values containing the given string. */
	name_contains?: string | undefined | null,
	/** All values not containing the given string. */
	name_not_contains?: string | undefined | null,
	/** All values starting with the given string. */
	name_starts_with?: string | undefined | null,
	/** All values not starting with the given string. */
	name_not_starts_with?: string | undefined | null,
	/** All values ending with the given string. */
	name_ends_with?: string | undefined | null,
	/** All values not ending with the given string */
	name_not_ends_with?: string | undefined | null,
	publishedBy?: ResolverInputTypes["UserWhereInput"] | undefined | null,
	updatedBy?: ResolverInputTypes["UserWhereInput"] | undefined | null,
	createdBy?: ResolverInputTypes["UserWhereInput"] | undefined | null,
	scheduledIn_every?: ResolverInputTypes["ScheduledOperationWhereInput"] | undefined | null,
	scheduledIn_some?: ResolverInputTypes["ScheduledOperationWhereInput"] | undefined | null,
	scheduledIn_none?: ResolverInputTypes["ScheduledOperationWhereInput"] | undefined | null
};
	["SkillCategoryOrderByInput"]:SkillCategoryOrderByInput;
	["SkillCategoryUpdateInput"]: {
	name?: string | undefined | null,
	skillsList?: ResolverInputTypes["SkillCategoryskillsListUnionUpdateManyInlineInput"] | undefined | null
};
	["SkillCategoryUpdateManyInlineInput"]: {
	/** Create and connect multiple SkillCategory documents */
	create?: Array<ResolverInputTypes["SkillCategoryCreateInput"]> | undefined | null,
	/** Connect multiple existing SkillCategory documents */
	connect?: Array<ResolverInputTypes["SkillCategoryConnectInput"]> | undefined | null,
	/** Override currently-connected documents with multiple existing SkillCategory documents */
	set?: Array<ResolverInputTypes["SkillCategoryWhereUniqueInput"]> | undefined | null,
	/** Update multiple SkillCategory documents */
	update?: Array<ResolverInputTypes["SkillCategoryUpdateWithNestedWhereUniqueInput"]> | undefined | null,
	/** Upsert multiple SkillCategory documents */
	upsert?: Array<ResolverInputTypes["SkillCategoryUpsertWithNestedWhereUniqueInput"]> | undefined | null,
	/** Disconnect multiple SkillCategory documents */
	disconnect?: Array<ResolverInputTypes["SkillCategoryWhereUniqueInput"]> | undefined | null,
	/** Delete multiple SkillCategory documents */
	delete?: Array<ResolverInputTypes["SkillCategoryWhereUniqueInput"]> | undefined | null
};
	["SkillCategoryUpdateManyInput"]: {
	/** No fields in updateMany data input */
	_?: string | undefined | null
};
	["SkillCategoryUpdateManyWithNestedWhereInput"]: {
	/** Document search */
	where: ResolverInputTypes["SkillCategoryWhereInput"],
	/** Update many input */
	data: ResolverInputTypes["SkillCategoryUpdateManyInput"]
};
	["SkillCategoryUpdateOneInlineInput"]: {
	/** Create and connect one SkillCategory document */
	create?: ResolverInputTypes["SkillCategoryCreateInput"] | undefined | null,
	/** Update single SkillCategory document */
	update?: ResolverInputTypes["SkillCategoryUpdateWithNestedWhereUniqueInput"] | undefined | null,
	/** Upsert single SkillCategory document */
	upsert?: ResolverInputTypes["SkillCategoryUpsertWithNestedWhereUniqueInput"] | undefined | null,
	/** Connect existing SkillCategory document */
	connect?: ResolverInputTypes["SkillCategoryWhereUniqueInput"] | undefined | null,
	/** Disconnect currently connected SkillCategory document */
	disconnect?: boolean | undefined | null,
	/** Delete currently connected SkillCategory document */
	delete?: boolean | undefined | null
};
	["SkillCategoryUpdateWithNestedWhereUniqueInput"]: {
	/** Unique document search */
	where: ResolverInputTypes["SkillCategoryWhereUniqueInput"],
	/** Document to update */
	data: ResolverInputTypes["SkillCategoryUpdateInput"]
};
	["SkillCategoryUpsertInput"]: {
	/** Create document if it didn't exist */
	create: ResolverInputTypes["SkillCategoryCreateInput"],
	/** Update document if it exists */
	update: ResolverInputTypes["SkillCategoryUpdateInput"]
};
	["SkillCategoryUpsertWithNestedWhereUniqueInput"]: {
	/** Unique document search */
	where: ResolverInputTypes["SkillCategoryWhereUniqueInput"],
	/** Upsert data */
	data: ResolverInputTypes["SkillCategoryUpsertInput"]
};
	/** Identifies documents */
["SkillCategoryWhereInput"]: {
	/** Contains search across all appropriate fields. */
	_search?: string | undefined | null,
	/** Logical AND on all given filters. */
	AND?: Array<ResolverInputTypes["SkillCategoryWhereInput"]> | undefined | null,
	/** Logical OR on all given filters. */
	OR?: Array<ResolverInputTypes["SkillCategoryWhereInput"]> | undefined | null,
	/** Logical NOT on all given filters combined by AND. */
	NOT?: Array<ResolverInputTypes["SkillCategoryWhereInput"]> | undefined | null,
	publishedAt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values that are not equal to given value. */
	publishedAt_not?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values that are contained in given list. */
	publishedAt_in?: Array<ResolverInputTypes["DateTime"] | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	publishedAt_not_in?: Array<ResolverInputTypes["DateTime"] | undefined | null> | undefined | null,
	/** All values less than the given value. */
	publishedAt_lt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values less than or equal the given value. */
	publishedAt_lte?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values greater than the given value. */
	publishedAt_gt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values greater than or equal the given value. */
	publishedAt_gte?: ResolverInputTypes["DateTime"] | undefined | null,
	updatedAt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values that are not equal to given value. */
	updatedAt_not?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values that are contained in given list. */
	updatedAt_in?: Array<ResolverInputTypes["DateTime"] | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	updatedAt_not_in?: Array<ResolverInputTypes["DateTime"] | undefined | null> | undefined | null,
	/** All values less than the given value. */
	updatedAt_lt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values less than or equal the given value. */
	updatedAt_lte?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values greater than the given value. */
	updatedAt_gt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values greater than or equal the given value. */
	updatedAt_gte?: ResolverInputTypes["DateTime"] | undefined | null,
	createdAt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values that are not equal to given value. */
	createdAt_not?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values that are contained in given list. */
	createdAt_in?: Array<ResolverInputTypes["DateTime"] | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	createdAt_not_in?: Array<ResolverInputTypes["DateTime"] | undefined | null> | undefined | null,
	/** All values less than the given value. */
	createdAt_lt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values less than or equal the given value. */
	createdAt_lte?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values greater than the given value. */
	createdAt_gt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values greater than or equal the given value. */
	createdAt_gte?: ResolverInputTypes["DateTime"] | undefined | null,
	id?: string | undefined | null,
	/** All values that are not equal to given value. */
	id_not?: string | undefined | null,
	/** All values that are contained in given list. */
	id_in?: Array<string | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	id_not_in?: Array<string | undefined | null> | undefined | null,
	/** All values containing the given string. */
	id_contains?: string | undefined | null,
	/** All values not containing the given string. */
	id_not_contains?: string | undefined | null,
	/** All values starting with the given string. */
	id_starts_with?: string | undefined | null,
	/** All values not starting with the given string. */
	id_not_starts_with?: string | undefined | null,
	/** All values ending with the given string. */
	id_ends_with?: string | undefined | null,
	/** All values not ending with the given string */
	id_not_ends_with?: string | undefined | null,
	name?: string | undefined | null,
	/** All values that are not equal to given value. */
	name_not?: string | undefined | null,
	/** All values that are contained in given list. */
	name_in?: Array<string | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	name_not_in?: Array<string | undefined | null> | undefined | null,
	/** All values containing the given string. */
	name_contains?: string | undefined | null,
	/** All values not containing the given string. */
	name_not_contains?: string | undefined | null,
	/** All values starting with the given string. */
	name_starts_with?: string | undefined | null,
	/** All values not starting with the given string. */
	name_not_starts_with?: string | undefined | null,
	/** All values ending with the given string. */
	name_ends_with?: string | undefined | null,
	/** All values not ending with the given string */
	name_not_ends_with?: string | undefined | null,
	publishedBy?: ResolverInputTypes["UserWhereInput"] | undefined | null,
	updatedBy?: ResolverInputTypes["UserWhereInput"] | undefined | null,
	createdBy?: ResolverInputTypes["UserWhereInput"] | undefined | null,
	scheduledIn_every?: ResolverInputTypes["ScheduledOperationWhereInput"] | undefined | null,
	scheduledIn_some?: ResolverInputTypes["ScheduledOperationWhereInput"] | undefined | null,
	scheduledIn_none?: ResolverInputTypes["ScheduledOperationWhereInput"] | undefined | null
};
	/** References SkillCategory record uniquely */
["SkillCategoryWhereUniqueInput"]: {
	id?: string | undefined | null,
	name?: string | undefined | null
};
	["SkillCategoryskillsListUnion"]: AliasType<{
	Skill?:ResolverInputTypes["Skill"],
		__typename?: boolean | `@${string}`
}>;
	["SkillCategoryskillsListUnionConnectInput"]: {
	Skill?: ResolverInputTypes["SkillConnectInput"] | undefined | null
};
	["SkillCategoryskillsListUnionCreateInput"]: {
	Skill?: ResolverInputTypes["SkillCreateInput"] | undefined | null
};
	["SkillCategoryskillsListUnionCreateManyInlineInput"]: {
	/** Create and connect multiple existing SkillCategoryskillsListUnion documents */
	create?: Array<ResolverInputTypes["SkillCategoryskillsListUnionCreateInput"]> | undefined | null
};
	["SkillCategoryskillsListUnionCreateOneInlineInput"]: {
	/** Create and connect one SkillCategoryskillsListUnion document */
	create?: ResolverInputTypes["SkillCategoryskillsListUnionCreateInput"] | undefined | null
};
	["SkillCategoryskillsListUnionCreateWithPositionInput"]: {
	Skill?: ResolverInputTypes["SkillCreateWithPositionInput"] | undefined | null
};
	["SkillCategoryskillsListUnionUpdateInput"]: {
	Skill?: ResolverInputTypes["SkillUpdateInput"] | undefined | null
};
	["SkillCategoryskillsListUnionUpdateManyInlineInput"]: {
	/** Create and connect multiple SkillCategoryskillsListUnion component instances */
	create?: Array<ResolverInputTypes["SkillCategoryskillsListUnionCreateWithPositionInput"]> | undefined | null,
	/** Update multiple SkillCategoryskillsListUnion component instances */
	update?: Array<ResolverInputTypes["SkillCategoryskillsListUnionUpdateWithNestedWhereUniqueAndPositionInput"]> | undefined | null,
	/** Upsert multiple SkillCategoryskillsListUnion component instances */
	upsert?: Array<ResolverInputTypes["SkillCategoryskillsListUnionUpsertWithNestedWhereUniqueAndPositionInput"]> | undefined | null,
	/** Delete multiple SkillCategoryskillsListUnion documents */
	delete?: Array<ResolverInputTypes["SkillCategoryskillsListUnionWhereUniqueInput"]> | undefined | null
};
	["SkillCategoryskillsListUnionUpdateManyWithNestedWhereInput"]: {
	Skill?: ResolverInputTypes["SkillUpdateManyWithNestedWhereInput"] | undefined | null
};
	["SkillCategoryskillsListUnionUpdateOneInlineInput"]: {
	/** Create and connect one SkillCategoryskillsListUnion document */
	create?: ResolverInputTypes["SkillCategoryskillsListUnionCreateInput"] | undefined | null,
	/** Update single SkillCategoryskillsListUnion document */
	update?: ResolverInputTypes["SkillCategoryskillsListUnionUpdateWithNestedWhereUniqueInput"] | undefined | null,
	/** Upsert single SkillCategoryskillsListUnion document */
	upsert?: ResolverInputTypes["SkillCategoryskillsListUnionUpsertWithNestedWhereUniqueInput"] | undefined | null,
	/** Delete currently connected SkillCategoryskillsListUnion document */
	delete?: boolean | undefined | null
};
	["SkillCategoryskillsListUnionUpdateWithNestedWhereUniqueAndPositionInput"]: {
	Skill?: ResolverInputTypes["SkillUpdateWithNestedWhereUniqueAndPositionInput"] | undefined | null
};
	["SkillCategoryskillsListUnionUpdateWithNestedWhereUniqueInput"]: {
	Skill?: ResolverInputTypes["SkillUpdateWithNestedWhereUniqueInput"] | undefined | null
};
	["SkillCategoryskillsListUnionUpsertWithNestedWhereUniqueAndPositionInput"]: {
	Skill?: ResolverInputTypes["SkillUpsertWithNestedWhereUniqueAndPositionInput"] | undefined | null
};
	["SkillCategoryskillsListUnionUpsertWithNestedWhereUniqueInput"]: {
	Skill?: ResolverInputTypes["SkillUpsertWithNestedWhereUniqueInput"] | undefined | null
};
	["SkillCategoryskillsListUnionWhereInput"]: {
	Skill?: ResolverInputTypes["SkillWhereInput"] | undefined | null
};
	["SkillCategoryskillsListUnionWhereUniqueInput"]: {
	Skill?: ResolverInputTypes["SkillWhereUniqueInput"] | undefined | null
};
	["SkillConnectInput"]: {
	/** Document to connect */
	where: ResolverInputTypes["SkillWhereUniqueInput"],
	/** Allow to specify document position in list of connected documents, will default to appending at end of list */
	position?: ResolverInputTypes["ConnectPositionInput"] | undefined | null
};
	/** A connection to a list of items. */
["SkillConnection"]: AliasType<{
	/** Information to aid in pagination. */
	pageInfo?:ResolverInputTypes["PageInfo"],
	/** A list of edges. */
	edges?:ResolverInputTypes["SkillEdge"],
	aggregate?:ResolverInputTypes["Aggregate"],
		__typename?: boolean | `@${string}`
}>;
	["SkillCreateInput"]: {
	name: string,
	icon: ResolverInputTypes["AssetCreateOneInlineInput"]
};
	["SkillCreateManyInlineInput"]: {
	/** Create and connect multiple existing Skill documents */
	create?: Array<ResolverInputTypes["SkillCreateInput"]> | undefined | null
};
	["SkillCreateOneInlineInput"]: {
	/** Create and connect one Skill document */
	create?: ResolverInputTypes["SkillCreateInput"] | undefined | null
};
	["SkillCreateWithPositionInput"]: {
	/** Position in the list of existing component instances, will default to appending at the end of list */
	position?: ResolverInputTypes["ConnectPositionInput"] | undefined | null,
	/** Document to create */
	data: ResolverInputTypes["SkillCreateInput"]
};
	/** An edge in a connection. */
["SkillEdge"]: AliasType<{
	/** The item at the end of the edge. */
	node?:ResolverInputTypes["Skill"],
	/** A cursor for use in pagination. */
	cursor?:boolean | `@${string}`,
		__typename?: boolean | `@${string}`
}>;
	/** Identifies documents */
["SkillManyWhereInput"]: {
	/** Contains search across all appropriate fields. */
	_search?: string | undefined | null,
	/** Logical AND on all given filters. */
	AND?: Array<ResolverInputTypes["SkillWhereInput"]> | undefined | null,
	/** Logical OR on all given filters. */
	OR?: Array<ResolverInputTypes["SkillWhereInput"]> | undefined | null,
	/** Logical NOT on all given filters combined by AND. */
	NOT?: Array<ResolverInputTypes["SkillWhereInput"]> | undefined | null,
	id?: string | undefined | null,
	/** All values that are not equal to given value. */
	id_not?: string | undefined | null,
	/** All values that are contained in given list. */
	id_in?: Array<string | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	id_not_in?: Array<string | undefined | null> | undefined | null,
	/** All values containing the given string. */
	id_contains?: string | undefined | null,
	/** All values not containing the given string. */
	id_not_contains?: string | undefined | null,
	/** All values starting with the given string. */
	id_starts_with?: string | undefined | null,
	/** All values not starting with the given string. */
	id_not_starts_with?: string | undefined | null,
	/** All values ending with the given string. */
	id_ends_with?: string | undefined | null,
	/** All values not ending with the given string */
	id_not_ends_with?: string | undefined | null,
	name?: string | undefined | null,
	/** All values that are not equal to given value. */
	name_not?: string | undefined | null,
	/** All values that are contained in given list. */
	name_in?: Array<string | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	name_not_in?: Array<string | undefined | null> | undefined | null,
	/** All values containing the given string. */
	name_contains?: string | undefined | null,
	/** All values not containing the given string. */
	name_not_contains?: string | undefined | null,
	/** All values starting with the given string. */
	name_starts_with?: string | undefined | null,
	/** All values not starting with the given string. */
	name_not_starts_with?: string | undefined | null,
	/** All values ending with the given string. */
	name_ends_with?: string | undefined | null,
	/** All values not ending with the given string */
	name_not_ends_with?: string | undefined | null,
	icon?: ResolverInputTypes["AssetWhereInput"] | undefined | null
};
	["SkillOrderByInput"]:SkillOrderByInput;
	["SkillParent"]: AliasType<{
	SkillCategory?:ResolverInputTypes["SkillCategory"],
		__typename?: boolean | `@${string}`
}>;
	["SkillParentConnectInput"]: {
	SkillCategory?: ResolverInputTypes["SkillCategoryConnectInput"] | undefined | null
};
	["SkillParentCreateInput"]: {
	SkillCategory?: ResolverInputTypes["SkillCategoryCreateInput"] | undefined | null
};
	["SkillParentCreateManyInlineInput"]: {
	/** Create and connect multiple existing SkillParent documents */
	create?: Array<ResolverInputTypes["SkillParentCreateInput"]> | undefined | null,
	/** Connect multiple existing SkillParent documents */
	connect?: Array<ResolverInputTypes["SkillParentWhereUniqueInput"]> | undefined | null
};
	["SkillParentCreateOneInlineInput"]: {
	/** Create and connect one SkillParent document */
	create?: ResolverInputTypes["SkillParentCreateInput"] | undefined | null,
	/** Connect one existing SkillParent document */
	connect?: ResolverInputTypes["SkillParentWhereUniqueInput"] | undefined | null
};
	["SkillParentUpdateInput"]: {
	SkillCategory?: ResolverInputTypes["SkillCategoryUpdateInput"] | undefined | null
};
	["SkillParentUpdateManyInlineInput"]: {
	/** Create and connect multiple SkillParent documents */
	create?: Array<ResolverInputTypes["SkillParentCreateInput"]> | undefined | null,
	/** Connect multiple existing SkillParent documents */
	connect?: Array<ResolverInputTypes["SkillParentConnectInput"]> | undefined | null,
	/** Override currently-connected documents with multiple existing SkillParent documents */
	set?: Array<ResolverInputTypes["SkillParentWhereUniqueInput"]> | undefined | null,
	/** Update multiple SkillParent documents */
	update?: Array<ResolverInputTypes["SkillParentUpdateWithNestedWhereUniqueInput"]> | undefined | null,
	/** Upsert multiple SkillParent documents */
	upsert?: Array<ResolverInputTypes["SkillParentUpsertWithNestedWhereUniqueInput"]> | undefined | null,
	/** Disconnect multiple SkillParent documents */
	disconnect?: Array<ResolverInputTypes["SkillParentWhereUniqueInput"]> | undefined | null,
	/** Delete multiple SkillParent documents */
	delete?: Array<ResolverInputTypes["SkillParentWhereUniqueInput"]> | undefined | null
};
	["SkillParentUpdateManyWithNestedWhereInput"]: {
	SkillCategory?: ResolverInputTypes["SkillCategoryUpdateManyWithNestedWhereInput"] | undefined | null
};
	["SkillParentUpdateOneInlineInput"]: {
	/** Create and connect one SkillParent document */
	create?: ResolverInputTypes["SkillParentCreateInput"] | undefined | null,
	/** Update single SkillParent document */
	update?: ResolverInputTypes["SkillParentUpdateWithNestedWhereUniqueInput"] | undefined | null,
	/** Upsert single SkillParent document */
	upsert?: ResolverInputTypes["SkillParentUpsertWithNestedWhereUniqueInput"] | undefined | null,
	/** Connect existing SkillParent document */
	connect?: ResolverInputTypes["SkillParentWhereUniqueInput"] | undefined | null,
	/** Disconnect currently connected SkillParent document */
	disconnect?: boolean | undefined | null,
	/** Delete currently connected SkillParent document */
	delete?: boolean | undefined | null
};
	["SkillParentUpdateWithNestedWhereUniqueInput"]: {
	SkillCategory?: ResolverInputTypes["SkillCategoryUpdateWithNestedWhereUniqueInput"] | undefined | null
};
	["SkillParentUpsertWithNestedWhereUniqueInput"]: {
	SkillCategory?: ResolverInputTypes["SkillCategoryUpsertWithNestedWhereUniqueInput"] | undefined | null
};
	["SkillParentWhereInput"]: {
	SkillCategory?: ResolverInputTypes["SkillCategoryWhereInput"] | undefined | null
};
	["SkillParentWhereUniqueInput"]: {
	SkillCategory?: ResolverInputTypes["SkillCategoryWhereUniqueInput"] | undefined | null
};
	["SkillUpdateInput"]: {
	name?: string | undefined | null,
	icon?: ResolverInputTypes["AssetUpdateOneInlineInput"] | undefined | null
};
	["SkillUpdateManyInlineInput"]: {
	/** Create and connect multiple Skill component instances */
	create?: Array<ResolverInputTypes["SkillCreateWithPositionInput"]> | undefined | null,
	/** Update multiple Skill component instances */
	update?: Array<ResolverInputTypes["SkillUpdateWithNestedWhereUniqueAndPositionInput"]> | undefined | null,
	/** Upsert multiple Skill component instances */
	upsert?: Array<ResolverInputTypes["SkillUpsertWithNestedWhereUniqueAndPositionInput"]> | undefined | null,
	/** Delete multiple Skill documents */
	delete?: Array<ResolverInputTypes["SkillWhereUniqueInput"]> | undefined | null
};
	["SkillUpdateManyInput"]: {
	/** No fields in updateMany data input */
	_?: string | undefined | null
};
	["SkillUpdateManyWithNestedWhereInput"]: {
	/** Document search */
	where: ResolverInputTypes["SkillWhereInput"],
	/** Update many input */
	data: ResolverInputTypes["SkillUpdateManyInput"]
};
	["SkillUpdateOneInlineInput"]: {
	/** Create and connect one Skill document */
	create?: ResolverInputTypes["SkillCreateInput"] | undefined | null,
	/** Update single Skill document */
	update?: ResolverInputTypes["SkillUpdateWithNestedWhereUniqueInput"] | undefined | null,
	/** Upsert single Skill document */
	upsert?: ResolverInputTypes["SkillUpsertWithNestedWhereUniqueInput"] | undefined | null,
	/** Delete currently connected Skill document */
	delete?: boolean | undefined | null
};
	["SkillUpdateWithNestedWhereUniqueAndPositionInput"]: {
	/** Unique component instance search */
	where: ResolverInputTypes["SkillWhereUniqueInput"],
	/** Position in the list of existing component instances, will default to appending at the end of list */
	position?: ResolverInputTypes["ConnectPositionInput"] | undefined | null,
	/** Document to update */
	data?: ResolverInputTypes["SkillUpdateInput"] | undefined | null
};
	["SkillUpdateWithNestedWhereUniqueInput"]: {
	/** Unique document search */
	where: ResolverInputTypes["SkillWhereUniqueInput"],
	/** Document to update */
	data: ResolverInputTypes["SkillUpdateInput"]
};
	["SkillUpsertInput"]: {
	/** Create document if it didn't exist */
	create: ResolverInputTypes["SkillCreateInput"],
	/** Update document if it exists */
	update: ResolverInputTypes["SkillUpdateInput"]
};
	["SkillUpsertWithNestedWhereUniqueAndPositionInput"]: {
	/** Unique component instance search */
	where: ResolverInputTypes["SkillWhereUniqueInput"],
	/** Position in the list of existing component instances, will default to appending at the end of list */
	position?: ResolverInputTypes["ConnectPositionInput"] | undefined | null,
	/** Document to upsert */
	data?: ResolverInputTypes["SkillUpsertInput"] | undefined | null
};
	["SkillUpsertWithNestedWhereUniqueInput"]: {
	/** Unique document search */
	where: ResolverInputTypes["SkillWhereUniqueInput"],
	/** Upsert data */
	data: ResolverInputTypes["SkillUpsertInput"]
};
	/** Identifies documents */
["SkillWhereInput"]: {
	/** Contains search across all appropriate fields. */
	_search?: string | undefined | null,
	/** Logical AND on all given filters. */
	AND?: Array<ResolverInputTypes["SkillWhereInput"]> | undefined | null,
	/** Logical OR on all given filters. */
	OR?: Array<ResolverInputTypes["SkillWhereInput"]> | undefined | null,
	/** Logical NOT on all given filters combined by AND. */
	NOT?: Array<ResolverInputTypes["SkillWhereInput"]> | undefined | null,
	id?: string | undefined | null,
	/** All values that are not equal to given value. */
	id_not?: string | undefined | null,
	/** All values that are contained in given list. */
	id_in?: Array<string | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	id_not_in?: Array<string | undefined | null> | undefined | null,
	/** All values containing the given string. */
	id_contains?: string | undefined | null,
	/** All values not containing the given string. */
	id_not_contains?: string | undefined | null,
	/** All values starting with the given string. */
	id_starts_with?: string | undefined | null,
	/** All values not starting with the given string. */
	id_not_starts_with?: string | undefined | null,
	/** All values ending with the given string. */
	id_ends_with?: string | undefined | null,
	/** All values not ending with the given string */
	id_not_ends_with?: string | undefined | null,
	name?: string | undefined | null,
	/** All values that are not equal to given value. */
	name_not?: string | undefined | null,
	/** All values that are contained in given list. */
	name_in?: Array<string | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	name_not_in?: Array<string | undefined | null> | undefined | null,
	/** All values containing the given string. */
	name_contains?: string | undefined | null,
	/** All values not containing the given string. */
	name_not_contains?: string | undefined | null,
	/** All values starting with the given string. */
	name_starts_with?: string | undefined | null,
	/** All values not starting with the given string. */
	name_not_starts_with?: string | undefined | null,
	/** All values ending with the given string. */
	name_ends_with?: string | undefined | null,
	/** All values not ending with the given string */
	name_not_ends_with?: string | undefined | null,
	icon?: ResolverInputTypes["AssetWhereInput"] | undefined | null
};
	/** References Skill record uniquely */
["SkillWhereUniqueInput"]: {
	id?: string | undefined | null,
	name?: string | undefined | null
};
	/** Stage system enumeration */
["Stage"]:Stage;
	["SystemDateTimeFieldVariation"]:SystemDateTimeFieldVariation;
	["Technologies"]:Technologies;
	["UnpublishLocaleInput"]: {
	/** Locales to unpublish */
	locale: ResolverInputTypes["Locale"],
	/** Stages to unpublish selected locales from */
	stages: Array<ResolverInputTypes["Stage"]>
};
	/** User system model */
["User"]: AliasType<{
	/** System stage field */
	stage?:boolean | `@${string}`,
documentInStages?: [{	/** Potential stages that should be returned */
	stages: Array<ResolverInputTypes["Stage"]>,	/** Decides if the current stage should be included or not */
	includeCurrent: boolean,	/** Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree */
	inheritLocale: boolean},ResolverInputTypes["User"]],
	/** Flag to determine if user is active or not */
	isActive?:boolean | `@${string}`,
	/** Profile Picture url */
	picture?:boolean | `@${string}`,
	/** The username */
	name?:boolean | `@${string}`,
	/** The time the document was published. Null on documents in draft stage. */
	publishedAt?:boolean | `@${string}`,
	/** The time the document was updated */
	updatedAt?:boolean | `@${string}`,
	/** The time the document was created */
	createdAt?:boolean | `@${string}`,
	/** The unique identifier */
	id?:boolean | `@${string}`,
	/** User Kind. Can be either MEMBER, PAT or PUBLIC */
	kind?:boolean | `@${string}`,
		__typename?: boolean | `@${string}`
}>;
	["UserConnectInput"]: {
	/** Document to connect */
	where: ResolverInputTypes["UserWhereUniqueInput"],
	/** Allow to specify document position in list of connected documents, will default to appending at end of list */
	position?: ResolverInputTypes["ConnectPositionInput"] | undefined | null
};
	/** A connection to a list of items. */
["UserConnection"]: AliasType<{
	/** Information to aid in pagination. */
	pageInfo?:ResolverInputTypes["PageInfo"],
	/** A list of edges. */
	edges?:ResolverInputTypes["UserEdge"],
	aggregate?:ResolverInputTypes["Aggregate"],
		__typename?: boolean | `@${string}`
}>;
	["UserCreateManyInlineInput"]: {
	/** Connect multiple existing User documents */
	connect?: Array<ResolverInputTypes["UserWhereUniqueInput"]> | undefined | null
};
	["UserCreateOneInlineInput"]: {
	/** Connect one existing User document */
	connect?: ResolverInputTypes["UserWhereUniqueInput"] | undefined | null
};
	/** An edge in a connection. */
["UserEdge"]: AliasType<{
	/** The item at the end of the edge. */
	node?:ResolverInputTypes["User"],
	/** A cursor for use in pagination. */
	cursor?:boolean | `@${string}`,
		__typename?: boolean | `@${string}`
}>;
	/** System User Kind */
["UserKind"]:UserKind;
	/** Identifies documents */
["UserManyWhereInput"]: {
	/** Contains search across all appropriate fields. */
	_search?: string | undefined | null,
	/** Logical AND on all given filters. */
	AND?: Array<ResolverInputTypes["UserWhereInput"]> | undefined | null,
	/** Logical OR on all given filters. */
	OR?: Array<ResolverInputTypes["UserWhereInput"]> | undefined | null,
	/** Logical NOT on all given filters combined by AND. */
	NOT?: Array<ResolverInputTypes["UserWhereInput"]> | undefined | null,
	isActive?: boolean | undefined | null,
	/** All values that are not equal to given value. */
	isActive_not?: boolean | undefined | null,
	picture?: string | undefined | null,
	/** All values that are not equal to given value. */
	picture_not?: string | undefined | null,
	/** All values that are contained in given list. */
	picture_in?: Array<string | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	picture_not_in?: Array<string | undefined | null> | undefined | null,
	/** All values containing the given string. */
	picture_contains?: string | undefined | null,
	/** All values not containing the given string. */
	picture_not_contains?: string | undefined | null,
	/** All values starting with the given string. */
	picture_starts_with?: string | undefined | null,
	/** All values not starting with the given string. */
	picture_not_starts_with?: string | undefined | null,
	/** All values ending with the given string. */
	picture_ends_with?: string | undefined | null,
	/** All values not ending with the given string */
	picture_not_ends_with?: string | undefined | null,
	name?: string | undefined | null,
	/** All values that are not equal to given value. */
	name_not?: string | undefined | null,
	/** All values that are contained in given list. */
	name_in?: Array<string | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	name_not_in?: Array<string | undefined | null> | undefined | null,
	/** All values containing the given string. */
	name_contains?: string | undefined | null,
	/** All values not containing the given string. */
	name_not_contains?: string | undefined | null,
	/** All values starting with the given string. */
	name_starts_with?: string | undefined | null,
	/** All values not starting with the given string. */
	name_not_starts_with?: string | undefined | null,
	/** All values ending with the given string. */
	name_ends_with?: string | undefined | null,
	/** All values not ending with the given string */
	name_not_ends_with?: string | undefined | null,
	publishedAt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values that are not equal to given value. */
	publishedAt_not?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values that are contained in given list. */
	publishedAt_in?: Array<ResolverInputTypes["DateTime"] | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	publishedAt_not_in?: Array<ResolverInputTypes["DateTime"] | undefined | null> | undefined | null,
	/** All values less than the given value. */
	publishedAt_lt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values less than or equal the given value. */
	publishedAt_lte?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values greater than the given value. */
	publishedAt_gt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values greater than or equal the given value. */
	publishedAt_gte?: ResolverInputTypes["DateTime"] | undefined | null,
	updatedAt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values that are not equal to given value. */
	updatedAt_not?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values that are contained in given list. */
	updatedAt_in?: Array<ResolverInputTypes["DateTime"] | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	updatedAt_not_in?: Array<ResolverInputTypes["DateTime"] | undefined | null> | undefined | null,
	/** All values less than the given value. */
	updatedAt_lt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values less than or equal the given value. */
	updatedAt_lte?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values greater than the given value. */
	updatedAt_gt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values greater than or equal the given value. */
	updatedAt_gte?: ResolverInputTypes["DateTime"] | undefined | null,
	createdAt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values that are not equal to given value. */
	createdAt_not?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values that are contained in given list. */
	createdAt_in?: Array<ResolverInputTypes["DateTime"] | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	createdAt_not_in?: Array<ResolverInputTypes["DateTime"] | undefined | null> | undefined | null,
	/** All values less than the given value. */
	createdAt_lt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values less than or equal the given value. */
	createdAt_lte?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values greater than the given value. */
	createdAt_gt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values greater than or equal the given value. */
	createdAt_gte?: ResolverInputTypes["DateTime"] | undefined | null,
	id?: string | undefined | null,
	/** All values that are not equal to given value. */
	id_not?: string | undefined | null,
	/** All values that are contained in given list. */
	id_in?: Array<string | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	id_not_in?: Array<string | undefined | null> | undefined | null,
	/** All values containing the given string. */
	id_contains?: string | undefined | null,
	/** All values not containing the given string. */
	id_not_contains?: string | undefined | null,
	/** All values starting with the given string. */
	id_starts_with?: string | undefined | null,
	/** All values not starting with the given string. */
	id_not_starts_with?: string | undefined | null,
	/** All values ending with the given string. */
	id_ends_with?: string | undefined | null,
	/** All values not ending with the given string */
	id_not_ends_with?: string | undefined | null,
	kind?: ResolverInputTypes["UserKind"] | undefined | null,
	/** All values that are not equal to given value. */
	kind_not?: ResolverInputTypes["UserKind"] | undefined | null,
	/** All values that are contained in given list. */
	kind_in?: Array<ResolverInputTypes["UserKind"] | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	kind_not_in?: Array<ResolverInputTypes["UserKind"] | undefined | null> | undefined | null
};
	["UserOrderByInput"]:UserOrderByInput;
	["UserUpdateManyInlineInput"]: {
	/** Connect multiple existing User documents */
	connect?: Array<ResolverInputTypes["UserConnectInput"]> | undefined | null,
	/** Override currently-connected documents with multiple existing User documents */
	set?: Array<ResolverInputTypes["UserWhereUniqueInput"]> | undefined | null,
	/** Disconnect multiple User documents */
	disconnect?: Array<ResolverInputTypes["UserWhereUniqueInput"]> | undefined | null
};
	["UserUpdateOneInlineInput"]: {
	/** Connect existing User document */
	connect?: ResolverInputTypes["UserWhereUniqueInput"] | undefined | null,
	/** Disconnect currently connected User document */
	disconnect?: boolean | undefined | null
};
	/** Identifies documents */
["UserWhereInput"]: {
	/** Contains search across all appropriate fields. */
	_search?: string | undefined | null,
	/** Logical AND on all given filters. */
	AND?: Array<ResolverInputTypes["UserWhereInput"]> | undefined | null,
	/** Logical OR on all given filters. */
	OR?: Array<ResolverInputTypes["UserWhereInput"]> | undefined | null,
	/** Logical NOT on all given filters combined by AND. */
	NOT?: Array<ResolverInputTypes["UserWhereInput"]> | undefined | null,
	isActive?: boolean | undefined | null,
	/** All values that are not equal to given value. */
	isActive_not?: boolean | undefined | null,
	picture?: string | undefined | null,
	/** All values that are not equal to given value. */
	picture_not?: string | undefined | null,
	/** All values that are contained in given list. */
	picture_in?: Array<string | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	picture_not_in?: Array<string | undefined | null> | undefined | null,
	/** All values containing the given string. */
	picture_contains?: string | undefined | null,
	/** All values not containing the given string. */
	picture_not_contains?: string | undefined | null,
	/** All values starting with the given string. */
	picture_starts_with?: string | undefined | null,
	/** All values not starting with the given string. */
	picture_not_starts_with?: string | undefined | null,
	/** All values ending with the given string. */
	picture_ends_with?: string | undefined | null,
	/** All values not ending with the given string */
	picture_not_ends_with?: string | undefined | null,
	name?: string | undefined | null,
	/** All values that are not equal to given value. */
	name_not?: string | undefined | null,
	/** All values that are contained in given list. */
	name_in?: Array<string | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	name_not_in?: Array<string | undefined | null> | undefined | null,
	/** All values containing the given string. */
	name_contains?: string | undefined | null,
	/** All values not containing the given string. */
	name_not_contains?: string | undefined | null,
	/** All values starting with the given string. */
	name_starts_with?: string | undefined | null,
	/** All values not starting with the given string. */
	name_not_starts_with?: string | undefined | null,
	/** All values ending with the given string. */
	name_ends_with?: string | undefined | null,
	/** All values not ending with the given string */
	name_not_ends_with?: string | undefined | null,
	publishedAt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values that are not equal to given value. */
	publishedAt_not?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values that are contained in given list. */
	publishedAt_in?: Array<ResolverInputTypes["DateTime"] | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	publishedAt_not_in?: Array<ResolverInputTypes["DateTime"] | undefined | null> | undefined | null,
	/** All values less than the given value. */
	publishedAt_lt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values less than or equal the given value. */
	publishedAt_lte?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values greater than the given value. */
	publishedAt_gt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values greater than or equal the given value. */
	publishedAt_gte?: ResolverInputTypes["DateTime"] | undefined | null,
	updatedAt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values that are not equal to given value. */
	updatedAt_not?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values that are contained in given list. */
	updatedAt_in?: Array<ResolverInputTypes["DateTime"] | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	updatedAt_not_in?: Array<ResolverInputTypes["DateTime"] | undefined | null> | undefined | null,
	/** All values less than the given value. */
	updatedAt_lt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values less than or equal the given value. */
	updatedAt_lte?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values greater than the given value. */
	updatedAt_gt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values greater than or equal the given value. */
	updatedAt_gte?: ResolverInputTypes["DateTime"] | undefined | null,
	createdAt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values that are not equal to given value. */
	createdAt_not?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values that are contained in given list. */
	createdAt_in?: Array<ResolverInputTypes["DateTime"] | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	createdAt_not_in?: Array<ResolverInputTypes["DateTime"] | undefined | null> | undefined | null,
	/** All values less than the given value. */
	createdAt_lt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values less than or equal the given value. */
	createdAt_lte?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values greater than the given value. */
	createdAt_gt?: ResolverInputTypes["DateTime"] | undefined | null,
	/** All values greater than or equal the given value. */
	createdAt_gte?: ResolverInputTypes["DateTime"] | undefined | null,
	id?: string | undefined | null,
	/** All values that are not equal to given value. */
	id_not?: string | undefined | null,
	/** All values that are contained in given list. */
	id_in?: Array<string | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	id_not_in?: Array<string | undefined | null> | undefined | null,
	/** All values containing the given string. */
	id_contains?: string | undefined | null,
	/** All values not containing the given string. */
	id_not_contains?: string | undefined | null,
	/** All values starting with the given string. */
	id_starts_with?: string | undefined | null,
	/** All values not starting with the given string. */
	id_not_starts_with?: string | undefined | null,
	/** All values ending with the given string. */
	id_ends_with?: string | undefined | null,
	/** All values not ending with the given string */
	id_not_ends_with?: string | undefined | null,
	kind?: ResolverInputTypes["UserKind"] | undefined | null,
	/** All values that are not equal to given value. */
	kind_not?: ResolverInputTypes["UserKind"] | undefined | null,
	/** All values that are contained in given list. */
	kind_in?: Array<ResolverInputTypes["UserKind"] | undefined | null> | undefined | null,
	/** All values that are not contained in given list. */
	kind_not_in?: Array<ResolverInputTypes["UserKind"] | undefined | null> | undefined | null
};
	/** References User record uniquely */
["UserWhereUniqueInput"]: {
	id?: string | undefined | null
};
	["Version"]: AliasType<{
	id?:boolean | `@${string}`,
	stage?:boolean | `@${string}`,
	revision?:boolean | `@${string}`,
	createdAt?:boolean | `@${string}`,
		__typename?: boolean | `@${string}`
}>;
	["VersionWhereInput"]: {
	id: string,
	stage: ResolverInputTypes["Stage"],
	revision: number
};
	["_FilterKind"]:_FilterKind;
	["_MutationInputFieldKind"]:_MutationInputFieldKind;
	["_MutationKind"]:_MutationKind;
	["_OrderDirection"]:_OrderDirection;
	["_RelationInputCardinality"]:_RelationInputCardinality;
	["_RelationInputKind"]:_RelationInputKind;
	["_RelationKind"]:_RelationKind;
	["_SystemDateTimeFieldVariation"]:_SystemDateTimeFieldVariation
  }

export type ModelTypes = {
    ["AboutMe"]: {
		/** System stage field */
	stage: ModelTypes["Stage"],
	/** Get the document in other stages */
	documentInStages: Array<ModelTypes["AboutMe"]>,
	/** The time the document was published. Null on documents in draft stage. */
	publishedAt?: ModelTypes["DateTime"] | undefined,
	/** The time the document was updated */
	updatedAt: ModelTypes["DateTime"],
	/** The time the document was created */
	createdAt: ModelTypes["DateTime"],
	/** The unique identifier */
	id: string,
	contactEmail: string,
	description: string,
	company?: ModelTypes["Company"] | undefined,
	links: Array<ModelTypes["AboutMelinksUnion"]>,
	/** User that last published this document */
	publishedBy?: ModelTypes["User"] | undefined,
	/** User that last updated this document */
	updatedBy?: ModelTypes["User"] | undefined,
	/** User that created this document */
	createdBy?: ModelTypes["User"] | undefined,
	photo: ModelTypes["Asset"],
	scheduledIn: Array<ModelTypes["ScheduledOperation"]>,
	/** List of AboutMe versions */
	history: Array<ModelTypes["Version"]>
};
	["AboutMeConnectInput"]: {
	/** Document to connect */
	where: ModelTypes["AboutMeWhereUniqueInput"],
	/** Allow to specify document position in list of connected documents, will default to appending at end of list */
	position?: ModelTypes["ConnectPositionInput"] | undefined
};
	/** A connection to a list of items. */
["AboutMeConnection"]: {
		/** Information to aid in pagination. */
	pageInfo: ModelTypes["PageInfo"],
	/** A list of edges. */
	edges: Array<ModelTypes["AboutMeEdge"]>,
	aggregate: ModelTypes["Aggregate"]
};
	["AboutMeCreateInput"]: {
	updatedAt?: ModelTypes["DateTime"] | undefined,
	createdAt?: ModelTypes["DateTime"] | undefined,
	contactEmail: string,
	description: string,
	company?: ModelTypes["CompanyCreateOneInlineInput"] | undefined,
	links?: ModelTypes["AboutMelinksUnionCreateManyInlineInput"] | undefined,
	photo: ModelTypes["AssetCreateOneInlineInput"]
};
	["AboutMeCreateManyInlineInput"]: {
	/** Create and connect multiple existing AboutMe documents */
	create?: Array<ModelTypes["AboutMeCreateInput"]> | undefined,
	/** Connect multiple existing AboutMe documents */
	connect?: Array<ModelTypes["AboutMeWhereUniqueInput"]> | undefined
};
	["AboutMeCreateOneInlineInput"]: {
	/** Create and connect one AboutMe document */
	create?: ModelTypes["AboutMeCreateInput"] | undefined,
	/** Connect one existing AboutMe document */
	connect?: ModelTypes["AboutMeWhereUniqueInput"] | undefined
};
	/** An edge in a connection. */
["AboutMeEdge"]: {
		/** The item at the end of the edge. */
	node: ModelTypes["AboutMe"],
	/** A cursor for use in pagination. */
	cursor: string
};
	/** Identifies documents */
["AboutMeManyWhereInput"]: {
	/** Contains search across all appropriate fields. */
	_search?: string | undefined,
	/** Logical AND on all given filters. */
	AND?: Array<ModelTypes["AboutMeWhereInput"]> | undefined,
	/** Logical OR on all given filters. */
	OR?: Array<ModelTypes["AboutMeWhereInput"]> | undefined,
	/** Logical NOT on all given filters combined by AND. */
	NOT?: Array<ModelTypes["AboutMeWhereInput"]> | undefined,
	publishedAt?: ModelTypes["DateTime"] | undefined,
	/** All values that are not equal to given value. */
	publishedAt_not?: ModelTypes["DateTime"] | undefined,
	/** All values that are contained in given list. */
	publishedAt_in?: Array<ModelTypes["DateTime"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	publishedAt_not_in?: Array<ModelTypes["DateTime"] | undefined> | undefined,
	/** All values less than the given value. */
	publishedAt_lt?: ModelTypes["DateTime"] | undefined,
	/** All values less than or equal the given value. */
	publishedAt_lte?: ModelTypes["DateTime"] | undefined,
	/** All values greater than the given value. */
	publishedAt_gt?: ModelTypes["DateTime"] | undefined,
	/** All values greater than or equal the given value. */
	publishedAt_gte?: ModelTypes["DateTime"] | undefined,
	updatedAt?: ModelTypes["DateTime"] | undefined,
	/** All values that are not equal to given value. */
	updatedAt_not?: ModelTypes["DateTime"] | undefined,
	/** All values that are contained in given list. */
	updatedAt_in?: Array<ModelTypes["DateTime"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	updatedAt_not_in?: Array<ModelTypes["DateTime"] | undefined> | undefined,
	/** All values less than the given value. */
	updatedAt_lt?: ModelTypes["DateTime"] | undefined,
	/** All values less than or equal the given value. */
	updatedAt_lte?: ModelTypes["DateTime"] | undefined,
	/** All values greater than the given value. */
	updatedAt_gt?: ModelTypes["DateTime"] | undefined,
	/** All values greater than or equal the given value. */
	updatedAt_gte?: ModelTypes["DateTime"] | undefined,
	createdAt?: ModelTypes["DateTime"] | undefined,
	/** All values that are not equal to given value. */
	createdAt_not?: ModelTypes["DateTime"] | undefined,
	/** All values that are contained in given list. */
	createdAt_in?: Array<ModelTypes["DateTime"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	createdAt_not_in?: Array<ModelTypes["DateTime"] | undefined> | undefined,
	/** All values less than the given value. */
	createdAt_lt?: ModelTypes["DateTime"] | undefined,
	/** All values less than or equal the given value. */
	createdAt_lte?: ModelTypes["DateTime"] | undefined,
	/** All values greater than the given value. */
	createdAt_gt?: ModelTypes["DateTime"] | undefined,
	/** All values greater than or equal the given value. */
	createdAt_gte?: ModelTypes["DateTime"] | undefined,
	id?: string | undefined,
	/** All values that are not equal to given value. */
	id_not?: string | undefined,
	/** All values that are contained in given list. */
	id_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	id_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	id_contains?: string | undefined,
	/** All values not containing the given string. */
	id_not_contains?: string | undefined,
	/** All values starting with the given string. */
	id_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	id_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	id_ends_with?: string | undefined,
	/** All values not ending with the given string */
	id_not_ends_with?: string | undefined,
	contactEmail?: string | undefined,
	/** All values that are not equal to given value. */
	contactEmail_not?: string | undefined,
	/** All values that are contained in given list. */
	contactEmail_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	contactEmail_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	contactEmail_contains?: string | undefined,
	/** All values not containing the given string. */
	contactEmail_not_contains?: string | undefined,
	/** All values starting with the given string. */
	contactEmail_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	contactEmail_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	contactEmail_ends_with?: string | undefined,
	/** All values not ending with the given string */
	contactEmail_not_ends_with?: string | undefined,
	description?: string | undefined,
	/** All values that are not equal to given value. */
	description_not?: string | undefined,
	/** All values that are contained in given list. */
	description_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	description_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	description_contains?: string | undefined,
	/** All values not containing the given string. */
	description_not_contains?: string | undefined,
	/** All values starting with the given string. */
	description_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	description_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	description_ends_with?: string | undefined,
	/** All values not ending with the given string */
	description_not_ends_with?: string | undefined,
	company?: ModelTypes["CompanyWhereInput"] | undefined,
	publishedBy?: ModelTypes["UserWhereInput"] | undefined,
	updatedBy?: ModelTypes["UserWhereInput"] | undefined,
	createdBy?: ModelTypes["UserWhereInput"] | undefined,
	photo?: ModelTypes["AssetWhereInput"] | undefined,
	scheduledIn_every?: ModelTypes["ScheduledOperationWhereInput"] | undefined,
	scheduledIn_some?: ModelTypes["ScheduledOperationWhereInput"] | undefined,
	scheduledIn_none?: ModelTypes["ScheduledOperationWhereInput"] | undefined
};
	["AboutMeOrderByInput"]:AboutMeOrderByInput;
	["AboutMeUpdateInput"]: {
	contactEmail?: string | undefined,
	description?: string | undefined,
	company?: ModelTypes["CompanyUpdateOneInlineInput"] | undefined,
	links?: ModelTypes["AboutMelinksUnionUpdateManyInlineInput"] | undefined,
	photo?: ModelTypes["AssetUpdateOneInlineInput"] | undefined
};
	["AboutMeUpdateManyInlineInput"]: {
	/** Create and connect multiple AboutMe documents */
	create?: Array<ModelTypes["AboutMeCreateInput"]> | undefined,
	/** Connect multiple existing AboutMe documents */
	connect?: Array<ModelTypes["AboutMeConnectInput"]> | undefined,
	/** Override currently-connected documents with multiple existing AboutMe documents */
	set?: Array<ModelTypes["AboutMeWhereUniqueInput"]> | undefined,
	/** Update multiple AboutMe documents */
	update?: Array<ModelTypes["AboutMeUpdateWithNestedWhereUniqueInput"]> | undefined,
	/** Upsert multiple AboutMe documents */
	upsert?: Array<ModelTypes["AboutMeUpsertWithNestedWhereUniqueInput"]> | undefined,
	/** Disconnect multiple AboutMe documents */
	disconnect?: Array<ModelTypes["AboutMeWhereUniqueInput"]> | undefined,
	/** Delete multiple AboutMe documents */
	delete?: Array<ModelTypes["AboutMeWhereUniqueInput"]> | undefined
};
	["AboutMeUpdateManyInput"]: {
	contactEmail?: string | undefined,
	description?: string | undefined
};
	["AboutMeUpdateManyWithNestedWhereInput"]: {
	/** Document search */
	where: ModelTypes["AboutMeWhereInput"],
	/** Update many input */
	data: ModelTypes["AboutMeUpdateManyInput"]
};
	["AboutMeUpdateOneInlineInput"]: {
	/** Create and connect one AboutMe document */
	create?: ModelTypes["AboutMeCreateInput"] | undefined,
	/** Update single AboutMe document */
	update?: ModelTypes["AboutMeUpdateWithNestedWhereUniqueInput"] | undefined,
	/** Upsert single AboutMe document */
	upsert?: ModelTypes["AboutMeUpsertWithNestedWhereUniqueInput"] | undefined,
	/** Connect existing AboutMe document */
	connect?: ModelTypes["AboutMeWhereUniqueInput"] | undefined,
	/** Disconnect currently connected AboutMe document */
	disconnect?: boolean | undefined,
	/** Delete currently connected AboutMe document */
	delete?: boolean | undefined
};
	["AboutMeUpdateWithNestedWhereUniqueInput"]: {
	/** Unique document search */
	where: ModelTypes["AboutMeWhereUniqueInput"],
	/** Document to update */
	data: ModelTypes["AboutMeUpdateInput"]
};
	["AboutMeUpsertInput"]: {
	/** Create document if it didn't exist */
	create: ModelTypes["AboutMeCreateInput"],
	/** Update document if it exists */
	update: ModelTypes["AboutMeUpdateInput"]
};
	["AboutMeUpsertWithNestedWhereUniqueInput"]: {
	/** Unique document search */
	where: ModelTypes["AboutMeWhereUniqueInput"],
	/** Upsert data */
	data: ModelTypes["AboutMeUpsertInput"]
};
	/** Identifies documents */
["AboutMeWhereInput"]: {
	/** Contains search across all appropriate fields. */
	_search?: string | undefined,
	/** Logical AND on all given filters. */
	AND?: Array<ModelTypes["AboutMeWhereInput"]> | undefined,
	/** Logical OR on all given filters. */
	OR?: Array<ModelTypes["AboutMeWhereInput"]> | undefined,
	/** Logical NOT on all given filters combined by AND. */
	NOT?: Array<ModelTypes["AboutMeWhereInput"]> | undefined,
	publishedAt?: ModelTypes["DateTime"] | undefined,
	/** All values that are not equal to given value. */
	publishedAt_not?: ModelTypes["DateTime"] | undefined,
	/** All values that are contained in given list. */
	publishedAt_in?: Array<ModelTypes["DateTime"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	publishedAt_not_in?: Array<ModelTypes["DateTime"] | undefined> | undefined,
	/** All values less than the given value. */
	publishedAt_lt?: ModelTypes["DateTime"] | undefined,
	/** All values less than or equal the given value. */
	publishedAt_lte?: ModelTypes["DateTime"] | undefined,
	/** All values greater than the given value. */
	publishedAt_gt?: ModelTypes["DateTime"] | undefined,
	/** All values greater than or equal the given value. */
	publishedAt_gte?: ModelTypes["DateTime"] | undefined,
	updatedAt?: ModelTypes["DateTime"] | undefined,
	/** All values that are not equal to given value. */
	updatedAt_not?: ModelTypes["DateTime"] | undefined,
	/** All values that are contained in given list. */
	updatedAt_in?: Array<ModelTypes["DateTime"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	updatedAt_not_in?: Array<ModelTypes["DateTime"] | undefined> | undefined,
	/** All values less than the given value. */
	updatedAt_lt?: ModelTypes["DateTime"] | undefined,
	/** All values less than or equal the given value. */
	updatedAt_lte?: ModelTypes["DateTime"] | undefined,
	/** All values greater than the given value. */
	updatedAt_gt?: ModelTypes["DateTime"] | undefined,
	/** All values greater than or equal the given value. */
	updatedAt_gte?: ModelTypes["DateTime"] | undefined,
	createdAt?: ModelTypes["DateTime"] | undefined,
	/** All values that are not equal to given value. */
	createdAt_not?: ModelTypes["DateTime"] | undefined,
	/** All values that are contained in given list. */
	createdAt_in?: Array<ModelTypes["DateTime"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	createdAt_not_in?: Array<ModelTypes["DateTime"] | undefined> | undefined,
	/** All values less than the given value. */
	createdAt_lt?: ModelTypes["DateTime"] | undefined,
	/** All values less than or equal the given value. */
	createdAt_lte?: ModelTypes["DateTime"] | undefined,
	/** All values greater than the given value. */
	createdAt_gt?: ModelTypes["DateTime"] | undefined,
	/** All values greater than or equal the given value. */
	createdAt_gte?: ModelTypes["DateTime"] | undefined,
	id?: string | undefined,
	/** All values that are not equal to given value. */
	id_not?: string | undefined,
	/** All values that are contained in given list. */
	id_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	id_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	id_contains?: string | undefined,
	/** All values not containing the given string. */
	id_not_contains?: string | undefined,
	/** All values starting with the given string. */
	id_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	id_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	id_ends_with?: string | undefined,
	/** All values not ending with the given string */
	id_not_ends_with?: string | undefined,
	contactEmail?: string | undefined,
	/** All values that are not equal to given value. */
	contactEmail_not?: string | undefined,
	/** All values that are contained in given list. */
	contactEmail_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	contactEmail_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	contactEmail_contains?: string | undefined,
	/** All values not containing the given string. */
	contactEmail_not_contains?: string | undefined,
	/** All values starting with the given string. */
	contactEmail_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	contactEmail_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	contactEmail_ends_with?: string | undefined,
	/** All values not ending with the given string */
	contactEmail_not_ends_with?: string | undefined,
	description?: string | undefined,
	/** All values that are not equal to given value. */
	description_not?: string | undefined,
	/** All values that are contained in given list. */
	description_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	description_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	description_contains?: string | undefined,
	/** All values not containing the given string. */
	description_not_contains?: string | undefined,
	/** All values starting with the given string. */
	description_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	description_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	description_ends_with?: string | undefined,
	/** All values not ending with the given string */
	description_not_ends_with?: string | undefined,
	company?: ModelTypes["CompanyWhereInput"] | undefined,
	publishedBy?: ModelTypes["UserWhereInput"] | undefined,
	updatedBy?: ModelTypes["UserWhereInput"] | undefined,
	createdBy?: ModelTypes["UserWhereInput"] | undefined,
	photo?: ModelTypes["AssetWhereInput"] | undefined,
	scheduledIn_every?: ModelTypes["ScheduledOperationWhereInput"] | undefined,
	scheduledIn_some?: ModelTypes["ScheduledOperationWhereInput"] | undefined,
	scheduledIn_none?: ModelTypes["ScheduledOperationWhereInput"] | undefined
};
	/** References AboutMe record uniquely */
["AboutMeWhereUniqueInput"]: {
	id?: string | undefined
};
	["AboutMelinksUnion"]:ModelTypes["Link"];
	["AboutMelinksUnionConnectInput"]: {
	Link?: ModelTypes["LinkConnectInput"] | undefined
};
	["AboutMelinksUnionCreateInput"]: {
	Link?: ModelTypes["LinkCreateInput"] | undefined
};
	["AboutMelinksUnionCreateManyInlineInput"]: {
	/** Create and connect multiple existing AboutMelinksUnion documents */
	create?: Array<ModelTypes["AboutMelinksUnionCreateInput"]> | undefined
};
	["AboutMelinksUnionCreateOneInlineInput"]: {
	/** Create and connect one AboutMelinksUnion document */
	create?: ModelTypes["AboutMelinksUnionCreateInput"] | undefined
};
	["AboutMelinksUnionCreateWithPositionInput"]: {
	Link?: ModelTypes["LinkCreateWithPositionInput"] | undefined
};
	["AboutMelinksUnionUpdateInput"]: {
	Link?: ModelTypes["LinkUpdateInput"] | undefined
};
	["AboutMelinksUnionUpdateManyInlineInput"]: {
	/** Create and connect multiple AboutMelinksUnion component instances */
	create?: Array<ModelTypes["AboutMelinksUnionCreateWithPositionInput"]> | undefined,
	/** Update multiple AboutMelinksUnion component instances */
	update?: Array<ModelTypes["AboutMelinksUnionUpdateWithNestedWhereUniqueAndPositionInput"]> | undefined,
	/** Upsert multiple AboutMelinksUnion component instances */
	upsert?: Array<ModelTypes["AboutMelinksUnionUpsertWithNestedWhereUniqueAndPositionInput"]> | undefined,
	/** Delete multiple AboutMelinksUnion documents */
	delete?: Array<ModelTypes["AboutMelinksUnionWhereUniqueInput"]> | undefined
};
	["AboutMelinksUnionUpdateManyWithNestedWhereInput"]: {
	Link?: ModelTypes["LinkUpdateManyWithNestedWhereInput"] | undefined
};
	["AboutMelinksUnionUpdateOneInlineInput"]: {
	/** Create and connect one AboutMelinksUnion document */
	create?: ModelTypes["AboutMelinksUnionCreateInput"] | undefined,
	/** Update single AboutMelinksUnion document */
	update?: ModelTypes["AboutMelinksUnionUpdateWithNestedWhereUniqueInput"] | undefined,
	/** Upsert single AboutMelinksUnion document */
	upsert?: ModelTypes["AboutMelinksUnionUpsertWithNestedWhereUniqueInput"] | undefined,
	/** Delete currently connected AboutMelinksUnion document */
	delete?: boolean | undefined
};
	["AboutMelinksUnionUpdateWithNestedWhereUniqueAndPositionInput"]: {
	Link?: ModelTypes["LinkUpdateWithNestedWhereUniqueAndPositionInput"] | undefined
};
	["AboutMelinksUnionUpdateWithNestedWhereUniqueInput"]: {
	Link?: ModelTypes["LinkUpdateWithNestedWhereUniqueInput"] | undefined
};
	["AboutMelinksUnionUpsertWithNestedWhereUniqueAndPositionInput"]: {
	Link?: ModelTypes["LinkUpsertWithNestedWhereUniqueAndPositionInput"] | undefined
};
	["AboutMelinksUnionUpsertWithNestedWhereUniqueInput"]: {
	Link?: ModelTypes["LinkUpsertWithNestedWhereUniqueInput"] | undefined
};
	["AboutMelinksUnionWhereInput"]: {
	Link?: ModelTypes["LinkWhereInput"] | undefined
};
	["AboutMelinksUnionWhereUniqueInput"]: {
	Link?: ModelTypes["LinkWhereUniqueInput"] | undefined
};
	["Aggregate"]: {
		count: number
};
	/** Asset system model */
["Asset"]: {
		/** System stage field */
	stage: ModelTypes["Stage"],
	/** System Locale field */
	locale: ModelTypes["Locale"],
	/** Get the other localizations for this document */
	localizations: Array<ModelTypes["Asset"]>,
	/** Get the document in other stages */
	documentInStages: Array<ModelTypes["Asset"]>,
	/** The mime type of the file */
	mimeType?: string | undefined,
	/** The file size */
	size?: number | undefined,
	/** The file width */
	width?: number | undefined,
	/** The height of the file */
	height?: number | undefined,
	/** The file name */
	fileName: string,
	/** The file handle */
	handle: string,
	/** The time the document was published. Null on documents in draft stage. */
	publishedAt?: ModelTypes["DateTime"] | undefined,
	/** The time the document was updated */
	updatedAt: ModelTypes["DateTime"],
	/** The time the document was created */
	createdAt: ModelTypes["DateTime"],
	/** The unique identifier */
	id: string,
	/** User that last published this document */
	publishedBy?: ModelTypes["User"] | undefined,
	/** User that last updated this document */
	updatedBy?: ModelTypes["User"] | undefined,
	/** User that created this document */
	createdBy?: ModelTypes["User"] | undefined,
	imageProject: Array<ModelTypes["Project"]>,
	og_imageSeo: Array<ModelTypes["Seo"]>,
	photoAboutMe: Array<ModelTypes["AboutMe"]>,
	scheduledIn: Array<ModelTypes["ScheduledOperation"]>,
	/** List of Asset versions */
	history: Array<ModelTypes["Version"]>,
	/** Get the url for the asset with provided transformations applied. */
	url: string
};
	["AssetConnectInput"]: {
	/** Document to connect */
	where: ModelTypes["AssetWhereUniqueInput"],
	/** Allow to specify document position in list of connected documents, will default to appending at end of list */
	position?: ModelTypes["ConnectPositionInput"] | undefined
};
	/** A connection to a list of items. */
["AssetConnection"]: {
		/** Information to aid in pagination. */
	pageInfo: ModelTypes["PageInfo"],
	/** A list of edges. */
	edges: Array<ModelTypes["AssetEdge"]>,
	aggregate: ModelTypes["Aggregate"]
};
	["AssetCreateInput"]: {
	mimeType?: string | undefined,
	size?: number | undefined,
	width?: number | undefined,
	height?: number | undefined,
	fileName: string,
	handle: string,
	updatedAt?: ModelTypes["DateTime"] | undefined,
	createdAt?: ModelTypes["DateTime"] | undefined,
	imageProject?: ModelTypes["ProjectCreateManyInlineInput"] | undefined,
	og_imageSeo?: ModelTypes["SeoCreateManyInlineInput"] | undefined,
	iconLink?: ModelTypes["LinkCreateManyInlineInput"] | undefined,
	iconSkill?: ModelTypes["SkillCreateManyInlineInput"] | undefined,
	photoAboutMe?: ModelTypes["AboutMeCreateManyInlineInput"] | undefined,
	/** Inline mutations for managing document localizations excluding the default locale */
	localizations?: ModelTypes["AssetCreateLocalizationsInput"] | undefined
};
	["AssetCreateLocalizationDataInput"]: {
	mimeType?: string | undefined,
	size?: number | undefined,
	width?: number | undefined,
	height?: number | undefined,
	fileName: string,
	handle: string,
	updatedAt?: ModelTypes["DateTime"] | undefined,
	createdAt?: ModelTypes["DateTime"] | undefined
};
	["AssetCreateLocalizationInput"]: {
	/** Localization input */
	data: ModelTypes["AssetCreateLocalizationDataInput"],
	locale: ModelTypes["Locale"]
};
	["AssetCreateLocalizationsInput"]: {
	/** Create localizations for the newly-created document */
	create?: Array<ModelTypes["AssetCreateLocalizationInput"]> | undefined
};
	["AssetCreateManyInlineInput"]: {
	/** Create and connect multiple existing Asset documents */
	create?: Array<ModelTypes["AssetCreateInput"]> | undefined,
	/** Connect multiple existing Asset documents */
	connect?: Array<ModelTypes["AssetWhereUniqueInput"]> | undefined
};
	["AssetCreateOneInlineInput"]: {
	/** Create and connect one Asset document */
	create?: ModelTypes["AssetCreateInput"] | undefined,
	/** Connect one existing Asset document */
	connect?: ModelTypes["AssetWhereUniqueInput"] | undefined
};
	/** An edge in a connection. */
["AssetEdge"]: {
		/** The item at the end of the edge. */
	node: ModelTypes["Asset"],
	/** A cursor for use in pagination. */
	cursor: string
};
	/** Identifies documents */
["AssetManyWhereInput"]: {
	/** Contains search across all appropriate fields. */
	_search?: string | undefined,
	/** Logical AND on all given filters. */
	AND?: Array<ModelTypes["AssetWhereInput"]> | undefined,
	/** Logical OR on all given filters. */
	OR?: Array<ModelTypes["AssetWhereInput"]> | undefined,
	/** Logical NOT on all given filters combined by AND. */
	NOT?: Array<ModelTypes["AssetWhereInput"]> | undefined,
	publishedAt?: ModelTypes["DateTime"] | undefined,
	/** All values that are not equal to given value. */
	publishedAt_not?: ModelTypes["DateTime"] | undefined,
	/** All values that are contained in given list. */
	publishedAt_in?: Array<ModelTypes["DateTime"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	publishedAt_not_in?: Array<ModelTypes["DateTime"] | undefined> | undefined,
	/** All values less than the given value. */
	publishedAt_lt?: ModelTypes["DateTime"] | undefined,
	/** All values less than or equal the given value. */
	publishedAt_lte?: ModelTypes["DateTime"] | undefined,
	/** All values greater than the given value. */
	publishedAt_gt?: ModelTypes["DateTime"] | undefined,
	/** All values greater than or equal the given value. */
	publishedAt_gte?: ModelTypes["DateTime"] | undefined,
	updatedAt?: ModelTypes["DateTime"] | undefined,
	/** All values that are not equal to given value. */
	updatedAt_not?: ModelTypes["DateTime"] | undefined,
	/** All values that are contained in given list. */
	updatedAt_in?: Array<ModelTypes["DateTime"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	updatedAt_not_in?: Array<ModelTypes["DateTime"] | undefined> | undefined,
	/** All values less than the given value. */
	updatedAt_lt?: ModelTypes["DateTime"] | undefined,
	/** All values less than or equal the given value. */
	updatedAt_lte?: ModelTypes["DateTime"] | undefined,
	/** All values greater than the given value. */
	updatedAt_gt?: ModelTypes["DateTime"] | undefined,
	/** All values greater than or equal the given value. */
	updatedAt_gte?: ModelTypes["DateTime"] | undefined,
	createdAt?: ModelTypes["DateTime"] | undefined,
	/** All values that are not equal to given value. */
	createdAt_not?: ModelTypes["DateTime"] | undefined,
	/** All values that are contained in given list. */
	createdAt_in?: Array<ModelTypes["DateTime"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	createdAt_not_in?: Array<ModelTypes["DateTime"] | undefined> | undefined,
	/** All values less than the given value. */
	createdAt_lt?: ModelTypes["DateTime"] | undefined,
	/** All values less than or equal the given value. */
	createdAt_lte?: ModelTypes["DateTime"] | undefined,
	/** All values greater than the given value. */
	createdAt_gt?: ModelTypes["DateTime"] | undefined,
	/** All values greater than or equal the given value. */
	createdAt_gte?: ModelTypes["DateTime"] | undefined,
	id?: string | undefined,
	/** All values that are not equal to given value. */
	id_not?: string | undefined,
	/** All values that are contained in given list. */
	id_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	id_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	id_contains?: string | undefined,
	/** All values not containing the given string. */
	id_not_contains?: string | undefined,
	/** All values starting with the given string. */
	id_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	id_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	id_ends_with?: string | undefined,
	/** All values not ending with the given string */
	id_not_ends_with?: string | undefined,
	publishedBy?: ModelTypes["UserWhereInput"] | undefined,
	updatedBy?: ModelTypes["UserWhereInput"] | undefined,
	createdBy?: ModelTypes["UserWhereInput"] | undefined,
	imageProject_every?: ModelTypes["ProjectWhereInput"] | undefined,
	imageProject_some?: ModelTypes["ProjectWhereInput"] | undefined,
	imageProject_none?: ModelTypes["ProjectWhereInput"] | undefined,
	og_imageSeo_every?: ModelTypes["SeoWhereInput"] | undefined,
	og_imageSeo_some?: ModelTypes["SeoWhereInput"] | undefined,
	og_imageSeo_none?: ModelTypes["SeoWhereInput"] | undefined,
	photoAboutMe_every?: ModelTypes["AboutMeWhereInput"] | undefined,
	photoAboutMe_some?: ModelTypes["AboutMeWhereInput"] | undefined,
	photoAboutMe_none?: ModelTypes["AboutMeWhereInput"] | undefined,
	scheduledIn_every?: ModelTypes["ScheduledOperationWhereInput"] | undefined,
	scheduledIn_some?: ModelTypes["ScheduledOperationWhereInput"] | undefined,
	scheduledIn_none?: ModelTypes["ScheduledOperationWhereInput"] | undefined
};
	["AssetOrderByInput"]:AssetOrderByInput;
	/** Transformations for Assets */
["AssetTransformationInput"]: {
	image?: ModelTypes["ImageTransformationInput"] | undefined,
	document?: ModelTypes["DocumentTransformationInput"] | undefined,
	/** Pass true if you want to validate the passed transformation parameters */
	validateOptions?: boolean | undefined
};
	["AssetUpdateInput"]: {
	mimeType?: string | undefined,
	size?: number | undefined,
	width?: number | undefined,
	height?: number | undefined,
	fileName?: string | undefined,
	handle?: string | undefined,
	imageProject?: ModelTypes["ProjectUpdateManyInlineInput"] | undefined,
	og_imageSeo?: ModelTypes["SeoUpdateManyInlineInput"] | undefined,
	iconLink?: ModelTypes["LinkUpdateManyInlineInput"] | undefined,
	iconSkill?: ModelTypes["SkillUpdateManyInlineInput"] | undefined,
	photoAboutMe?: ModelTypes["AboutMeUpdateManyInlineInput"] | undefined,
	/** Manage document localizations */
	localizations?: ModelTypes["AssetUpdateLocalizationsInput"] | undefined
};
	["AssetUpdateLocalizationDataInput"]: {
	mimeType?: string | undefined,
	size?: number | undefined,
	width?: number | undefined,
	height?: number | undefined,
	fileName?: string | undefined,
	handle?: string | undefined
};
	["AssetUpdateLocalizationInput"]: {
	data: ModelTypes["AssetUpdateLocalizationDataInput"],
	locale: ModelTypes["Locale"]
};
	["AssetUpdateLocalizationsInput"]: {
	/** Localizations to create */
	create?: Array<ModelTypes["AssetCreateLocalizationInput"]> | undefined,
	/** Localizations to update */
	update?: Array<ModelTypes["AssetUpdateLocalizationInput"]> | undefined,
	upsert?: Array<ModelTypes["AssetUpsertLocalizationInput"]> | undefined,
	/** Localizations to delete */
	delete?: Array<ModelTypes["Locale"]> | undefined
};
	["AssetUpdateManyInlineInput"]: {
	/** Create and connect multiple Asset documents */
	create?: Array<ModelTypes["AssetCreateInput"]> | undefined,
	/** Connect multiple existing Asset documents */
	connect?: Array<ModelTypes["AssetConnectInput"]> | undefined,
	/** Override currently-connected documents with multiple existing Asset documents */
	set?: Array<ModelTypes["AssetWhereUniqueInput"]> | undefined,
	/** Update multiple Asset documents */
	update?: Array<ModelTypes["AssetUpdateWithNestedWhereUniqueInput"]> | undefined,
	/** Upsert multiple Asset documents */
	upsert?: Array<ModelTypes["AssetUpsertWithNestedWhereUniqueInput"]> | undefined,
	/** Disconnect multiple Asset documents */
	disconnect?: Array<ModelTypes["AssetWhereUniqueInput"]> | undefined,
	/** Delete multiple Asset documents */
	delete?: Array<ModelTypes["AssetWhereUniqueInput"]> | undefined
};
	["AssetUpdateManyInput"]: {
	mimeType?: string | undefined,
	size?: number | undefined,
	width?: number | undefined,
	height?: number | undefined,
	fileName?: string | undefined,
	/** Optional updates to localizations */
	localizations?: ModelTypes["AssetUpdateManyLocalizationsInput"] | undefined
};
	["AssetUpdateManyLocalizationDataInput"]: {
	mimeType?: string | undefined,
	size?: number | undefined,
	width?: number | undefined,
	height?: number | undefined,
	fileName?: string | undefined
};
	["AssetUpdateManyLocalizationInput"]: {
	data: ModelTypes["AssetUpdateManyLocalizationDataInput"],
	locale: ModelTypes["Locale"]
};
	["AssetUpdateManyLocalizationsInput"]: {
	/** Localizations to update */
	update?: Array<ModelTypes["AssetUpdateManyLocalizationInput"]> | undefined
};
	["AssetUpdateManyWithNestedWhereInput"]: {
	/** Document search */
	where: ModelTypes["AssetWhereInput"],
	/** Update many input */
	data: ModelTypes["AssetUpdateManyInput"]
};
	["AssetUpdateOneInlineInput"]: {
	/** Create and connect one Asset document */
	create?: ModelTypes["AssetCreateInput"] | undefined,
	/** Update single Asset document */
	update?: ModelTypes["AssetUpdateWithNestedWhereUniqueInput"] | undefined,
	/** Upsert single Asset document */
	upsert?: ModelTypes["AssetUpsertWithNestedWhereUniqueInput"] | undefined,
	/** Connect existing Asset document */
	connect?: ModelTypes["AssetWhereUniqueInput"] | undefined,
	/** Disconnect currently connected Asset document */
	disconnect?: boolean | undefined,
	/** Delete currently connected Asset document */
	delete?: boolean | undefined
};
	["AssetUpdateWithNestedWhereUniqueInput"]: {
	/** Unique document search */
	where: ModelTypes["AssetWhereUniqueInput"],
	/** Document to update */
	data: ModelTypes["AssetUpdateInput"]
};
	["AssetUpsertInput"]: {
	/** Create document if it didn't exist */
	create: ModelTypes["AssetCreateInput"],
	/** Update document if it exists */
	update: ModelTypes["AssetUpdateInput"]
};
	["AssetUpsertLocalizationInput"]: {
	update: ModelTypes["AssetUpdateLocalizationDataInput"],
	create: ModelTypes["AssetCreateLocalizationDataInput"],
	locale: ModelTypes["Locale"]
};
	["AssetUpsertWithNestedWhereUniqueInput"]: {
	/** Unique document search */
	where: ModelTypes["AssetWhereUniqueInput"],
	/** Upsert data */
	data: ModelTypes["AssetUpsertInput"]
};
	/** Identifies documents */
["AssetWhereInput"]: {
	/** Contains search across all appropriate fields. */
	_search?: string | undefined,
	/** Logical AND on all given filters. */
	AND?: Array<ModelTypes["AssetWhereInput"]> | undefined,
	/** Logical OR on all given filters. */
	OR?: Array<ModelTypes["AssetWhereInput"]> | undefined,
	/** Logical NOT on all given filters combined by AND. */
	NOT?: Array<ModelTypes["AssetWhereInput"]> | undefined,
	mimeType?: string | undefined,
	/** All values that are not equal to given value. */
	mimeType_not?: string | undefined,
	/** All values that are contained in given list. */
	mimeType_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	mimeType_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	mimeType_contains?: string | undefined,
	/** All values not containing the given string. */
	mimeType_not_contains?: string | undefined,
	/** All values starting with the given string. */
	mimeType_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	mimeType_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	mimeType_ends_with?: string | undefined,
	/** All values not ending with the given string */
	mimeType_not_ends_with?: string | undefined,
	size?: number | undefined,
	/** All values that are not equal to given value. */
	size_not?: number | undefined,
	/** All values that are contained in given list. */
	size_in?: Array<number | undefined> | undefined,
	/** All values that are not contained in given list. */
	size_not_in?: Array<number | undefined> | undefined,
	/** All values less than the given value. */
	size_lt?: number | undefined,
	/** All values less than or equal the given value. */
	size_lte?: number | undefined,
	/** All values greater than the given value. */
	size_gt?: number | undefined,
	/** All values greater than or equal the given value. */
	size_gte?: number | undefined,
	width?: number | undefined,
	/** All values that are not equal to given value. */
	width_not?: number | undefined,
	/** All values that are contained in given list. */
	width_in?: Array<number | undefined> | undefined,
	/** All values that are not contained in given list. */
	width_not_in?: Array<number | undefined> | undefined,
	/** All values less than the given value. */
	width_lt?: number | undefined,
	/** All values less than or equal the given value. */
	width_lte?: number | undefined,
	/** All values greater than the given value. */
	width_gt?: number | undefined,
	/** All values greater than or equal the given value. */
	width_gte?: number | undefined,
	height?: number | undefined,
	/** All values that are not equal to given value. */
	height_not?: number | undefined,
	/** All values that are contained in given list. */
	height_in?: Array<number | undefined> | undefined,
	/** All values that are not contained in given list. */
	height_not_in?: Array<number | undefined> | undefined,
	/** All values less than the given value. */
	height_lt?: number | undefined,
	/** All values less than or equal the given value. */
	height_lte?: number | undefined,
	/** All values greater than the given value. */
	height_gt?: number | undefined,
	/** All values greater than or equal the given value. */
	height_gte?: number | undefined,
	fileName?: string | undefined,
	/** All values that are not equal to given value. */
	fileName_not?: string | undefined,
	/** All values that are contained in given list. */
	fileName_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	fileName_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	fileName_contains?: string | undefined,
	/** All values not containing the given string. */
	fileName_not_contains?: string | undefined,
	/** All values starting with the given string. */
	fileName_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	fileName_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	fileName_ends_with?: string | undefined,
	/** All values not ending with the given string */
	fileName_not_ends_with?: string | undefined,
	handle?: string | undefined,
	/** All values that are not equal to given value. */
	handle_not?: string | undefined,
	/** All values that are contained in given list. */
	handle_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	handle_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	handle_contains?: string | undefined,
	/** All values not containing the given string. */
	handle_not_contains?: string | undefined,
	/** All values starting with the given string. */
	handle_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	handle_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	handle_ends_with?: string | undefined,
	/** All values not ending with the given string */
	handle_not_ends_with?: string | undefined,
	publishedAt?: ModelTypes["DateTime"] | undefined,
	/** All values that are not equal to given value. */
	publishedAt_not?: ModelTypes["DateTime"] | undefined,
	/** All values that are contained in given list. */
	publishedAt_in?: Array<ModelTypes["DateTime"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	publishedAt_not_in?: Array<ModelTypes["DateTime"] | undefined> | undefined,
	/** All values less than the given value. */
	publishedAt_lt?: ModelTypes["DateTime"] | undefined,
	/** All values less than or equal the given value. */
	publishedAt_lte?: ModelTypes["DateTime"] | undefined,
	/** All values greater than the given value. */
	publishedAt_gt?: ModelTypes["DateTime"] | undefined,
	/** All values greater than or equal the given value. */
	publishedAt_gte?: ModelTypes["DateTime"] | undefined,
	updatedAt?: ModelTypes["DateTime"] | undefined,
	/** All values that are not equal to given value. */
	updatedAt_not?: ModelTypes["DateTime"] | undefined,
	/** All values that are contained in given list. */
	updatedAt_in?: Array<ModelTypes["DateTime"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	updatedAt_not_in?: Array<ModelTypes["DateTime"] | undefined> | undefined,
	/** All values less than the given value. */
	updatedAt_lt?: ModelTypes["DateTime"] | undefined,
	/** All values less than or equal the given value. */
	updatedAt_lte?: ModelTypes["DateTime"] | undefined,
	/** All values greater than the given value. */
	updatedAt_gt?: ModelTypes["DateTime"] | undefined,
	/** All values greater than or equal the given value. */
	updatedAt_gte?: ModelTypes["DateTime"] | undefined,
	createdAt?: ModelTypes["DateTime"] | undefined,
	/** All values that are not equal to given value. */
	createdAt_not?: ModelTypes["DateTime"] | undefined,
	/** All values that are contained in given list. */
	createdAt_in?: Array<ModelTypes["DateTime"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	createdAt_not_in?: Array<ModelTypes["DateTime"] | undefined> | undefined,
	/** All values less than the given value. */
	createdAt_lt?: ModelTypes["DateTime"] | undefined,
	/** All values less than or equal the given value. */
	createdAt_lte?: ModelTypes["DateTime"] | undefined,
	/** All values greater than the given value. */
	createdAt_gt?: ModelTypes["DateTime"] | undefined,
	/** All values greater than or equal the given value. */
	createdAt_gte?: ModelTypes["DateTime"] | undefined,
	id?: string | undefined,
	/** All values that are not equal to given value. */
	id_not?: string | undefined,
	/** All values that are contained in given list. */
	id_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	id_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	id_contains?: string | undefined,
	/** All values not containing the given string. */
	id_not_contains?: string | undefined,
	/** All values starting with the given string. */
	id_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	id_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	id_ends_with?: string | undefined,
	/** All values not ending with the given string */
	id_not_ends_with?: string | undefined,
	publishedBy?: ModelTypes["UserWhereInput"] | undefined,
	updatedBy?: ModelTypes["UserWhereInput"] | undefined,
	createdBy?: ModelTypes["UserWhereInput"] | undefined,
	imageProject_every?: ModelTypes["ProjectWhereInput"] | undefined,
	imageProject_some?: ModelTypes["ProjectWhereInput"] | undefined,
	imageProject_none?: ModelTypes["ProjectWhereInput"] | undefined,
	og_imageSeo_every?: ModelTypes["SeoWhereInput"] | undefined,
	og_imageSeo_some?: ModelTypes["SeoWhereInput"] | undefined,
	og_imageSeo_none?: ModelTypes["SeoWhereInput"] | undefined,
	photoAboutMe_every?: ModelTypes["AboutMeWhereInput"] | undefined,
	photoAboutMe_some?: ModelTypes["AboutMeWhereInput"] | undefined,
	photoAboutMe_none?: ModelTypes["AboutMeWhereInput"] | undefined,
	scheduledIn_every?: ModelTypes["ScheduledOperationWhereInput"] | undefined,
	scheduledIn_some?: ModelTypes["ScheduledOperationWhereInput"] | undefined,
	scheduledIn_none?: ModelTypes["ScheduledOperationWhereInput"] | undefined
};
	/** References Asset record uniquely */
["AssetWhereUniqueInput"]: {
	id?: string | undefined
};
	["BatchPayload"]: {
		/** The number of nodes that have been affected by the Batch operation. */
	count: ModelTypes["Long"]
};
	/** Representing a color value comprising of HEX, RGBA and css color values */
["Color"]: {
		hex: ModelTypes["Hex"],
	rgba: ModelTypes["RGBA"],
	css: string
};
	/** Accepts either HEX or RGBA color value. At least one of hex or rgba value should be passed. If both are passed RGBA is used. */
["ColorInput"]: {
	hex?: ModelTypes["Hex"] | undefined,
	rgba?: ModelTypes["RGBAInput"] | undefined
};
	["Company"]: {
		/** System stage field */
	stage: ModelTypes["Stage"],
	/** The unique identifier */
	id: string,
	companyName: string,
	companyWebsite: string
};
	["CompanyConnectInput"]: {
	/** Document to connect */
	where: ModelTypes["CompanyWhereUniqueInput"],
	/** Allow to specify document position in list of connected documents, will default to appending at end of list */
	position?: ModelTypes["ConnectPositionInput"] | undefined
};
	/** A connection to a list of items. */
["CompanyConnection"]: {
		/** Information to aid in pagination. */
	pageInfo: ModelTypes["PageInfo"],
	/** A list of edges. */
	edges: Array<ModelTypes["CompanyEdge"]>,
	aggregate: ModelTypes["Aggregate"]
};
	["CompanyCreateInput"]: {
	companyName: string,
	companyWebsite: string
};
	["CompanyCreateManyInlineInput"]: {
	/** Create and connect multiple existing Company documents */
	create?: Array<ModelTypes["CompanyCreateInput"]> | undefined
};
	["CompanyCreateOneInlineInput"]: {
	/** Create and connect one Company document */
	create?: ModelTypes["CompanyCreateInput"] | undefined
};
	["CompanyCreateWithPositionInput"]: {
	/** Position in the list of existing component instances, will default to appending at the end of list */
	position?: ModelTypes["ConnectPositionInput"] | undefined,
	/** Document to create */
	data: ModelTypes["CompanyCreateInput"]
};
	/** An edge in a connection. */
["CompanyEdge"]: {
		/** The item at the end of the edge. */
	node: ModelTypes["Company"],
	/** A cursor for use in pagination. */
	cursor: string
};
	/** Identifies documents */
["CompanyManyWhereInput"]: {
	/** Contains search across all appropriate fields. */
	_search?: string | undefined,
	/** Logical AND on all given filters. */
	AND?: Array<ModelTypes["CompanyWhereInput"]> | undefined,
	/** Logical OR on all given filters. */
	OR?: Array<ModelTypes["CompanyWhereInput"]> | undefined,
	/** Logical NOT on all given filters combined by AND. */
	NOT?: Array<ModelTypes["CompanyWhereInput"]> | undefined,
	id?: string | undefined,
	/** All values that are not equal to given value. */
	id_not?: string | undefined,
	/** All values that are contained in given list. */
	id_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	id_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	id_contains?: string | undefined,
	/** All values not containing the given string. */
	id_not_contains?: string | undefined,
	/** All values starting with the given string. */
	id_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	id_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	id_ends_with?: string | undefined,
	/** All values not ending with the given string */
	id_not_ends_with?: string | undefined,
	companyName?: string | undefined,
	/** All values that are not equal to given value. */
	companyName_not?: string | undefined,
	/** All values that are contained in given list. */
	companyName_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	companyName_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	companyName_contains?: string | undefined,
	/** All values not containing the given string. */
	companyName_not_contains?: string | undefined,
	/** All values starting with the given string. */
	companyName_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	companyName_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	companyName_ends_with?: string | undefined,
	/** All values not ending with the given string */
	companyName_not_ends_with?: string | undefined,
	companyWebsite?: string | undefined,
	/** All values that are not equal to given value. */
	companyWebsite_not?: string | undefined,
	/** All values that are contained in given list. */
	companyWebsite_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	companyWebsite_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	companyWebsite_contains?: string | undefined,
	/** All values not containing the given string. */
	companyWebsite_not_contains?: string | undefined,
	/** All values starting with the given string. */
	companyWebsite_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	companyWebsite_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	companyWebsite_ends_with?: string | undefined,
	/** All values not ending with the given string */
	companyWebsite_not_ends_with?: string | undefined
};
	["CompanyOrderByInput"]:CompanyOrderByInput;
	["CompanyParent"]:ModelTypes["AboutMe"];
	["CompanyParentConnectInput"]: {
	AboutMe?: ModelTypes["AboutMeConnectInput"] | undefined
};
	["CompanyParentCreateInput"]: {
	AboutMe?: ModelTypes["AboutMeCreateInput"] | undefined
};
	["CompanyParentCreateManyInlineInput"]: {
	/** Create and connect multiple existing CompanyParent documents */
	create?: Array<ModelTypes["CompanyParentCreateInput"]> | undefined,
	/** Connect multiple existing CompanyParent documents */
	connect?: Array<ModelTypes["CompanyParentWhereUniqueInput"]> | undefined
};
	["CompanyParentCreateOneInlineInput"]: {
	/** Create and connect one CompanyParent document */
	create?: ModelTypes["CompanyParentCreateInput"] | undefined,
	/** Connect one existing CompanyParent document */
	connect?: ModelTypes["CompanyParentWhereUniqueInput"] | undefined
};
	["CompanyParentUpdateInput"]: {
	AboutMe?: ModelTypes["AboutMeUpdateInput"] | undefined
};
	["CompanyParentUpdateManyInlineInput"]: {
	/** Create and connect multiple CompanyParent documents */
	create?: Array<ModelTypes["CompanyParentCreateInput"]> | undefined,
	/** Connect multiple existing CompanyParent documents */
	connect?: Array<ModelTypes["CompanyParentConnectInput"]> | undefined,
	/** Override currently-connected documents with multiple existing CompanyParent documents */
	set?: Array<ModelTypes["CompanyParentWhereUniqueInput"]> | undefined,
	/** Update multiple CompanyParent documents */
	update?: Array<ModelTypes["CompanyParentUpdateWithNestedWhereUniqueInput"]> | undefined,
	/** Upsert multiple CompanyParent documents */
	upsert?: Array<ModelTypes["CompanyParentUpsertWithNestedWhereUniqueInput"]> | undefined,
	/** Disconnect multiple CompanyParent documents */
	disconnect?: Array<ModelTypes["CompanyParentWhereUniqueInput"]> | undefined,
	/** Delete multiple CompanyParent documents */
	delete?: Array<ModelTypes["CompanyParentWhereUniqueInput"]> | undefined
};
	["CompanyParentUpdateManyWithNestedWhereInput"]: {
	AboutMe?: ModelTypes["AboutMeUpdateManyWithNestedWhereInput"] | undefined
};
	["CompanyParentUpdateOneInlineInput"]: {
	/** Create and connect one CompanyParent document */
	create?: ModelTypes["CompanyParentCreateInput"] | undefined,
	/** Update single CompanyParent document */
	update?: ModelTypes["CompanyParentUpdateWithNestedWhereUniqueInput"] | undefined,
	/** Upsert single CompanyParent document */
	upsert?: ModelTypes["CompanyParentUpsertWithNestedWhereUniqueInput"] | undefined,
	/** Connect existing CompanyParent document */
	connect?: ModelTypes["CompanyParentWhereUniqueInput"] | undefined,
	/** Disconnect currently connected CompanyParent document */
	disconnect?: boolean | undefined,
	/** Delete currently connected CompanyParent document */
	delete?: boolean | undefined
};
	["CompanyParentUpdateWithNestedWhereUniqueInput"]: {
	AboutMe?: ModelTypes["AboutMeUpdateWithNestedWhereUniqueInput"] | undefined
};
	["CompanyParentUpsertWithNestedWhereUniqueInput"]: {
	AboutMe?: ModelTypes["AboutMeUpsertWithNestedWhereUniqueInput"] | undefined
};
	["CompanyParentWhereInput"]: {
	AboutMe?: ModelTypes["AboutMeWhereInput"] | undefined
};
	["CompanyParentWhereUniqueInput"]: {
	AboutMe?: ModelTypes["AboutMeWhereUniqueInput"] | undefined
};
	["CompanyUpdateInput"]: {
	companyName?: string | undefined,
	companyWebsite?: string | undefined
};
	["CompanyUpdateManyInlineInput"]: {
	/** Create and connect multiple Company component instances */
	create?: Array<ModelTypes["CompanyCreateWithPositionInput"]> | undefined,
	/** Update multiple Company component instances */
	update?: Array<ModelTypes["CompanyUpdateWithNestedWhereUniqueAndPositionInput"]> | undefined,
	/** Upsert multiple Company component instances */
	upsert?: Array<ModelTypes["CompanyUpsertWithNestedWhereUniqueAndPositionInput"]> | undefined,
	/** Delete multiple Company documents */
	delete?: Array<ModelTypes["CompanyWhereUniqueInput"]> | undefined
};
	["CompanyUpdateManyInput"]: {
	companyName?: string | undefined,
	companyWebsite?: string | undefined
};
	["CompanyUpdateManyWithNestedWhereInput"]: {
	/** Document search */
	where: ModelTypes["CompanyWhereInput"],
	/** Update many input */
	data: ModelTypes["CompanyUpdateManyInput"]
};
	["CompanyUpdateOneInlineInput"]: {
	/** Create and connect one Company document */
	create?: ModelTypes["CompanyCreateInput"] | undefined,
	/** Update single Company document */
	update?: ModelTypes["CompanyUpdateWithNestedWhereUniqueInput"] | undefined,
	/** Upsert single Company document */
	upsert?: ModelTypes["CompanyUpsertWithNestedWhereUniqueInput"] | undefined,
	/** Delete currently connected Company document */
	delete?: boolean | undefined
};
	["CompanyUpdateWithNestedWhereUniqueAndPositionInput"]: {
	/** Unique component instance search */
	where: ModelTypes["CompanyWhereUniqueInput"],
	/** Position in the list of existing component instances, will default to appending at the end of list */
	position?: ModelTypes["ConnectPositionInput"] | undefined,
	/** Document to update */
	data?: ModelTypes["CompanyUpdateInput"] | undefined
};
	["CompanyUpdateWithNestedWhereUniqueInput"]: {
	/** Unique document search */
	where: ModelTypes["CompanyWhereUniqueInput"],
	/** Document to update */
	data: ModelTypes["CompanyUpdateInput"]
};
	["CompanyUpsertInput"]: {
	/** Create document if it didn't exist */
	create: ModelTypes["CompanyCreateInput"],
	/** Update document if it exists */
	update: ModelTypes["CompanyUpdateInput"]
};
	["CompanyUpsertWithNestedWhereUniqueAndPositionInput"]: {
	/** Unique component instance search */
	where: ModelTypes["CompanyWhereUniqueInput"],
	/** Position in the list of existing component instances, will default to appending at the end of list */
	position?: ModelTypes["ConnectPositionInput"] | undefined,
	/** Document to upsert */
	data?: ModelTypes["CompanyUpsertInput"] | undefined
};
	["CompanyUpsertWithNestedWhereUniqueInput"]: {
	/** Unique document search */
	where: ModelTypes["CompanyWhereUniqueInput"],
	/** Upsert data */
	data: ModelTypes["CompanyUpsertInput"]
};
	/** Identifies documents */
["CompanyWhereInput"]: {
	/** Contains search across all appropriate fields. */
	_search?: string | undefined,
	/** Logical AND on all given filters. */
	AND?: Array<ModelTypes["CompanyWhereInput"]> | undefined,
	/** Logical OR on all given filters. */
	OR?: Array<ModelTypes["CompanyWhereInput"]> | undefined,
	/** Logical NOT on all given filters combined by AND. */
	NOT?: Array<ModelTypes["CompanyWhereInput"]> | undefined,
	id?: string | undefined,
	/** All values that are not equal to given value. */
	id_not?: string | undefined,
	/** All values that are contained in given list. */
	id_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	id_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	id_contains?: string | undefined,
	/** All values not containing the given string. */
	id_not_contains?: string | undefined,
	/** All values starting with the given string. */
	id_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	id_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	id_ends_with?: string | undefined,
	/** All values not ending with the given string */
	id_not_ends_with?: string | undefined,
	companyName?: string | undefined,
	/** All values that are not equal to given value. */
	companyName_not?: string | undefined,
	/** All values that are contained in given list. */
	companyName_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	companyName_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	companyName_contains?: string | undefined,
	/** All values not containing the given string. */
	companyName_not_contains?: string | undefined,
	/** All values starting with the given string. */
	companyName_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	companyName_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	companyName_ends_with?: string | undefined,
	/** All values not ending with the given string */
	companyName_not_ends_with?: string | undefined,
	companyWebsite?: string | undefined,
	/** All values that are not equal to given value. */
	companyWebsite_not?: string | undefined,
	/** All values that are contained in given list. */
	companyWebsite_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	companyWebsite_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	companyWebsite_contains?: string | undefined,
	/** All values not containing the given string. */
	companyWebsite_not_contains?: string | undefined,
	/** All values starting with the given string. */
	companyWebsite_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	companyWebsite_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	companyWebsite_ends_with?: string | undefined,
	/** All values not ending with the given string */
	companyWebsite_not_ends_with?: string | undefined
};
	/** References Company record uniquely */
["CompanyWhereUniqueInput"]: {
	id?: string | undefined
};
	["ConnectPositionInput"]: {
	/** Connect document after specified document */
	after?: string | undefined,
	/** Connect document before specified document */
	before?: string | undefined,
	/** Connect document at first position */
	start?: boolean | undefined,
	/** Connect document at last position */
	end?: boolean | undefined
};
	/** A date string, such as 2007-12-03 (YYYY-MM-DD), compliant with ISO 8601 standard for representation of dates using the Gregorian calendar. */
["Date"]:any;
	/** A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the date-timeformat outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representationof dates and times using the Gregorian calendar. */
["DateTime"]:any;
	["DocumentFileTypes"]:DocumentFileTypes;
	["DocumentOutputInput"]: {
	/** Transforms a document into a desired file type.
See this matrix for format support:

PDF:	jpg, odp, ods, odt, png, svg, txt, and webp
DOC:	docx, html, jpg, odt, pdf, png, svg, txt, and webp
DOCX:	doc, html, jpg, odt, pdf, png, svg, txt, and webp
ODT:	doc, docx, html, jpg, pdf, png, svg, txt, and webp
XLS:	jpg, pdf, ods, png, svg, xlsx, and webp
XLSX:	jpg, pdf, ods, png, svg, xls, and webp
ODS:	jpg, pdf, png, xls, svg, xlsx, and webp
PPT:	jpg, odp, pdf, png, svg, pptx, and webp
PPTX:	jpg, odp, pdf, png, svg, ppt, and webp
ODP:	jpg, pdf, png, ppt, svg, pptx, and webp
BMP:	jpg, odp, ods, odt, pdf, png, svg, and webp
GIF:	jpg, odp, ods, odt, pdf, png, svg, and webp
JPG:	jpg, odp, ods, odt, pdf, png, svg, and webp
PNG:	jpg, odp, ods, odt, pdf, png, svg, and webp
WEBP:	jpg, odp, ods, odt, pdf, png, svg, and webp
TIFF:	jpg, odp, ods, odt, pdf, png, svg, and webp
AI:	    jpg, odp, ods, odt, pdf, png, svg, and webp
PSD:	jpg, odp, ods, odt, pdf, png, svg, and webp
SVG:	jpg, odp, ods, odt, pdf, png, and webp
HTML:	jpg, odt, pdf, svg, txt, and webp
TXT:	jpg, html, odt, pdf, svg, and webp */
	format?: ModelTypes["DocumentFileTypes"] | undefined
};
	/** Transformations for Documents */
["DocumentTransformationInput"]: {
	/** Changes the output for the file. */
	output?: ModelTypes["DocumentOutputInput"] | undefined
};
	["DocumentVersion"]: {
		id: string,
	stage: ModelTypes["Stage"],
	revision: number,
	createdAt: ModelTypes["DateTime"],
	data?: ModelTypes["Json"] | undefined
};
	["Hex"]:any;
	["ImageFit"]:ImageFit;
	["ImageResizeInput"]: {
	/** The width in pixels to resize the image to. The value must be an integer from 1 to 10000. */
	width?: number | undefined,
	/** The height in pixels to resize the image to. The value must be an integer from 1 to 10000. */
	height?: number | undefined,
	/** The default value for the fit parameter is fit:clip. */
	fit?: ModelTypes["ImageFit"] | undefined
};
	/** Transformations for Images */
["ImageTransformationInput"]: {
	/** Resizes the image */
	resize?: ModelTypes["ImageResizeInput"] | undefined
};
	/** Raw JSON value */
["Json"]:any;
	["Link"]: {
		/** System stage field */
	stage: ModelTypes["Stage"],
	/** The unique identifier */
	id: string,
	name: string,
	url: string,
	icon?: ModelTypes["Asset"] | undefined
};
	["LinkConnectInput"]: {
	/** Document to connect */
	where: ModelTypes["LinkWhereUniqueInput"],
	/** Allow to specify document position in list of connected documents, will default to appending at end of list */
	position?: ModelTypes["ConnectPositionInput"] | undefined
};
	/** A connection to a list of items. */
["LinkConnection"]: {
		/** Information to aid in pagination. */
	pageInfo: ModelTypes["PageInfo"],
	/** A list of edges. */
	edges: Array<ModelTypes["LinkEdge"]>,
	aggregate: ModelTypes["Aggregate"]
};
	["LinkCreateInput"]: {
	name: string,
	url: string,
	icon?: ModelTypes["AssetCreateOneInlineInput"] | undefined
};
	["LinkCreateManyInlineInput"]: {
	/** Create and connect multiple existing Link documents */
	create?: Array<ModelTypes["LinkCreateInput"]> | undefined
};
	["LinkCreateOneInlineInput"]: {
	/** Create and connect one Link document */
	create?: ModelTypes["LinkCreateInput"] | undefined
};
	["LinkCreateWithPositionInput"]: {
	/** Position in the list of existing component instances, will default to appending at the end of list */
	position?: ModelTypes["ConnectPositionInput"] | undefined,
	/** Document to create */
	data: ModelTypes["LinkCreateInput"]
};
	/** An edge in a connection. */
["LinkEdge"]: {
		/** The item at the end of the edge. */
	node: ModelTypes["Link"],
	/** A cursor for use in pagination. */
	cursor: string
};
	/** Identifies documents */
["LinkManyWhereInput"]: {
	/** Contains search across all appropriate fields. */
	_search?: string | undefined,
	/** Logical AND on all given filters. */
	AND?: Array<ModelTypes["LinkWhereInput"]> | undefined,
	/** Logical OR on all given filters. */
	OR?: Array<ModelTypes["LinkWhereInput"]> | undefined,
	/** Logical NOT on all given filters combined by AND. */
	NOT?: Array<ModelTypes["LinkWhereInput"]> | undefined,
	id?: string | undefined,
	/** All values that are not equal to given value. */
	id_not?: string | undefined,
	/** All values that are contained in given list. */
	id_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	id_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	id_contains?: string | undefined,
	/** All values not containing the given string. */
	id_not_contains?: string | undefined,
	/** All values starting with the given string. */
	id_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	id_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	id_ends_with?: string | undefined,
	/** All values not ending with the given string */
	id_not_ends_with?: string | undefined,
	name?: string | undefined,
	/** All values that are not equal to given value. */
	name_not?: string | undefined,
	/** All values that are contained in given list. */
	name_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	name_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	name_contains?: string | undefined,
	/** All values not containing the given string. */
	name_not_contains?: string | undefined,
	/** All values starting with the given string. */
	name_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	name_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	name_ends_with?: string | undefined,
	/** All values not ending with the given string */
	name_not_ends_with?: string | undefined,
	url?: string | undefined,
	/** All values that are not equal to given value. */
	url_not?: string | undefined,
	/** All values that are contained in given list. */
	url_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	url_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	url_contains?: string | undefined,
	/** All values not containing the given string. */
	url_not_contains?: string | undefined,
	/** All values starting with the given string. */
	url_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	url_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	url_ends_with?: string | undefined,
	/** All values not ending with the given string */
	url_not_ends_with?: string | undefined,
	icon?: ModelTypes["AssetWhereInput"] | undefined
};
	["LinkOrderByInput"]:LinkOrderByInput;
	["LinkParent"]:ModelTypes["AboutMe"];
	["LinkParentConnectInput"]: {
	AboutMe?: ModelTypes["AboutMeConnectInput"] | undefined
};
	["LinkParentCreateInput"]: {
	AboutMe?: ModelTypes["AboutMeCreateInput"] | undefined
};
	["LinkParentCreateManyInlineInput"]: {
	/** Create and connect multiple existing LinkParent documents */
	create?: Array<ModelTypes["LinkParentCreateInput"]> | undefined,
	/** Connect multiple existing LinkParent documents */
	connect?: Array<ModelTypes["LinkParentWhereUniqueInput"]> | undefined
};
	["LinkParentCreateOneInlineInput"]: {
	/** Create and connect one LinkParent document */
	create?: ModelTypes["LinkParentCreateInput"] | undefined,
	/** Connect one existing LinkParent document */
	connect?: ModelTypes["LinkParentWhereUniqueInput"] | undefined
};
	["LinkParentUpdateInput"]: {
	AboutMe?: ModelTypes["AboutMeUpdateInput"] | undefined
};
	["LinkParentUpdateManyInlineInput"]: {
	/** Create and connect multiple LinkParent documents */
	create?: Array<ModelTypes["LinkParentCreateInput"]> | undefined,
	/** Connect multiple existing LinkParent documents */
	connect?: Array<ModelTypes["LinkParentConnectInput"]> | undefined,
	/** Override currently-connected documents with multiple existing LinkParent documents */
	set?: Array<ModelTypes["LinkParentWhereUniqueInput"]> | undefined,
	/** Update multiple LinkParent documents */
	update?: Array<ModelTypes["LinkParentUpdateWithNestedWhereUniqueInput"]> | undefined,
	/** Upsert multiple LinkParent documents */
	upsert?: Array<ModelTypes["LinkParentUpsertWithNestedWhereUniqueInput"]> | undefined,
	/** Disconnect multiple LinkParent documents */
	disconnect?: Array<ModelTypes["LinkParentWhereUniqueInput"]> | undefined,
	/** Delete multiple LinkParent documents */
	delete?: Array<ModelTypes["LinkParentWhereUniqueInput"]> | undefined
};
	["LinkParentUpdateManyWithNestedWhereInput"]: {
	AboutMe?: ModelTypes["AboutMeUpdateManyWithNestedWhereInput"] | undefined
};
	["LinkParentUpdateOneInlineInput"]: {
	/** Create and connect one LinkParent document */
	create?: ModelTypes["LinkParentCreateInput"] | undefined,
	/** Update single LinkParent document */
	update?: ModelTypes["LinkParentUpdateWithNestedWhereUniqueInput"] | undefined,
	/** Upsert single LinkParent document */
	upsert?: ModelTypes["LinkParentUpsertWithNestedWhereUniqueInput"] | undefined,
	/** Connect existing LinkParent document */
	connect?: ModelTypes["LinkParentWhereUniqueInput"] | undefined,
	/** Disconnect currently connected LinkParent document */
	disconnect?: boolean | undefined,
	/** Delete currently connected LinkParent document */
	delete?: boolean | undefined
};
	["LinkParentUpdateWithNestedWhereUniqueInput"]: {
	AboutMe?: ModelTypes["AboutMeUpdateWithNestedWhereUniqueInput"] | undefined
};
	["LinkParentUpsertWithNestedWhereUniqueInput"]: {
	AboutMe?: ModelTypes["AboutMeUpsertWithNestedWhereUniqueInput"] | undefined
};
	["LinkParentWhereInput"]: {
	AboutMe?: ModelTypes["AboutMeWhereInput"] | undefined
};
	["LinkParentWhereUniqueInput"]: {
	AboutMe?: ModelTypes["AboutMeWhereUniqueInput"] | undefined
};
	["LinkUpdateInput"]: {
	name?: string | undefined,
	url?: string | undefined,
	icon?: ModelTypes["AssetUpdateOneInlineInput"] | undefined
};
	["LinkUpdateManyInlineInput"]: {
	/** Create and connect multiple Link component instances */
	create?: Array<ModelTypes["LinkCreateWithPositionInput"]> | undefined,
	/** Update multiple Link component instances */
	update?: Array<ModelTypes["LinkUpdateWithNestedWhereUniqueAndPositionInput"]> | undefined,
	/** Upsert multiple Link component instances */
	upsert?: Array<ModelTypes["LinkUpsertWithNestedWhereUniqueAndPositionInput"]> | undefined,
	/** Delete multiple Link documents */
	delete?: Array<ModelTypes["LinkWhereUniqueInput"]> | undefined
};
	["LinkUpdateManyInput"]: {
	url?: string | undefined
};
	["LinkUpdateManyWithNestedWhereInput"]: {
	/** Document search */
	where: ModelTypes["LinkWhereInput"],
	/** Update many input */
	data: ModelTypes["LinkUpdateManyInput"]
};
	["LinkUpdateOneInlineInput"]: {
	/** Create and connect one Link document */
	create?: ModelTypes["LinkCreateInput"] | undefined,
	/** Update single Link document */
	update?: ModelTypes["LinkUpdateWithNestedWhereUniqueInput"] | undefined,
	/** Upsert single Link document */
	upsert?: ModelTypes["LinkUpsertWithNestedWhereUniqueInput"] | undefined,
	/** Delete currently connected Link document */
	delete?: boolean | undefined
};
	["LinkUpdateWithNestedWhereUniqueAndPositionInput"]: {
	/** Unique component instance search */
	where: ModelTypes["LinkWhereUniqueInput"],
	/** Position in the list of existing component instances, will default to appending at the end of list */
	position?: ModelTypes["ConnectPositionInput"] | undefined,
	/** Document to update */
	data?: ModelTypes["LinkUpdateInput"] | undefined
};
	["LinkUpdateWithNestedWhereUniqueInput"]: {
	/** Unique document search */
	where: ModelTypes["LinkWhereUniqueInput"],
	/** Document to update */
	data: ModelTypes["LinkUpdateInput"]
};
	["LinkUpsertInput"]: {
	/** Create document if it didn't exist */
	create: ModelTypes["LinkCreateInput"],
	/** Update document if it exists */
	update: ModelTypes["LinkUpdateInput"]
};
	["LinkUpsertWithNestedWhereUniqueAndPositionInput"]: {
	/** Unique component instance search */
	where: ModelTypes["LinkWhereUniqueInput"],
	/** Position in the list of existing component instances, will default to appending at the end of list */
	position?: ModelTypes["ConnectPositionInput"] | undefined,
	/** Document to upsert */
	data?: ModelTypes["LinkUpsertInput"] | undefined
};
	["LinkUpsertWithNestedWhereUniqueInput"]: {
	/** Unique document search */
	where: ModelTypes["LinkWhereUniqueInput"],
	/** Upsert data */
	data: ModelTypes["LinkUpsertInput"]
};
	/** Identifies documents */
["LinkWhereInput"]: {
	/** Contains search across all appropriate fields. */
	_search?: string | undefined,
	/** Logical AND on all given filters. */
	AND?: Array<ModelTypes["LinkWhereInput"]> | undefined,
	/** Logical OR on all given filters. */
	OR?: Array<ModelTypes["LinkWhereInput"]> | undefined,
	/** Logical NOT on all given filters combined by AND. */
	NOT?: Array<ModelTypes["LinkWhereInput"]> | undefined,
	id?: string | undefined,
	/** All values that are not equal to given value. */
	id_not?: string | undefined,
	/** All values that are contained in given list. */
	id_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	id_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	id_contains?: string | undefined,
	/** All values not containing the given string. */
	id_not_contains?: string | undefined,
	/** All values starting with the given string. */
	id_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	id_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	id_ends_with?: string | undefined,
	/** All values not ending with the given string */
	id_not_ends_with?: string | undefined,
	name?: string | undefined,
	/** All values that are not equal to given value. */
	name_not?: string | undefined,
	/** All values that are contained in given list. */
	name_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	name_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	name_contains?: string | undefined,
	/** All values not containing the given string. */
	name_not_contains?: string | undefined,
	/** All values starting with the given string. */
	name_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	name_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	name_ends_with?: string | undefined,
	/** All values not ending with the given string */
	name_not_ends_with?: string | undefined,
	url?: string | undefined,
	/** All values that are not equal to given value. */
	url_not?: string | undefined,
	/** All values that are contained in given list. */
	url_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	url_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	url_contains?: string | undefined,
	/** All values not containing the given string. */
	url_not_contains?: string | undefined,
	/** All values starting with the given string. */
	url_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	url_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	url_ends_with?: string | undefined,
	/** All values not ending with the given string */
	url_not_ends_with?: string | undefined,
	icon?: ModelTypes["AssetWhereInput"] | undefined
};
	/** References Link record uniquely */
["LinkWhereUniqueInput"]: {
	id?: string | undefined,
	name?: string | undefined
};
	["Locale"]:Locale;
	/** Representing a geolocation point with latitude and longitude */
["Location"]: {
		latitude: number,
	longitude: number,
	distance: number
};
	/** Input for a geolocation point with latitude and longitude */
["LocationInput"]: {
	latitude: number,
	longitude: number
};
	/** The Long scalar type represents non-fractional signed whole numeric values. Long can represent values between -(2^63) and 2^63 - 1. */
["Long"]:any;
	["Mutation"]: {
		/** Create one asset */
	createAsset?: ModelTypes["Asset"] | undefined,
	/** Update one asset */
	updateAsset?: ModelTypes["Asset"] | undefined,
	/** Delete one asset from _all_ existing stages. Returns deleted document. */
	deleteAsset?: ModelTypes["Asset"] | undefined,
	/** Upsert one asset */
	upsertAsset?: ModelTypes["Asset"] | undefined,
	/** Publish one asset */
	publishAsset?: ModelTypes["Asset"] | undefined,
	/** Unpublish one asset from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only. */
	unpublishAsset?: ModelTypes["Asset"] | undefined,
	/** Update many Asset documents */
	updateManyAssetsConnection: ModelTypes["AssetConnection"],
	/** Delete many Asset documents, return deleted documents */
	deleteManyAssetsConnection: ModelTypes["AssetConnection"],
	/** Publish many Asset documents */
	publishManyAssetsConnection: ModelTypes["AssetConnection"],
	/** Find many Asset documents that match criteria in specified stage and unpublish from target stages */
	unpublishManyAssetsConnection: ModelTypes["AssetConnection"],
	/** Update many assets */
	updateManyAssets: ModelTypes["BatchPayload"],
	/** Delete many Asset documents */
	deleteManyAssets: ModelTypes["BatchPayload"],
	/** Publish many Asset documents */
	publishManyAssets: ModelTypes["BatchPayload"],
	/** Unpublish many Asset documents */
	unpublishManyAssets: ModelTypes["BatchPayload"],
	/** Schedule to publish one asset */
	schedulePublishAsset?: ModelTypes["Asset"] | undefined,
	/** Unpublish one asset from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only. */
	scheduleUnpublishAsset?: ModelTypes["Asset"] | undefined,
	/** Delete and return scheduled operation */
	deleteScheduledOperation?: ModelTypes["ScheduledOperation"] | undefined,
	/** Create one scheduledRelease */
	createScheduledRelease?: ModelTypes["ScheduledRelease"] | undefined,
	/** Update one scheduledRelease */
	updateScheduledRelease?: ModelTypes["ScheduledRelease"] | undefined,
	/** Delete one scheduledRelease from _all_ existing stages. Returns deleted document. */
	deleteScheduledRelease?: ModelTypes["ScheduledRelease"] | undefined,
	/** Create one project */
	createProject?: ModelTypes["Project"] | undefined,
	/** Update one project */
	updateProject?: ModelTypes["Project"] | undefined,
	/** Delete one project from _all_ existing stages. Returns deleted document. */
	deleteProject?: ModelTypes["Project"] | undefined,
	/** Upsert one project */
	upsertProject?: ModelTypes["Project"] | undefined,
	/** Publish one project */
	publishProject?: ModelTypes["Project"] | undefined,
	/** Unpublish one project from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only. */
	unpublishProject?: ModelTypes["Project"] | undefined,
	/** Update many Project documents */
	updateManyProjectsConnection: ModelTypes["ProjectConnection"],
	/** Delete many Project documents, return deleted documents */
	deleteManyProjectsConnection: ModelTypes["ProjectConnection"],
	/** Publish many Project documents */
	publishManyProjectsConnection: ModelTypes["ProjectConnection"],
	/** Find many Project documents that match criteria in specified stage and unpublish from target stages */
	unpublishManyProjectsConnection: ModelTypes["ProjectConnection"],
	/** Update many projects */
	updateManyProjects: ModelTypes["BatchPayload"],
	/** Delete many Project documents */
	deleteManyProjects: ModelTypes["BatchPayload"],
	/** Publish many Project documents */
	publishManyProjects: ModelTypes["BatchPayload"],
	/** Unpublish many Project documents */
	unpublishManyProjects: ModelTypes["BatchPayload"],
	/** Schedule to publish one project */
	schedulePublishProject?: ModelTypes["Project"] | undefined,
	/** Unpublish one project from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only. */
	scheduleUnpublishProject?: ModelTypes["Project"] | undefined,
	/** Create one seo */
	createSeo?: ModelTypes["Seo"] | undefined,
	/** Update one seo */
	updateSeo?: ModelTypes["Seo"] | undefined,
	/** Delete one seo from _all_ existing stages. Returns deleted document. */
	deleteSeo?: ModelTypes["Seo"] | undefined,
	/** Upsert one seo */
	upsertSeo?: ModelTypes["Seo"] | undefined,
	/** Publish one seo */
	publishSeo?: ModelTypes["Seo"] | undefined,
	/** Unpublish one seo from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only. */
	unpublishSeo?: ModelTypes["Seo"] | undefined,
	/** Update many Seo documents */
	updateManySeosConnection: ModelTypes["SeoConnection"],
	/** Delete many Seo documents, return deleted documents */
	deleteManySeosConnection: ModelTypes["SeoConnection"],
	/** Publish many Seo documents */
	publishManySeosConnection: ModelTypes["SeoConnection"],
	/** Find many Seo documents that match criteria in specified stage and unpublish from target stages */
	unpublishManySeosConnection: ModelTypes["SeoConnection"],
	/** Update many seos */
	updateManySeos: ModelTypes["BatchPayload"],
	/** Delete many Seo documents */
	deleteManySeos: ModelTypes["BatchPayload"],
	/** Publish many Seo documents */
	publishManySeos: ModelTypes["BatchPayload"],
	/** Unpublish many Seo documents */
	unpublishManySeos: ModelTypes["BatchPayload"],
	/** Schedule to publish one seo */
	schedulePublishSeo?: ModelTypes["Seo"] | undefined,
	/** Unpublish one seo from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only. */
	scheduleUnpublishSeo?: ModelTypes["Seo"] | undefined,
	/** Create one aboutMe */
	createAboutMe?: ModelTypes["AboutMe"] | undefined,
	/** Update one aboutMe */
	updateAboutMe?: ModelTypes["AboutMe"] | undefined,
	/** Delete one aboutMe from _all_ existing stages. Returns deleted document. */
	deleteAboutMe?: ModelTypes["AboutMe"] | undefined,
	/** Upsert one aboutMe */
	upsertAboutMe?: ModelTypes["AboutMe"] | undefined,
	/** Publish one aboutMe */
	publishAboutMe?: ModelTypes["AboutMe"] | undefined,
	/** Unpublish one aboutMe from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only. */
	unpublishAboutMe?: ModelTypes["AboutMe"] | undefined,
	/** Update many AboutMe documents */
	updateManyAboutMesConnection: ModelTypes["AboutMeConnection"],
	/** Delete many AboutMe documents, return deleted documents */
	deleteManyAboutMesConnection: ModelTypes["AboutMeConnection"],
	/** Publish many AboutMe documents */
	publishManyAboutMesConnection: ModelTypes["AboutMeConnection"],
	/** Find many AboutMe documents that match criteria in specified stage and unpublish from target stages */
	unpublishManyAboutMesConnection: ModelTypes["AboutMeConnection"],
	/** Update many aboutMes */
	updateManyAboutMes: ModelTypes["BatchPayload"],
	/** Delete many AboutMe documents */
	deleteManyAboutMes: ModelTypes["BatchPayload"],
	/** Publish many AboutMe documents */
	publishManyAboutMes: ModelTypes["BatchPayload"],
	/** Unpublish many AboutMe documents */
	unpublishManyAboutMes: ModelTypes["BatchPayload"],
	/** Schedule to publish one aboutMe */
	schedulePublishAboutMe?: ModelTypes["AboutMe"] | undefined,
	/** Unpublish one aboutMe from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only. */
	scheduleUnpublishAboutMe?: ModelTypes["AboutMe"] | undefined,
	/** Create one skillCategory */
	createSkillCategory?: ModelTypes["SkillCategory"] | undefined,
	/** Update one skillCategory */
	updateSkillCategory?: ModelTypes["SkillCategory"] | undefined,
	/** Delete one skillCategory from _all_ existing stages. Returns deleted document. */
	deleteSkillCategory?: ModelTypes["SkillCategory"] | undefined,
	/** Upsert one skillCategory */
	upsertSkillCategory?: ModelTypes["SkillCategory"] | undefined,
	/** Publish one skillCategory */
	publishSkillCategory?: ModelTypes["SkillCategory"] | undefined,
	/** Unpublish one skillCategory from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only. */
	unpublishSkillCategory?: ModelTypes["SkillCategory"] | undefined,
	/** Update many SkillCategory documents */
	updateManySkillCategoriesConnection: ModelTypes["SkillCategoryConnection"],
	/** Delete many SkillCategory documents, return deleted documents */
	deleteManySkillCategoriesConnection: ModelTypes["SkillCategoryConnection"],
	/** Publish many SkillCategory documents */
	publishManySkillCategoriesConnection: ModelTypes["SkillCategoryConnection"],
	/** Find many SkillCategory documents that match criteria in specified stage and unpublish from target stages */
	unpublishManySkillCategoriesConnection: ModelTypes["SkillCategoryConnection"],
	/** Update many skillCategories */
	updateManySkillCategories: ModelTypes["BatchPayload"],
	/** Delete many SkillCategory documents */
	deleteManySkillCategories: ModelTypes["BatchPayload"],
	/** Publish many SkillCategory documents */
	publishManySkillCategories: ModelTypes["BatchPayload"],
	/** Unpublish many SkillCategory documents */
	unpublishManySkillCategories: ModelTypes["BatchPayload"],
	/** Schedule to publish one skillCategory */
	schedulePublishSkillCategory?: ModelTypes["SkillCategory"] | undefined,
	/** Unpublish one skillCategory from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only. */
	scheduleUnpublishSkillCategory?: ModelTypes["SkillCategory"] | undefined
};
	/** An object with an ID */
["Node"]: ModelTypes["AboutMe"] | ModelTypes["Asset"] | ModelTypes["Project"] | ModelTypes["ScheduledOperation"] | ModelTypes["ScheduledRelease"] | ModelTypes["Seo"] | ModelTypes["SkillCategory"] | ModelTypes["User"];
	/** Information about pagination in a connection. */
["PageInfo"]: {
		/** When paginating forwards, are there more items? */
	hasNextPage: boolean,
	/** When paginating backwards, are there more items? */
	hasPreviousPage: boolean,
	/** When paginating backwards, the cursor to continue. */
	startCursor?: string | undefined,
	/** When paginating forwards, the cursor to continue. */
	endCursor?: string | undefined,
	/** Number of items in the current page. */
	pageSize?: number | undefined
};
	["Project"]: {
		/** System stage field */
	stage: ModelTypes["Stage"],
	/** Get the document in other stages */
	documentInStages: Array<ModelTypes["Project"]>,
	/** The time the document was published. Null on documents in draft stage. */
	publishedAt?: ModelTypes["DateTime"] | undefined,
	/** The time the document was updated */
	updatedAt: ModelTypes["DateTime"],
	/** The time the document was created */
	createdAt: ModelTypes["DateTime"],
	/** The unique identifier */
	id: string,
	name: string,
	description: string,
	demo?: string | undefined,
	sourceCode?: string | undefined,
	/** User that last published this document */
	publishedBy?: ModelTypes["User"] | undefined,
	/** User that last updated this document */
	updatedBy?: ModelTypes["User"] | undefined,
	/** User that created this document */
	createdBy?: ModelTypes["User"] | undefined,
	/** Add one or more images of the project  */
	image: Array<ModelTypes["Asset"]>,
	/** Tech stack for project */
	stack: Array<ModelTypes["Technologies"]>,
	scheduledIn: Array<ModelTypes["ScheduledOperation"]>,
	/** List of Project versions */
	history: Array<ModelTypes["Version"]>
};
	["ProjectConnectInput"]: {
	/** Document to connect */
	where: ModelTypes["ProjectWhereUniqueInput"],
	/** Allow to specify document position in list of connected documents, will default to appending at end of list */
	position?: ModelTypes["ConnectPositionInput"] | undefined
};
	/** A connection to a list of items. */
["ProjectConnection"]: {
		/** Information to aid in pagination. */
	pageInfo: ModelTypes["PageInfo"],
	/** A list of edges. */
	edges: Array<ModelTypes["ProjectEdge"]>,
	aggregate: ModelTypes["Aggregate"]
};
	["ProjectCreateInput"]: {
	updatedAt?: ModelTypes["DateTime"] | undefined,
	createdAt?: ModelTypes["DateTime"] | undefined,
	name: string,
	description: string,
	demo?: string | undefined,
	sourceCode?: string | undefined,
	image: ModelTypes["AssetCreateManyInlineInput"],
	stack?: Array<ModelTypes["Technologies"]> | undefined
};
	["ProjectCreateManyInlineInput"]: {
	/** Create and connect multiple existing Project documents */
	create?: Array<ModelTypes["ProjectCreateInput"]> | undefined,
	/** Connect multiple existing Project documents */
	connect?: Array<ModelTypes["ProjectWhereUniqueInput"]> | undefined
};
	["ProjectCreateOneInlineInput"]: {
	/** Create and connect one Project document */
	create?: ModelTypes["ProjectCreateInput"] | undefined,
	/** Connect one existing Project document */
	connect?: ModelTypes["ProjectWhereUniqueInput"] | undefined
};
	/** An edge in a connection. */
["ProjectEdge"]: {
		/** The item at the end of the edge. */
	node: ModelTypes["Project"],
	/** A cursor for use in pagination. */
	cursor: string
};
	/** Identifies documents */
["ProjectManyWhereInput"]: {
	/** Contains search across all appropriate fields. */
	_search?: string | undefined,
	/** Logical AND on all given filters. */
	AND?: Array<ModelTypes["ProjectWhereInput"]> | undefined,
	/** Logical OR on all given filters. */
	OR?: Array<ModelTypes["ProjectWhereInput"]> | undefined,
	/** Logical NOT on all given filters combined by AND. */
	NOT?: Array<ModelTypes["ProjectWhereInput"]> | undefined,
	publishedAt?: ModelTypes["DateTime"] | undefined,
	/** All values that are not equal to given value. */
	publishedAt_not?: ModelTypes["DateTime"] | undefined,
	/** All values that are contained in given list. */
	publishedAt_in?: Array<ModelTypes["DateTime"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	publishedAt_not_in?: Array<ModelTypes["DateTime"] | undefined> | undefined,
	/** All values less than the given value. */
	publishedAt_lt?: ModelTypes["DateTime"] | undefined,
	/** All values less than or equal the given value. */
	publishedAt_lte?: ModelTypes["DateTime"] | undefined,
	/** All values greater than the given value. */
	publishedAt_gt?: ModelTypes["DateTime"] | undefined,
	/** All values greater than or equal the given value. */
	publishedAt_gte?: ModelTypes["DateTime"] | undefined,
	updatedAt?: ModelTypes["DateTime"] | undefined,
	/** All values that are not equal to given value. */
	updatedAt_not?: ModelTypes["DateTime"] | undefined,
	/** All values that are contained in given list. */
	updatedAt_in?: Array<ModelTypes["DateTime"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	updatedAt_not_in?: Array<ModelTypes["DateTime"] | undefined> | undefined,
	/** All values less than the given value. */
	updatedAt_lt?: ModelTypes["DateTime"] | undefined,
	/** All values less than or equal the given value. */
	updatedAt_lte?: ModelTypes["DateTime"] | undefined,
	/** All values greater than the given value. */
	updatedAt_gt?: ModelTypes["DateTime"] | undefined,
	/** All values greater than or equal the given value. */
	updatedAt_gte?: ModelTypes["DateTime"] | undefined,
	createdAt?: ModelTypes["DateTime"] | undefined,
	/** All values that are not equal to given value. */
	createdAt_not?: ModelTypes["DateTime"] | undefined,
	/** All values that are contained in given list. */
	createdAt_in?: Array<ModelTypes["DateTime"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	createdAt_not_in?: Array<ModelTypes["DateTime"] | undefined> | undefined,
	/** All values less than the given value. */
	createdAt_lt?: ModelTypes["DateTime"] | undefined,
	/** All values less than or equal the given value. */
	createdAt_lte?: ModelTypes["DateTime"] | undefined,
	/** All values greater than the given value. */
	createdAt_gt?: ModelTypes["DateTime"] | undefined,
	/** All values greater than or equal the given value. */
	createdAt_gte?: ModelTypes["DateTime"] | undefined,
	id?: string | undefined,
	/** All values that are not equal to given value. */
	id_not?: string | undefined,
	/** All values that are contained in given list. */
	id_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	id_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	id_contains?: string | undefined,
	/** All values not containing the given string. */
	id_not_contains?: string | undefined,
	/** All values starting with the given string. */
	id_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	id_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	id_ends_with?: string | undefined,
	/** All values not ending with the given string */
	id_not_ends_with?: string | undefined,
	name?: string | undefined,
	/** All values that are not equal to given value. */
	name_not?: string | undefined,
	/** All values that are contained in given list. */
	name_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	name_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	name_contains?: string | undefined,
	/** All values not containing the given string. */
	name_not_contains?: string | undefined,
	/** All values starting with the given string. */
	name_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	name_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	name_ends_with?: string | undefined,
	/** All values not ending with the given string */
	name_not_ends_with?: string | undefined,
	description?: string | undefined,
	/** All values that are not equal to given value. */
	description_not?: string | undefined,
	/** All values that are contained in given list. */
	description_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	description_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	description_contains?: string | undefined,
	/** All values not containing the given string. */
	description_not_contains?: string | undefined,
	/** All values starting with the given string. */
	description_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	description_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	description_ends_with?: string | undefined,
	/** All values not ending with the given string */
	description_not_ends_with?: string | undefined,
	demo?: string | undefined,
	/** All values that are not equal to given value. */
	demo_not?: string | undefined,
	/** All values that are contained in given list. */
	demo_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	demo_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	demo_contains?: string | undefined,
	/** All values not containing the given string. */
	demo_not_contains?: string | undefined,
	/** All values starting with the given string. */
	demo_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	demo_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	demo_ends_with?: string | undefined,
	/** All values not ending with the given string */
	demo_not_ends_with?: string | undefined,
	sourceCode?: string | undefined,
	/** All values that are not equal to given value. */
	sourceCode_not?: string | undefined,
	/** All values that are contained in given list. */
	sourceCode_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	sourceCode_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	sourceCode_contains?: string | undefined,
	/** All values not containing the given string. */
	sourceCode_not_contains?: string | undefined,
	/** All values starting with the given string. */
	sourceCode_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	sourceCode_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	sourceCode_ends_with?: string | undefined,
	/** All values not ending with the given string */
	sourceCode_not_ends_with?: string | undefined,
	publishedBy?: ModelTypes["UserWhereInput"] | undefined,
	updatedBy?: ModelTypes["UserWhereInput"] | undefined,
	createdBy?: ModelTypes["UserWhereInput"] | undefined,
	image_every?: ModelTypes["AssetWhereInput"] | undefined,
	image_some?: ModelTypes["AssetWhereInput"] | undefined,
	image_none?: ModelTypes["AssetWhereInput"] | undefined,
	/** Matches if the field array contains *all* items provided to the filter and order does match */
	stack?: Array<ModelTypes["Technologies"]> | undefined,
	/** Matches if the field array does not contains *all* items provided to the filter or order does not match */
	stack_not?: Array<ModelTypes["Technologies"]> | undefined,
	/** Matches if the field array contains *all* items provided to the filter */
	stack_contains_all?: Array<ModelTypes["Technologies"]> | undefined,
	/** Matches if the field array contains at least one item provided to the filter */
	stack_contains_some?: Array<ModelTypes["Technologies"]> | undefined,
	/** Matches if the field array does not contain any of the items provided to the filter */
	stack_contains_none?: Array<ModelTypes["Technologies"]> | undefined,
	scheduledIn_every?: ModelTypes["ScheduledOperationWhereInput"] | undefined,
	scheduledIn_some?: ModelTypes["ScheduledOperationWhereInput"] | undefined,
	scheduledIn_none?: ModelTypes["ScheduledOperationWhereInput"] | undefined
};
	["ProjectOrderByInput"]:ProjectOrderByInput;
	["ProjectUpdateInput"]: {
	name?: string | undefined,
	description?: string | undefined,
	demo?: string | undefined,
	sourceCode?: string | undefined,
	image?: ModelTypes["AssetUpdateManyInlineInput"] | undefined,
	stack?: Array<ModelTypes["Technologies"]> | undefined
};
	["ProjectUpdateManyInlineInput"]: {
	/** Create and connect multiple Project documents */
	create?: Array<ModelTypes["ProjectCreateInput"]> | undefined,
	/** Connect multiple existing Project documents */
	connect?: Array<ModelTypes["ProjectConnectInput"]> | undefined,
	/** Override currently-connected documents with multiple existing Project documents */
	set?: Array<ModelTypes["ProjectWhereUniqueInput"]> | undefined,
	/** Update multiple Project documents */
	update?: Array<ModelTypes["ProjectUpdateWithNestedWhereUniqueInput"]> | undefined,
	/** Upsert multiple Project documents */
	upsert?: Array<ModelTypes["ProjectUpsertWithNestedWhereUniqueInput"]> | undefined,
	/** Disconnect multiple Project documents */
	disconnect?: Array<ModelTypes["ProjectWhereUniqueInput"]> | undefined,
	/** Delete multiple Project documents */
	delete?: Array<ModelTypes["ProjectWhereUniqueInput"]> | undefined
};
	["ProjectUpdateManyInput"]: {
	description?: string | undefined,
	demo?: string | undefined,
	sourceCode?: string | undefined,
	stack?: Array<ModelTypes["Technologies"]> | undefined
};
	["ProjectUpdateManyWithNestedWhereInput"]: {
	/** Document search */
	where: ModelTypes["ProjectWhereInput"],
	/** Update many input */
	data: ModelTypes["ProjectUpdateManyInput"]
};
	["ProjectUpdateOneInlineInput"]: {
	/** Create and connect one Project document */
	create?: ModelTypes["ProjectCreateInput"] | undefined,
	/** Update single Project document */
	update?: ModelTypes["ProjectUpdateWithNestedWhereUniqueInput"] | undefined,
	/** Upsert single Project document */
	upsert?: ModelTypes["ProjectUpsertWithNestedWhereUniqueInput"] | undefined,
	/** Connect existing Project document */
	connect?: ModelTypes["ProjectWhereUniqueInput"] | undefined,
	/** Disconnect currently connected Project document */
	disconnect?: boolean | undefined,
	/** Delete currently connected Project document */
	delete?: boolean | undefined
};
	["ProjectUpdateWithNestedWhereUniqueInput"]: {
	/** Unique document search */
	where: ModelTypes["ProjectWhereUniqueInput"],
	/** Document to update */
	data: ModelTypes["ProjectUpdateInput"]
};
	["ProjectUpsertInput"]: {
	/** Create document if it didn't exist */
	create: ModelTypes["ProjectCreateInput"],
	/** Update document if it exists */
	update: ModelTypes["ProjectUpdateInput"]
};
	["ProjectUpsertWithNestedWhereUniqueInput"]: {
	/** Unique document search */
	where: ModelTypes["ProjectWhereUniqueInput"],
	/** Upsert data */
	data: ModelTypes["ProjectUpsertInput"]
};
	/** Identifies documents */
["ProjectWhereInput"]: {
	/** Contains search across all appropriate fields. */
	_search?: string | undefined,
	/** Logical AND on all given filters. */
	AND?: Array<ModelTypes["ProjectWhereInput"]> | undefined,
	/** Logical OR on all given filters. */
	OR?: Array<ModelTypes["ProjectWhereInput"]> | undefined,
	/** Logical NOT on all given filters combined by AND. */
	NOT?: Array<ModelTypes["ProjectWhereInput"]> | undefined,
	publishedAt?: ModelTypes["DateTime"] | undefined,
	/** All values that are not equal to given value. */
	publishedAt_not?: ModelTypes["DateTime"] | undefined,
	/** All values that are contained in given list. */
	publishedAt_in?: Array<ModelTypes["DateTime"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	publishedAt_not_in?: Array<ModelTypes["DateTime"] | undefined> | undefined,
	/** All values less than the given value. */
	publishedAt_lt?: ModelTypes["DateTime"] | undefined,
	/** All values less than or equal the given value. */
	publishedAt_lte?: ModelTypes["DateTime"] | undefined,
	/** All values greater than the given value. */
	publishedAt_gt?: ModelTypes["DateTime"] | undefined,
	/** All values greater than or equal the given value. */
	publishedAt_gte?: ModelTypes["DateTime"] | undefined,
	updatedAt?: ModelTypes["DateTime"] | undefined,
	/** All values that are not equal to given value. */
	updatedAt_not?: ModelTypes["DateTime"] | undefined,
	/** All values that are contained in given list. */
	updatedAt_in?: Array<ModelTypes["DateTime"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	updatedAt_not_in?: Array<ModelTypes["DateTime"] | undefined> | undefined,
	/** All values less than the given value. */
	updatedAt_lt?: ModelTypes["DateTime"] | undefined,
	/** All values less than or equal the given value. */
	updatedAt_lte?: ModelTypes["DateTime"] | undefined,
	/** All values greater than the given value. */
	updatedAt_gt?: ModelTypes["DateTime"] | undefined,
	/** All values greater than or equal the given value. */
	updatedAt_gte?: ModelTypes["DateTime"] | undefined,
	createdAt?: ModelTypes["DateTime"] | undefined,
	/** All values that are not equal to given value. */
	createdAt_not?: ModelTypes["DateTime"] | undefined,
	/** All values that are contained in given list. */
	createdAt_in?: Array<ModelTypes["DateTime"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	createdAt_not_in?: Array<ModelTypes["DateTime"] | undefined> | undefined,
	/** All values less than the given value. */
	createdAt_lt?: ModelTypes["DateTime"] | undefined,
	/** All values less than or equal the given value. */
	createdAt_lte?: ModelTypes["DateTime"] | undefined,
	/** All values greater than the given value. */
	createdAt_gt?: ModelTypes["DateTime"] | undefined,
	/** All values greater than or equal the given value. */
	createdAt_gte?: ModelTypes["DateTime"] | undefined,
	id?: string | undefined,
	/** All values that are not equal to given value. */
	id_not?: string | undefined,
	/** All values that are contained in given list. */
	id_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	id_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	id_contains?: string | undefined,
	/** All values not containing the given string. */
	id_not_contains?: string | undefined,
	/** All values starting with the given string. */
	id_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	id_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	id_ends_with?: string | undefined,
	/** All values not ending with the given string */
	id_not_ends_with?: string | undefined,
	name?: string | undefined,
	/** All values that are not equal to given value. */
	name_not?: string | undefined,
	/** All values that are contained in given list. */
	name_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	name_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	name_contains?: string | undefined,
	/** All values not containing the given string. */
	name_not_contains?: string | undefined,
	/** All values starting with the given string. */
	name_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	name_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	name_ends_with?: string | undefined,
	/** All values not ending with the given string */
	name_not_ends_with?: string | undefined,
	description?: string | undefined,
	/** All values that are not equal to given value. */
	description_not?: string | undefined,
	/** All values that are contained in given list. */
	description_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	description_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	description_contains?: string | undefined,
	/** All values not containing the given string. */
	description_not_contains?: string | undefined,
	/** All values starting with the given string. */
	description_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	description_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	description_ends_with?: string | undefined,
	/** All values not ending with the given string */
	description_not_ends_with?: string | undefined,
	demo?: string | undefined,
	/** All values that are not equal to given value. */
	demo_not?: string | undefined,
	/** All values that are contained in given list. */
	demo_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	demo_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	demo_contains?: string | undefined,
	/** All values not containing the given string. */
	demo_not_contains?: string | undefined,
	/** All values starting with the given string. */
	demo_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	demo_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	demo_ends_with?: string | undefined,
	/** All values not ending with the given string */
	demo_not_ends_with?: string | undefined,
	sourceCode?: string | undefined,
	/** All values that are not equal to given value. */
	sourceCode_not?: string | undefined,
	/** All values that are contained in given list. */
	sourceCode_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	sourceCode_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	sourceCode_contains?: string | undefined,
	/** All values not containing the given string. */
	sourceCode_not_contains?: string | undefined,
	/** All values starting with the given string. */
	sourceCode_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	sourceCode_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	sourceCode_ends_with?: string | undefined,
	/** All values not ending with the given string */
	sourceCode_not_ends_with?: string | undefined,
	publishedBy?: ModelTypes["UserWhereInput"] | undefined,
	updatedBy?: ModelTypes["UserWhereInput"] | undefined,
	createdBy?: ModelTypes["UserWhereInput"] | undefined,
	image_every?: ModelTypes["AssetWhereInput"] | undefined,
	image_some?: ModelTypes["AssetWhereInput"] | undefined,
	image_none?: ModelTypes["AssetWhereInput"] | undefined,
	/** Matches if the field array contains *all* items provided to the filter and order does match */
	stack?: Array<ModelTypes["Technologies"]> | undefined,
	/** Matches if the field array does not contains *all* items provided to the filter or order does not match */
	stack_not?: Array<ModelTypes["Technologies"]> | undefined,
	/** Matches if the field array contains *all* items provided to the filter */
	stack_contains_all?: Array<ModelTypes["Technologies"]> | undefined,
	/** Matches if the field array contains at least one item provided to the filter */
	stack_contains_some?: Array<ModelTypes["Technologies"]> | undefined,
	/** Matches if the field array does not contain any of the items provided to the filter */
	stack_contains_none?: Array<ModelTypes["Technologies"]> | undefined,
	scheduledIn_every?: ModelTypes["ScheduledOperationWhereInput"] | undefined,
	scheduledIn_some?: ModelTypes["ScheduledOperationWhereInput"] | undefined,
	scheduledIn_none?: ModelTypes["ScheduledOperationWhereInput"] | undefined
};
	/** References Project record uniquely */
["ProjectWhereUniqueInput"]: {
	id?: string | undefined,
	name?: string | undefined
};
	["PublishLocaleInput"]: {
	/** Locales to publish */
	locale: ModelTypes["Locale"],
	/** Stages to publish selected locales to */
	stages: Array<ModelTypes["Stage"]>
};
	["Query"]: {
		/** Fetches an object given its ID */
	node?: ModelTypes["Node"] | undefined,
	/** Retrieve multiple users */
	users: Array<ModelTypes["User"]>,
	/** Retrieve a single user */
	user?: ModelTypes["User"] | undefined,
	/** Retrieve multiple users using the Relay connection interface */
	usersConnection: ModelTypes["UserConnection"],
	/** Retrieve multiple assets */
	assets: Array<ModelTypes["Asset"]>,
	/** Retrieve a single asset */
	asset?: ModelTypes["Asset"] | undefined,
	/** Retrieve multiple assets using the Relay connection interface */
	assetsConnection: ModelTypes["AssetConnection"],
	/** Retrieve document version */
	assetVersion?: ModelTypes["DocumentVersion"] | undefined,
	/** Retrieve multiple scheduledOperations */
	scheduledOperations: Array<ModelTypes["ScheduledOperation"]>,
	/** Retrieve a single scheduledOperation */
	scheduledOperation?: ModelTypes["ScheduledOperation"] | undefined,
	/** Retrieve multiple scheduledOperations using the Relay connection interface */
	scheduledOperationsConnection: ModelTypes["ScheduledOperationConnection"],
	/** Retrieve multiple scheduledReleases */
	scheduledReleases: Array<ModelTypes["ScheduledRelease"]>,
	/** Retrieve a single scheduledRelease */
	scheduledRelease?: ModelTypes["ScheduledRelease"] | undefined,
	/** Retrieve multiple scheduledReleases using the Relay connection interface */
	scheduledReleasesConnection: ModelTypes["ScheduledReleaseConnection"],
	/** Retrieve multiple projects */
	projects: Array<ModelTypes["Project"]>,
	/** Retrieve a single project */
	project?: ModelTypes["Project"] | undefined,
	/** Retrieve multiple projects using the Relay connection interface */
	projectsConnection: ModelTypes["ProjectConnection"],
	/** Retrieve document version */
	projectVersion?: ModelTypes["DocumentVersion"] | undefined,
	/** Retrieve multiple seos */
	seos: Array<ModelTypes["Seo"]>,
	/** Retrieve a single seo */
	seo?: ModelTypes["Seo"] | undefined,
	/** Retrieve multiple seos using the Relay connection interface */
	seosConnection: ModelTypes["SeoConnection"],
	/** Retrieve document version */
	seoVersion?: ModelTypes["DocumentVersion"] | undefined,
	/** Retrieve multiple aboutMes */
	aboutMes: Array<ModelTypes["AboutMe"]>,
	/** Retrieve a single aboutMe */
	aboutMe?: ModelTypes["AboutMe"] | undefined,
	/** Retrieve multiple aboutMes using the Relay connection interface */
	aboutMesConnection: ModelTypes["AboutMeConnection"],
	/** Retrieve document version */
	aboutMeVersion?: ModelTypes["DocumentVersion"] | undefined,
	/** Retrieve multiple skillCategories */
	skillCategories: Array<ModelTypes["SkillCategory"]>,
	/** Retrieve a single skillCategory */
	skillCategory?: ModelTypes["SkillCategory"] | undefined,
	/** Retrieve multiple skillCategories using the Relay connection interface */
	skillCategoriesConnection: ModelTypes["SkillCategoryConnection"],
	/** Retrieve document version */
	skillCategoryVersion?: ModelTypes["DocumentVersion"] | undefined
};
	/** Representing a RGBA color value: https://developer.mozilla.org/en-US/docs/Web/CSS/color_value#rgb()_and_rgba() */
["RGBA"]: {
		r: ModelTypes["RGBAHue"],
	g: ModelTypes["RGBAHue"],
	b: ModelTypes["RGBAHue"],
	a: ModelTypes["RGBATransparency"]
};
	["RGBAHue"]:any;
	/** Input type representing a RGBA color value: https://developer.mozilla.org/en-US/docs/Web/CSS/color_value#rgb()_and_rgba() */
["RGBAInput"]: {
	r: ModelTypes["RGBAHue"],
	g: ModelTypes["RGBAHue"],
	b: ModelTypes["RGBAHue"],
	a: ModelTypes["RGBATransparency"]
};
	["RGBATransparency"]:any;
	/** Custom type representing a rich text value comprising of raw rich text ast, html, markdown and text values */
["RichText"]: {
		/** Returns AST representation */
	raw: ModelTypes["RichTextAST"],
	/** Returns HTMl representation */
	html: string,
	/** Returns Markdown representation */
	markdown: string,
	/** Returns plain-text contents of RichText */
	text: string
};
	/** Slate-compatible RichText AST */
["RichTextAST"]:any;
	/** Scheduled Operation system model */
["ScheduledOperation"]: {
		/** System stage field */
	stage: ModelTypes["Stage"],
	/** Get the document in other stages */
	documentInStages: Array<ModelTypes["ScheduledOperation"]>,
	/** Raw operation payload including all details, this field is subject to change */
	rawPayload: ModelTypes["Json"],
	/** Operation error message */
	errorMessage?: string | undefined,
	/** Operation description */
	description?: string | undefined,
	/** The time the document was published. Null on documents in draft stage. */
	publishedAt?: ModelTypes["DateTime"] | undefined,
	/** The time the document was updated */
	updatedAt: ModelTypes["DateTime"],
	/** The time the document was created */
	createdAt: ModelTypes["DateTime"],
	/** The unique identifier */
	id: string,
	/** The release this operation is scheduled for */
	release?: ModelTypes["ScheduledRelease"] | undefined,
	/** User that last published this document */
	publishedBy?: ModelTypes["User"] | undefined,
	/** User that last updated this document */
	updatedBy?: ModelTypes["User"] | undefined,
	/** User that created this document */
	createdBy?: ModelTypes["User"] | undefined,
	/** operation Status */
	status: ModelTypes["ScheduledOperationStatus"],
	affectedDocuments: Array<ModelTypes["ScheduledOperationAffectedDocument"]>
};
	["ScheduledOperationAffectedDocument"]:ModelTypes["AboutMe"] | ModelTypes["Asset"] | ModelTypes["Project"] | ModelTypes["Seo"] | ModelTypes["SkillCategory"];
	["ScheduledOperationConnectInput"]: {
	/** Document to connect */
	where: ModelTypes["ScheduledOperationWhereUniqueInput"],
	/** Allow to specify document position in list of connected documents, will default to appending at end of list */
	position?: ModelTypes["ConnectPositionInput"] | undefined
};
	/** A connection to a list of items. */
["ScheduledOperationConnection"]: {
		/** Information to aid in pagination. */
	pageInfo: ModelTypes["PageInfo"],
	/** A list of edges. */
	edges: Array<ModelTypes["ScheduledOperationEdge"]>,
	aggregate: ModelTypes["Aggregate"]
};
	["ScheduledOperationCreateManyInlineInput"]: {
	/** Connect multiple existing ScheduledOperation documents */
	connect?: Array<ModelTypes["ScheduledOperationWhereUniqueInput"]> | undefined
};
	["ScheduledOperationCreateOneInlineInput"]: {
	/** Connect one existing ScheduledOperation document */
	connect?: ModelTypes["ScheduledOperationWhereUniqueInput"] | undefined
};
	/** An edge in a connection. */
["ScheduledOperationEdge"]: {
		/** The item at the end of the edge. */
	node: ModelTypes["ScheduledOperation"],
	/** A cursor for use in pagination. */
	cursor: string
};
	/** Identifies documents */
["ScheduledOperationManyWhereInput"]: {
	/** Contains search across all appropriate fields. */
	_search?: string | undefined,
	/** Logical AND on all given filters. */
	AND?: Array<ModelTypes["ScheduledOperationWhereInput"]> | undefined,
	/** Logical OR on all given filters. */
	OR?: Array<ModelTypes["ScheduledOperationWhereInput"]> | undefined,
	/** Logical NOT on all given filters combined by AND. */
	NOT?: Array<ModelTypes["ScheduledOperationWhereInput"]> | undefined,
	errorMessage?: string | undefined,
	/** All values that are not equal to given value. */
	errorMessage_not?: string | undefined,
	/** All values that are contained in given list. */
	errorMessage_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	errorMessage_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	errorMessage_contains?: string | undefined,
	/** All values not containing the given string. */
	errorMessage_not_contains?: string | undefined,
	/** All values starting with the given string. */
	errorMessage_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	errorMessage_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	errorMessage_ends_with?: string | undefined,
	/** All values not ending with the given string */
	errorMessage_not_ends_with?: string | undefined,
	description?: string | undefined,
	/** All values that are not equal to given value. */
	description_not?: string | undefined,
	/** All values that are contained in given list. */
	description_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	description_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	description_contains?: string | undefined,
	/** All values not containing the given string. */
	description_not_contains?: string | undefined,
	/** All values starting with the given string. */
	description_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	description_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	description_ends_with?: string | undefined,
	/** All values not ending with the given string */
	description_not_ends_with?: string | undefined,
	publishedAt?: ModelTypes["DateTime"] | undefined,
	/** All values that are not equal to given value. */
	publishedAt_not?: ModelTypes["DateTime"] | undefined,
	/** All values that are contained in given list. */
	publishedAt_in?: Array<ModelTypes["DateTime"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	publishedAt_not_in?: Array<ModelTypes["DateTime"] | undefined> | undefined,
	/** All values less than the given value. */
	publishedAt_lt?: ModelTypes["DateTime"] | undefined,
	/** All values less than or equal the given value. */
	publishedAt_lte?: ModelTypes["DateTime"] | undefined,
	/** All values greater than the given value. */
	publishedAt_gt?: ModelTypes["DateTime"] | undefined,
	/** All values greater than or equal the given value. */
	publishedAt_gte?: ModelTypes["DateTime"] | undefined,
	updatedAt?: ModelTypes["DateTime"] | undefined,
	/** All values that are not equal to given value. */
	updatedAt_not?: ModelTypes["DateTime"] | undefined,
	/** All values that are contained in given list. */
	updatedAt_in?: Array<ModelTypes["DateTime"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	updatedAt_not_in?: Array<ModelTypes["DateTime"] | undefined> | undefined,
	/** All values less than the given value. */
	updatedAt_lt?: ModelTypes["DateTime"] | undefined,
	/** All values less than or equal the given value. */
	updatedAt_lte?: ModelTypes["DateTime"] | undefined,
	/** All values greater than the given value. */
	updatedAt_gt?: ModelTypes["DateTime"] | undefined,
	/** All values greater than or equal the given value. */
	updatedAt_gte?: ModelTypes["DateTime"] | undefined,
	createdAt?: ModelTypes["DateTime"] | undefined,
	/** All values that are not equal to given value. */
	createdAt_not?: ModelTypes["DateTime"] | undefined,
	/** All values that are contained in given list. */
	createdAt_in?: Array<ModelTypes["DateTime"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	createdAt_not_in?: Array<ModelTypes["DateTime"] | undefined> | undefined,
	/** All values less than the given value. */
	createdAt_lt?: ModelTypes["DateTime"] | undefined,
	/** All values less than or equal the given value. */
	createdAt_lte?: ModelTypes["DateTime"] | undefined,
	/** All values greater than the given value. */
	createdAt_gt?: ModelTypes["DateTime"] | undefined,
	/** All values greater than or equal the given value. */
	createdAt_gte?: ModelTypes["DateTime"] | undefined,
	id?: string | undefined,
	/** All values that are not equal to given value. */
	id_not?: string | undefined,
	/** All values that are contained in given list. */
	id_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	id_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	id_contains?: string | undefined,
	/** All values not containing the given string. */
	id_not_contains?: string | undefined,
	/** All values starting with the given string. */
	id_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	id_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	id_ends_with?: string | undefined,
	/** All values not ending with the given string */
	id_not_ends_with?: string | undefined,
	release?: ModelTypes["ScheduledReleaseWhereInput"] | undefined,
	publishedBy?: ModelTypes["UserWhereInput"] | undefined,
	updatedBy?: ModelTypes["UserWhereInput"] | undefined,
	createdBy?: ModelTypes["UserWhereInput"] | undefined,
	status?: ModelTypes["ScheduledOperationStatus"] | undefined,
	/** All values that are not equal to given value. */
	status_not?: ModelTypes["ScheduledOperationStatus"] | undefined,
	/** All values that are contained in given list. */
	status_in?: Array<ModelTypes["ScheduledOperationStatus"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	status_not_in?: Array<ModelTypes["ScheduledOperationStatus"] | undefined> | undefined
};
	["ScheduledOperationOrderByInput"]:ScheduledOperationOrderByInput;
	["ScheduledOperationStatus"]:ScheduledOperationStatus;
	["ScheduledOperationUpdateManyInlineInput"]: {
	/** Connect multiple existing ScheduledOperation documents */
	connect?: Array<ModelTypes["ScheduledOperationConnectInput"]> | undefined,
	/** Override currently-connected documents with multiple existing ScheduledOperation documents */
	set?: Array<ModelTypes["ScheduledOperationWhereUniqueInput"]> | undefined,
	/** Disconnect multiple ScheduledOperation documents */
	disconnect?: Array<ModelTypes["ScheduledOperationWhereUniqueInput"]> | undefined
};
	["ScheduledOperationUpdateOneInlineInput"]: {
	/** Connect existing ScheduledOperation document */
	connect?: ModelTypes["ScheduledOperationWhereUniqueInput"] | undefined,
	/** Disconnect currently connected ScheduledOperation document */
	disconnect?: boolean | undefined
};
	/** Identifies documents */
["ScheduledOperationWhereInput"]: {
	/** Contains search across all appropriate fields. */
	_search?: string | undefined,
	/** Logical AND on all given filters. */
	AND?: Array<ModelTypes["ScheduledOperationWhereInput"]> | undefined,
	/** Logical OR on all given filters. */
	OR?: Array<ModelTypes["ScheduledOperationWhereInput"]> | undefined,
	/** Logical NOT on all given filters combined by AND. */
	NOT?: Array<ModelTypes["ScheduledOperationWhereInput"]> | undefined,
	errorMessage?: string | undefined,
	/** All values that are not equal to given value. */
	errorMessage_not?: string | undefined,
	/** All values that are contained in given list. */
	errorMessage_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	errorMessage_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	errorMessage_contains?: string | undefined,
	/** All values not containing the given string. */
	errorMessage_not_contains?: string | undefined,
	/** All values starting with the given string. */
	errorMessage_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	errorMessage_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	errorMessage_ends_with?: string | undefined,
	/** All values not ending with the given string */
	errorMessage_not_ends_with?: string | undefined,
	description?: string | undefined,
	/** All values that are not equal to given value. */
	description_not?: string | undefined,
	/** All values that are contained in given list. */
	description_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	description_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	description_contains?: string | undefined,
	/** All values not containing the given string. */
	description_not_contains?: string | undefined,
	/** All values starting with the given string. */
	description_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	description_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	description_ends_with?: string | undefined,
	/** All values not ending with the given string */
	description_not_ends_with?: string | undefined,
	publishedAt?: ModelTypes["DateTime"] | undefined,
	/** All values that are not equal to given value. */
	publishedAt_not?: ModelTypes["DateTime"] | undefined,
	/** All values that are contained in given list. */
	publishedAt_in?: Array<ModelTypes["DateTime"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	publishedAt_not_in?: Array<ModelTypes["DateTime"] | undefined> | undefined,
	/** All values less than the given value. */
	publishedAt_lt?: ModelTypes["DateTime"] | undefined,
	/** All values less than or equal the given value. */
	publishedAt_lte?: ModelTypes["DateTime"] | undefined,
	/** All values greater than the given value. */
	publishedAt_gt?: ModelTypes["DateTime"] | undefined,
	/** All values greater than or equal the given value. */
	publishedAt_gte?: ModelTypes["DateTime"] | undefined,
	updatedAt?: ModelTypes["DateTime"] | undefined,
	/** All values that are not equal to given value. */
	updatedAt_not?: ModelTypes["DateTime"] | undefined,
	/** All values that are contained in given list. */
	updatedAt_in?: Array<ModelTypes["DateTime"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	updatedAt_not_in?: Array<ModelTypes["DateTime"] | undefined> | undefined,
	/** All values less than the given value. */
	updatedAt_lt?: ModelTypes["DateTime"] | undefined,
	/** All values less than or equal the given value. */
	updatedAt_lte?: ModelTypes["DateTime"] | undefined,
	/** All values greater than the given value. */
	updatedAt_gt?: ModelTypes["DateTime"] | undefined,
	/** All values greater than or equal the given value. */
	updatedAt_gte?: ModelTypes["DateTime"] | undefined,
	createdAt?: ModelTypes["DateTime"] | undefined,
	/** All values that are not equal to given value. */
	createdAt_not?: ModelTypes["DateTime"] | undefined,
	/** All values that are contained in given list. */
	createdAt_in?: Array<ModelTypes["DateTime"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	createdAt_not_in?: Array<ModelTypes["DateTime"] | undefined> | undefined,
	/** All values less than the given value. */
	createdAt_lt?: ModelTypes["DateTime"] | undefined,
	/** All values less than or equal the given value. */
	createdAt_lte?: ModelTypes["DateTime"] | undefined,
	/** All values greater than the given value. */
	createdAt_gt?: ModelTypes["DateTime"] | undefined,
	/** All values greater than or equal the given value. */
	createdAt_gte?: ModelTypes["DateTime"] | undefined,
	id?: string | undefined,
	/** All values that are not equal to given value. */
	id_not?: string | undefined,
	/** All values that are contained in given list. */
	id_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	id_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	id_contains?: string | undefined,
	/** All values not containing the given string. */
	id_not_contains?: string | undefined,
	/** All values starting with the given string. */
	id_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	id_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	id_ends_with?: string | undefined,
	/** All values not ending with the given string */
	id_not_ends_with?: string | undefined,
	release?: ModelTypes["ScheduledReleaseWhereInput"] | undefined,
	publishedBy?: ModelTypes["UserWhereInput"] | undefined,
	updatedBy?: ModelTypes["UserWhereInput"] | undefined,
	createdBy?: ModelTypes["UserWhereInput"] | undefined,
	status?: ModelTypes["ScheduledOperationStatus"] | undefined,
	/** All values that are not equal to given value. */
	status_not?: ModelTypes["ScheduledOperationStatus"] | undefined,
	/** All values that are contained in given list. */
	status_in?: Array<ModelTypes["ScheduledOperationStatus"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	status_not_in?: Array<ModelTypes["ScheduledOperationStatus"] | undefined> | undefined
};
	/** References ScheduledOperation record uniquely */
["ScheduledOperationWhereUniqueInput"]: {
	id?: string | undefined
};
	/** Scheduled Release system model */
["ScheduledRelease"]: {
		/** System stage field */
	stage: ModelTypes["Stage"],
	/** Get the document in other stages */
	documentInStages: Array<ModelTypes["ScheduledRelease"]>,
	/** Release date and time */
	releaseAt?: ModelTypes["DateTime"] | undefined,
	/** Whether scheduled release is implicit */
	isImplicit: boolean,
	/** Whether scheduled release should be run */
	isActive: boolean,
	/** Release error message */
	errorMessage?: string | undefined,
	/** Release description */
	description?: string | undefined,
	/** Release Title */
	title?: string | undefined,
	/** The time the document was published. Null on documents in draft stage. */
	publishedAt?: ModelTypes["DateTime"] | undefined,
	/** The time the document was updated */
	updatedAt: ModelTypes["DateTime"],
	/** The time the document was created */
	createdAt: ModelTypes["DateTime"],
	/** The unique identifier */
	id: string,
	/** Operations to run with this release */
	operations: Array<ModelTypes["ScheduledOperation"]>,
	/** User that last published this document */
	publishedBy?: ModelTypes["User"] | undefined,
	/** User that last updated this document */
	updatedBy?: ModelTypes["User"] | undefined,
	/** User that created this document */
	createdBy?: ModelTypes["User"] | undefined,
	/** Release Status */
	status: ModelTypes["ScheduledReleaseStatus"]
};
	["ScheduledReleaseConnectInput"]: {
	/** Document to connect */
	where: ModelTypes["ScheduledReleaseWhereUniqueInput"],
	/** Allow to specify document position in list of connected documents, will default to appending at end of list */
	position?: ModelTypes["ConnectPositionInput"] | undefined
};
	/** A connection to a list of items. */
["ScheduledReleaseConnection"]: {
		/** Information to aid in pagination. */
	pageInfo: ModelTypes["PageInfo"],
	/** A list of edges. */
	edges: Array<ModelTypes["ScheduledReleaseEdge"]>,
	aggregate: ModelTypes["Aggregate"]
};
	["ScheduledReleaseCreateInput"]: {
	releaseAt?: ModelTypes["DateTime"] | undefined,
	isActive?: boolean | undefined,
	errorMessage?: string | undefined,
	description?: string | undefined,
	title?: string | undefined,
	updatedAt?: ModelTypes["DateTime"] | undefined,
	createdAt?: ModelTypes["DateTime"] | undefined
};
	["ScheduledReleaseCreateManyInlineInput"]: {
	/** Create and connect multiple existing ScheduledRelease documents */
	create?: Array<ModelTypes["ScheduledReleaseCreateInput"]> | undefined,
	/** Connect multiple existing ScheduledRelease documents */
	connect?: Array<ModelTypes["ScheduledReleaseWhereUniqueInput"]> | undefined
};
	["ScheduledReleaseCreateOneInlineInput"]: {
	/** Create and connect one ScheduledRelease document */
	create?: ModelTypes["ScheduledReleaseCreateInput"] | undefined,
	/** Connect one existing ScheduledRelease document */
	connect?: ModelTypes["ScheduledReleaseWhereUniqueInput"] | undefined
};
	/** An edge in a connection. */
["ScheduledReleaseEdge"]: {
		/** The item at the end of the edge. */
	node: ModelTypes["ScheduledRelease"],
	/** A cursor for use in pagination. */
	cursor: string
};
	/** Identifies documents */
["ScheduledReleaseManyWhereInput"]: {
	/** Contains search across all appropriate fields. */
	_search?: string | undefined,
	/** Logical AND on all given filters. */
	AND?: Array<ModelTypes["ScheduledReleaseWhereInput"]> | undefined,
	/** Logical OR on all given filters. */
	OR?: Array<ModelTypes["ScheduledReleaseWhereInput"]> | undefined,
	/** Logical NOT on all given filters combined by AND. */
	NOT?: Array<ModelTypes["ScheduledReleaseWhereInput"]> | undefined,
	releaseAt?: ModelTypes["DateTime"] | undefined,
	/** All values that are not equal to given value. */
	releaseAt_not?: ModelTypes["DateTime"] | undefined,
	/** All values that are contained in given list. */
	releaseAt_in?: Array<ModelTypes["DateTime"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	releaseAt_not_in?: Array<ModelTypes["DateTime"] | undefined> | undefined,
	/** All values less than the given value. */
	releaseAt_lt?: ModelTypes["DateTime"] | undefined,
	/** All values less than or equal the given value. */
	releaseAt_lte?: ModelTypes["DateTime"] | undefined,
	/** All values greater than the given value. */
	releaseAt_gt?: ModelTypes["DateTime"] | undefined,
	/** All values greater than or equal the given value. */
	releaseAt_gte?: ModelTypes["DateTime"] | undefined,
	isImplicit?: boolean | undefined,
	/** All values that are not equal to given value. */
	isImplicit_not?: boolean | undefined,
	isActive?: boolean | undefined,
	/** All values that are not equal to given value. */
	isActive_not?: boolean | undefined,
	errorMessage?: string | undefined,
	/** All values that are not equal to given value. */
	errorMessage_not?: string | undefined,
	/** All values that are contained in given list. */
	errorMessage_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	errorMessage_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	errorMessage_contains?: string | undefined,
	/** All values not containing the given string. */
	errorMessage_not_contains?: string | undefined,
	/** All values starting with the given string. */
	errorMessage_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	errorMessage_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	errorMessage_ends_with?: string | undefined,
	/** All values not ending with the given string */
	errorMessage_not_ends_with?: string | undefined,
	description?: string | undefined,
	/** All values that are not equal to given value. */
	description_not?: string | undefined,
	/** All values that are contained in given list. */
	description_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	description_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	description_contains?: string | undefined,
	/** All values not containing the given string. */
	description_not_contains?: string | undefined,
	/** All values starting with the given string. */
	description_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	description_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	description_ends_with?: string | undefined,
	/** All values not ending with the given string */
	description_not_ends_with?: string | undefined,
	title?: string | undefined,
	/** All values that are not equal to given value. */
	title_not?: string | undefined,
	/** All values that are contained in given list. */
	title_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	title_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	title_contains?: string | undefined,
	/** All values not containing the given string. */
	title_not_contains?: string | undefined,
	/** All values starting with the given string. */
	title_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	title_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	title_ends_with?: string | undefined,
	/** All values not ending with the given string */
	title_not_ends_with?: string | undefined,
	publishedAt?: ModelTypes["DateTime"] | undefined,
	/** All values that are not equal to given value. */
	publishedAt_not?: ModelTypes["DateTime"] | undefined,
	/** All values that are contained in given list. */
	publishedAt_in?: Array<ModelTypes["DateTime"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	publishedAt_not_in?: Array<ModelTypes["DateTime"] | undefined> | undefined,
	/** All values less than the given value. */
	publishedAt_lt?: ModelTypes["DateTime"] | undefined,
	/** All values less than or equal the given value. */
	publishedAt_lte?: ModelTypes["DateTime"] | undefined,
	/** All values greater than the given value. */
	publishedAt_gt?: ModelTypes["DateTime"] | undefined,
	/** All values greater than or equal the given value. */
	publishedAt_gte?: ModelTypes["DateTime"] | undefined,
	updatedAt?: ModelTypes["DateTime"] | undefined,
	/** All values that are not equal to given value. */
	updatedAt_not?: ModelTypes["DateTime"] | undefined,
	/** All values that are contained in given list. */
	updatedAt_in?: Array<ModelTypes["DateTime"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	updatedAt_not_in?: Array<ModelTypes["DateTime"] | undefined> | undefined,
	/** All values less than the given value. */
	updatedAt_lt?: ModelTypes["DateTime"] | undefined,
	/** All values less than or equal the given value. */
	updatedAt_lte?: ModelTypes["DateTime"] | undefined,
	/** All values greater than the given value. */
	updatedAt_gt?: ModelTypes["DateTime"] | undefined,
	/** All values greater than or equal the given value. */
	updatedAt_gte?: ModelTypes["DateTime"] | undefined,
	createdAt?: ModelTypes["DateTime"] | undefined,
	/** All values that are not equal to given value. */
	createdAt_not?: ModelTypes["DateTime"] | undefined,
	/** All values that are contained in given list. */
	createdAt_in?: Array<ModelTypes["DateTime"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	createdAt_not_in?: Array<ModelTypes["DateTime"] | undefined> | undefined,
	/** All values less than the given value. */
	createdAt_lt?: ModelTypes["DateTime"] | undefined,
	/** All values less than or equal the given value. */
	createdAt_lte?: ModelTypes["DateTime"] | undefined,
	/** All values greater than the given value. */
	createdAt_gt?: ModelTypes["DateTime"] | undefined,
	/** All values greater than or equal the given value. */
	createdAt_gte?: ModelTypes["DateTime"] | undefined,
	id?: string | undefined,
	/** All values that are not equal to given value. */
	id_not?: string | undefined,
	/** All values that are contained in given list. */
	id_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	id_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	id_contains?: string | undefined,
	/** All values not containing the given string. */
	id_not_contains?: string | undefined,
	/** All values starting with the given string. */
	id_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	id_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	id_ends_with?: string | undefined,
	/** All values not ending with the given string */
	id_not_ends_with?: string | undefined,
	operations_every?: ModelTypes["ScheduledOperationWhereInput"] | undefined,
	operations_some?: ModelTypes["ScheduledOperationWhereInput"] | undefined,
	operations_none?: ModelTypes["ScheduledOperationWhereInput"] | undefined,
	publishedBy?: ModelTypes["UserWhereInput"] | undefined,
	updatedBy?: ModelTypes["UserWhereInput"] | undefined,
	createdBy?: ModelTypes["UserWhereInput"] | undefined,
	status?: ModelTypes["ScheduledReleaseStatus"] | undefined,
	/** All values that are not equal to given value. */
	status_not?: ModelTypes["ScheduledReleaseStatus"] | undefined,
	/** All values that are contained in given list. */
	status_in?: Array<ModelTypes["ScheduledReleaseStatus"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	status_not_in?: Array<ModelTypes["ScheduledReleaseStatus"] | undefined> | undefined
};
	["ScheduledReleaseOrderByInput"]:ScheduledReleaseOrderByInput;
	["ScheduledReleaseStatus"]:ScheduledReleaseStatus;
	["ScheduledReleaseUpdateInput"]: {
	releaseAt?: ModelTypes["DateTime"] | undefined,
	isActive?: boolean | undefined,
	errorMessage?: string | undefined,
	description?: string | undefined,
	title?: string | undefined
};
	["ScheduledReleaseUpdateManyInlineInput"]: {
	/** Create and connect multiple ScheduledRelease documents */
	create?: Array<ModelTypes["ScheduledReleaseCreateInput"]> | undefined,
	/** Connect multiple existing ScheduledRelease documents */
	connect?: Array<ModelTypes["ScheduledReleaseConnectInput"]> | undefined,
	/** Override currently-connected documents with multiple existing ScheduledRelease documents */
	set?: Array<ModelTypes["ScheduledReleaseWhereUniqueInput"]> | undefined,
	/** Update multiple ScheduledRelease documents */
	update?: Array<ModelTypes["ScheduledReleaseUpdateWithNestedWhereUniqueInput"]> | undefined,
	/** Upsert multiple ScheduledRelease documents */
	upsert?: Array<ModelTypes["ScheduledReleaseUpsertWithNestedWhereUniqueInput"]> | undefined,
	/** Disconnect multiple ScheduledRelease documents */
	disconnect?: Array<ModelTypes["ScheduledReleaseWhereUniqueInput"]> | undefined,
	/** Delete multiple ScheduledRelease documents */
	delete?: Array<ModelTypes["ScheduledReleaseWhereUniqueInput"]> | undefined
};
	["ScheduledReleaseUpdateManyInput"]: {
	releaseAt?: ModelTypes["DateTime"] | undefined,
	isActive?: boolean | undefined,
	errorMessage?: string | undefined,
	description?: string | undefined,
	title?: string | undefined
};
	["ScheduledReleaseUpdateManyWithNestedWhereInput"]: {
	/** Document search */
	where: ModelTypes["ScheduledReleaseWhereInput"],
	/** Update many input */
	data: ModelTypes["ScheduledReleaseUpdateManyInput"]
};
	["ScheduledReleaseUpdateOneInlineInput"]: {
	/** Create and connect one ScheduledRelease document */
	create?: ModelTypes["ScheduledReleaseCreateInput"] | undefined,
	/** Update single ScheduledRelease document */
	update?: ModelTypes["ScheduledReleaseUpdateWithNestedWhereUniqueInput"] | undefined,
	/** Upsert single ScheduledRelease document */
	upsert?: ModelTypes["ScheduledReleaseUpsertWithNestedWhereUniqueInput"] | undefined,
	/** Connect existing ScheduledRelease document */
	connect?: ModelTypes["ScheduledReleaseWhereUniqueInput"] | undefined,
	/** Disconnect currently connected ScheduledRelease document */
	disconnect?: boolean | undefined,
	/** Delete currently connected ScheduledRelease document */
	delete?: boolean | undefined
};
	["ScheduledReleaseUpdateWithNestedWhereUniqueInput"]: {
	/** Unique document search */
	where: ModelTypes["ScheduledReleaseWhereUniqueInput"],
	/** Document to update */
	data: ModelTypes["ScheduledReleaseUpdateInput"]
};
	["ScheduledReleaseUpsertInput"]: {
	/** Create document if it didn't exist */
	create: ModelTypes["ScheduledReleaseCreateInput"],
	/** Update document if it exists */
	update: ModelTypes["ScheduledReleaseUpdateInput"]
};
	["ScheduledReleaseUpsertWithNestedWhereUniqueInput"]: {
	/** Unique document search */
	where: ModelTypes["ScheduledReleaseWhereUniqueInput"],
	/** Upsert data */
	data: ModelTypes["ScheduledReleaseUpsertInput"]
};
	/** Identifies documents */
["ScheduledReleaseWhereInput"]: {
	/** Contains search across all appropriate fields. */
	_search?: string | undefined,
	/** Logical AND on all given filters. */
	AND?: Array<ModelTypes["ScheduledReleaseWhereInput"]> | undefined,
	/** Logical OR on all given filters. */
	OR?: Array<ModelTypes["ScheduledReleaseWhereInput"]> | undefined,
	/** Logical NOT on all given filters combined by AND. */
	NOT?: Array<ModelTypes["ScheduledReleaseWhereInput"]> | undefined,
	releaseAt?: ModelTypes["DateTime"] | undefined,
	/** All values that are not equal to given value. */
	releaseAt_not?: ModelTypes["DateTime"] | undefined,
	/** All values that are contained in given list. */
	releaseAt_in?: Array<ModelTypes["DateTime"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	releaseAt_not_in?: Array<ModelTypes["DateTime"] | undefined> | undefined,
	/** All values less than the given value. */
	releaseAt_lt?: ModelTypes["DateTime"] | undefined,
	/** All values less than or equal the given value. */
	releaseAt_lte?: ModelTypes["DateTime"] | undefined,
	/** All values greater than the given value. */
	releaseAt_gt?: ModelTypes["DateTime"] | undefined,
	/** All values greater than or equal the given value. */
	releaseAt_gte?: ModelTypes["DateTime"] | undefined,
	isImplicit?: boolean | undefined,
	/** All values that are not equal to given value. */
	isImplicit_not?: boolean | undefined,
	isActive?: boolean | undefined,
	/** All values that are not equal to given value. */
	isActive_not?: boolean | undefined,
	errorMessage?: string | undefined,
	/** All values that are not equal to given value. */
	errorMessage_not?: string | undefined,
	/** All values that are contained in given list. */
	errorMessage_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	errorMessage_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	errorMessage_contains?: string | undefined,
	/** All values not containing the given string. */
	errorMessage_not_contains?: string | undefined,
	/** All values starting with the given string. */
	errorMessage_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	errorMessage_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	errorMessage_ends_with?: string | undefined,
	/** All values not ending with the given string */
	errorMessage_not_ends_with?: string | undefined,
	description?: string | undefined,
	/** All values that are not equal to given value. */
	description_not?: string | undefined,
	/** All values that are contained in given list. */
	description_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	description_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	description_contains?: string | undefined,
	/** All values not containing the given string. */
	description_not_contains?: string | undefined,
	/** All values starting with the given string. */
	description_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	description_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	description_ends_with?: string | undefined,
	/** All values not ending with the given string */
	description_not_ends_with?: string | undefined,
	title?: string | undefined,
	/** All values that are not equal to given value. */
	title_not?: string | undefined,
	/** All values that are contained in given list. */
	title_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	title_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	title_contains?: string | undefined,
	/** All values not containing the given string. */
	title_not_contains?: string | undefined,
	/** All values starting with the given string. */
	title_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	title_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	title_ends_with?: string | undefined,
	/** All values not ending with the given string */
	title_not_ends_with?: string | undefined,
	publishedAt?: ModelTypes["DateTime"] | undefined,
	/** All values that are not equal to given value. */
	publishedAt_not?: ModelTypes["DateTime"] | undefined,
	/** All values that are contained in given list. */
	publishedAt_in?: Array<ModelTypes["DateTime"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	publishedAt_not_in?: Array<ModelTypes["DateTime"] | undefined> | undefined,
	/** All values less than the given value. */
	publishedAt_lt?: ModelTypes["DateTime"] | undefined,
	/** All values less than or equal the given value. */
	publishedAt_lte?: ModelTypes["DateTime"] | undefined,
	/** All values greater than the given value. */
	publishedAt_gt?: ModelTypes["DateTime"] | undefined,
	/** All values greater than or equal the given value. */
	publishedAt_gte?: ModelTypes["DateTime"] | undefined,
	updatedAt?: ModelTypes["DateTime"] | undefined,
	/** All values that are not equal to given value. */
	updatedAt_not?: ModelTypes["DateTime"] | undefined,
	/** All values that are contained in given list. */
	updatedAt_in?: Array<ModelTypes["DateTime"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	updatedAt_not_in?: Array<ModelTypes["DateTime"] | undefined> | undefined,
	/** All values less than the given value. */
	updatedAt_lt?: ModelTypes["DateTime"] | undefined,
	/** All values less than or equal the given value. */
	updatedAt_lte?: ModelTypes["DateTime"] | undefined,
	/** All values greater than the given value. */
	updatedAt_gt?: ModelTypes["DateTime"] | undefined,
	/** All values greater than or equal the given value. */
	updatedAt_gte?: ModelTypes["DateTime"] | undefined,
	createdAt?: ModelTypes["DateTime"] | undefined,
	/** All values that are not equal to given value. */
	createdAt_not?: ModelTypes["DateTime"] | undefined,
	/** All values that are contained in given list. */
	createdAt_in?: Array<ModelTypes["DateTime"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	createdAt_not_in?: Array<ModelTypes["DateTime"] | undefined> | undefined,
	/** All values less than the given value. */
	createdAt_lt?: ModelTypes["DateTime"] | undefined,
	/** All values less than or equal the given value. */
	createdAt_lte?: ModelTypes["DateTime"] | undefined,
	/** All values greater than the given value. */
	createdAt_gt?: ModelTypes["DateTime"] | undefined,
	/** All values greater than or equal the given value. */
	createdAt_gte?: ModelTypes["DateTime"] | undefined,
	id?: string | undefined,
	/** All values that are not equal to given value. */
	id_not?: string | undefined,
	/** All values that are contained in given list. */
	id_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	id_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	id_contains?: string | undefined,
	/** All values not containing the given string. */
	id_not_contains?: string | undefined,
	/** All values starting with the given string. */
	id_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	id_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	id_ends_with?: string | undefined,
	/** All values not ending with the given string */
	id_not_ends_with?: string | undefined,
	operations_every?: ModelTypes["ScheduledOperationWhereInput"] | undefined,
	operations_some?: ModelTypes["ScheduledOperationWhereInput"] | undefined,
	operations_none?: ModelTypes["ScheduledOperationWhereInput"] | undefined,
	publishedBy?: ModelTypes["UserWhereInput"] | undefined,
	updatedBy?: ModelTypes["UserWhereInput"] | undefined,
	createdBy?: ModelTypes["UserWhereInput"] | undefined,
	status?: ModelTypes["ScheduledReleaseStatus"] | undefined,
	/** All values that are not equal to given value. */
	status_not?: ModelTypes["ScheduledReleaseStatus"] | undefined,
	/** All values that are contained in given list. */
	status_in?: Array<ModelTypes["ScheduledReleaseStatus"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	status_not_in?: Array<ModelTypes["ScheduledReleaseStatus"] | undefined> | undefined
};
	/** References ScheduledRelease record uniquely */
["ScheduledReleaseWhereUniqueInput"]: {
	id?: string | undefined
};
	["Seo"]: {
		/** System stage field */
	stage: ModelTypes["Stage"],
	/** Get the document in other stages */
	documentInStages: Array<ModelTypes["Seo"]>,
	/** The time the document was published. Null on documents in draft stage. */
	publishedAt?: ModelTypes["DateTime"] | undefined,
	/** The time the document was updated */
	updatedAt: ModelTypes["DateTime"],
	/** The time the document was created */
	createdAt: ModelTypes["DateTime"],
	/** The unique identifier */
	id: string,
	title: string,
	description: string,
	keywords: Array<string>,
	/** User that last published this document */
	publishedBy?: ModelTypes["User"] | undefined,
	/** User that last updated this document */
	updatedBy?: ModelTypes["User"] | undefined,
	/** User that created this document */
	createdBy?: ModelTypes["User"] | undefined,
	og_image: ModelTypes["Asset"],
	scheduledIn: Array<ModelTypes["ScheduledOperation"]>,
	/** List of Seo versions */
	history: Array<ModelTypes["Version"]>
};
	["SeoConnectInput"]: {
	/** Document to connect */
	where: ModelTypes["SeoWhereUniqueInput"],
	/** Allow to specify document position in list of connected documents, will default to appending at end of list */
	position?: ModelTypes["ConnectPositionInput"] | undefined
};
	/** A connection to a list of items. */
["SeoConnection"]: {
		/** Information to aid in pagination. */
	pageInfo: ModelTypes["PageInfo"],
	/** A list of edges. */
	edges: Array<ModelTypes["SeoEdge"]>,
	aggregate: ModelTypes["Aggregate"]
};
	["SeoCreateInput"]: {
	updatedAt?: ModelTypes["DateTime"] | undefined,
	createdAt?: ModelTypes["DateTime"] | undefined,
	title: string,
	description: string,
	keywords: Array<string>,
	og_image: ModelTypes["AssetCreateOneInlineInput"]
};
	["SeoCreateManyInlineInput"]: {
	/** Create and connect multiple existing Seo documents */
	create?: Array<ModelTypes["SeoCreateInput"]> | undefined,
	/** Connect multiple existing Seo documents */
	connect?: Array<ModelTypes["SeoWhereUniqueInput"]> | undefined
};
	["SeoCreateOneInlineInput"]: {
	/** Create and connect one Seo document */
	create?: ModelTypes["SeoCreateInput"] | undefined,
	/** Connect one existing Seo document */
	connect?: ModelTypes["SeoWhereUniqueInput"] | undefined
};
	/** An edge in a connection. */
["SeoEdge"]: {
		/** The item at the end of the edge. */
	node: ModelTypes["Seo"],
	/** A cursor for use in pagination. */
	cursor: string
};
	/** Identifies documents */
["SeoManyWhereInput"]: {
	/** Contains search across all appropriate fields. */
	_search?: string | undefined,
	/** Logical AND on all given filters. */
	AND?: Array<ModelTypes["SeoWhereInput"]> | undefined,
	/** Logical OR on all given filters. */
	OR?: Array<ModelTypes["SeoWhereInput"]> | undefined,
	/** Logical NOT on all given filters combined by AND. */
	NOT?: Array<ModelTypes["SeoWhereInput"]> | undefined,
	publishedAt?: ModelTypes["DateTime"] | undefined,
	/** All values that are not equal to given value. */
	publishedAt_not?: ModelTypes["DateTime"] | undefined,
	/** All values that are contained in given list. */
	publishedAt_in?: Array<ModelTypes["DateTime"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	publishedAt_not_in?: Array<ModelTypes["DateTime"] | undefined> | undefined,
	/** All values less than the given value. */
	publishedAt_lt?: ModelTypes["DateTime"] | undefined,
	/** All values less than or equal the given value. */
	publishedAt_lte?: ModelTypes["DateTime"] | undefined,
	/** All values greater than the given value. */
	publishedAt_gt?: ModelTypes["DateTime"] | undefined,
	/** All values greater than or equal the given value. */
	publishedAt_gte?: ModelTypes["DateTime"] | undefined,
	updatedAt?: ModelTypes["DateTime"] | undefined,
	/** All values that are not equal to given value. */
	updatedAt_not?: ModelTypes["DateTime"] | undefined,
	/** All values that are contained in given list. */
	updatedAt_in?: Array<ModelTypes["DateTime"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	updatedAt_not_in?: Array<ModelTypes["DateTime"] | undefined> | undefined,
	/** All values less than the given value. */
	updatedAt_lt?: ModelTypes["DateTime"] | undefined,
	/** All values less than or equal the given value. */
	updatedAt_lte?: ModelTypes["DateTime"] | undefined,
	/** All values greater than the given value. */
	updatedAt_gt?: ModelTypes["DateTime"] | undefined,
	/** All values greater than or equal the given value. */
	updatedAt_gte?: ModelTypes["DateTime"] | undefined,
	createdAt?: ModelTypes["DateTime"] | undefined,
	/** All values that are not equal to given value. */
	createdAt_not?: ModelTypes["DateTime"] | undefined,
	/** All values that are contained in given list. */
	createdAt_in?: Array<ModelTypes["DateTime"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	createdAt_not_in?: Array<ModelTypes["DateTime"] | undefined> | undefined,
	/** All values less than the given value. */
	createdAt_lt?: ModelTypes["DateTime"] | undefined,
	/** All values less than or equal the given value. */
	createdAt_lte?: ModelTypes["DateTime"] | undefined,
	/** All values greater than the given value. */
	createdAt_gt?: ModelTypes["DateTime"] | undefined,
	/** All values greater than or equal the given value. */
	createdAt_gte?: ModelTypes["DateTime"] | undefined,
	id?: string | undefined,
	/** All values that are not equal to given value. */
	id_not?: string | undefined,
	/** All values that are contained in given list. */
	id_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	id_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	id_contains?: string | undefined,
	/** All values not containing the given string. */
	id_not_contains?: string | undefined,
	/** All values starting with the given string. */
	id_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	id_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	id_ends_with?: string | undefined,
	/** All values not ending with the given string */
	id_not_ends_with?: string | undefined,
	title?: string | undefined,
	/** All values that are not equal to given value. */
	title_not?: string | undefined,
	/** All values that are contained in given list. */
	title_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	title_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	title_contains?: string | undefined,
	/** All values not containing the given string. */
	title_not_contains?: string | undefined,
	/** All values starting with the given string. */
	title_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	title_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	title_ends_with?: string | undefined,
	/** All values not ending with the given string */
	title_not_ends_with?: string | undefined,
	description?: string | undefined,
	/** All values that are not equal to given value. */
	description_not?: string | undefined,
	/** All values that are contained in given list. */
	description_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	description_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	description_contains?: string | undefined,
	/** All values not containing the given string. */
	description_not_contains?: string | undefined,
	/** All values starting with the given string. */
	description_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	description_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	description_ends_with?: string | undefined,
	/** All values not ending with the given string */
	description_not_ends_with?: string | undefined,
	/** Matches if the field array contains *all* items provided to the filter and order does match */
	keywords?: Array<string> | undefined,
	/** Matches if the field array does not contains *all* items provided to the filter or order does not match */
	keywords_not?: Array<string> | undefined,
	/** Matches if the field array contains *all* items provided to the filter */
	keywords_contains_all?: Array<string> | undefined,
	/** Matches if the field array contains at least one item provided to the filter */
	keywords_contains_some?: Array<string> | undefined,
	/** Matches if the field array does not contain any of the items provided to the filter */
	keywords_contains_none?: Array<string> | undefined,
	publishedBy?: ModelTypes["UserWhereInput"] | undefined,
	updatedBy?: ModelTypes["UserWhereInput"] | undefined,
	createdBy?: ModelTypes["UserWhereInput"] | undefined,
	og_image?: ModelTypes["AssetWhereInput"] | undefined,
	scheduledIn_every?: ModelTypes["ScheduledOperationWhereInput"] | undefined,
	scheduledIn_some?: ModelTypes["ScheduledOperationWhereInput"] | undefined,
	scheduledIn_none?: ModelTypes["ScheduledOperationWhereInput"] | undefined
};
	["SeoOrderByInput"]:SeoOrderByInput;
	["SeoUpdateInput"]: {
	title?: string | undefined,
	description?: string | undefined,
	keywords?: Array<string> | undefined,
	og_image?: ModelTypes["AssetUpdateOneInlineInput"] | undefined
};
	["SeoUpdateManyInlineInput"]: {
	/** Create and connect multiple Seo documents */
	create?: Array<ModelTypes["SeoCreateInput"]> | undefined,
	/** Connect multiple existing Seo documents */
	connect?: Array<ModelTypes["SeoConnectInput"]> | undefined,
	/** Override currently-connected documents with multiple existing Seo documents */
	set?: Array<ModelTypes["SeoWhereUniqueInput"]> | undefined,
	/** Update multiple Seo documents */
	update?: Array<ModelTypes["SeoUpdateWithNestedWhereUniqueInput"]> | undefined,
	/** Upsert multiple Seo documents */
	upsert?: Array<ModelTypes["SeoUpsertWithNestedWhereUniqueInput"]> | undefined,
	/** Disconnect multiple Seo documents */
	disconnect?: Array<ModelTypes["SeoWhereUniqueInput"]> | undefined,
	/** Delete multiple Seo documents */
	delete?: Array<ModelTypes["SeoWhereUniqueInput"]> | undefined
};
	["SeoUpdateManyInput"]: {
	title?: string | undefined,
	description?: string | undefined,
	keywords?: Array<string> | undefined
};
	["SeoUpdateManyWithNestedWhereInput"]: {
	/** Document search */
	where: ModelTypes["SeoWhereInput"],
	/** Update many input */
	data: ModelTypes["SeoUpdateManyInput"]
};
	["SeoUpdateOneInlineInput"]: {
	/** Create and connect one Seo document */
	create?: ModelTypes["SeoCreateInput"] | undefined,
	/** Update single Seo document */
	update?: ModelTypes["SeoUpdateWithNestedWhereUniqueInput"] | undefined,
	/** Upsert single Seo document */
	upsert?: ModelTypes["SeoUpsertWithNestedWhereUniqueInput"] | undefined,
	/** Connect existing Seo document */
	connect?: ModelTypes["SeoWhereUniqueInput"] | undefined,
	/** Disconnect currently connected Seo document */
	disconnect?: boolean | undefined,
	/** Delete currently connected Seo document */
	delete?: boolean | undefined
};
	["SeoUpdateWithNestedWhereUniqueInput"]: {
	/** Unique document search */
	where: ModelTypes["SeoWhereUniqueInput"],
	/** Document to update */
	data: ModelTypes["SeoUpdateInput"]
};
	["SeoUpsertInput"]: {
	/** Create document if it didn't exist */
	create: ModelTypes["SeoCreateInput"],
	/** Update document if it exists */
	update: ModelTypes["SeoUpdateInput"]
};
	["SeoUpsertWithNestedWhereUniqueInput"]: {
	/** Unique document search */
	where: ModelTypes["SeoWhereUniqueInput"],
	/** Upsert data */
	data: ModelTypes["SeoUpsertInput"]
};
	/** Identifies documents */
["SeoWhereInput"]: {
	/** Contains search across all appropriate fields. */
	_search?: string | undefined,
	/** Logical AND on all given filters. */
	AND?: Array<ModelTypes["SeoWhereInput"]> | undefined,
	/** Logical OR on all given filters. */
	OR?: Array<ModelTypes["SeoWhereInput"]> | undefined,
	/** Logical NOT on all given filters combined by AND. */
	NOT?: Array<ModelTypes["SeoWhereInput"]> | undefined,
	publishedAt?: ModelTypes["DateTime"] | undefined,
	/** All values that are not equal to given value. */
	publishedAt_not?: ModelTypes["DateTime"] | undefined,
	/** All values that are contained in given list. */
	publishedAt_in?: Array<ModelTypes["DateTime"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	publishedAt_not_in?: Array<ModelTypes["DateTime"] | undefined> | undefined,
	/** All values less than the given value. */
	publishedAt_lt?: ModelTypes["DateTime"] | undefined,
	/** All values less than or equal the given value. */
	publishedAt_lte?: ModelTypes["DateTime"] | undefined,
	/** All values greater than the given value. */
	publishedAt_gt?: ModelTypes["DateTime"] | undefined,
	/** All values greater than or equal the given value. */
	publishedAt_gte?: ModelTypes["DateTime"] | undefined,
	updatedAt?: ModelTypes["DateTime"] | undefined,
	/** All values that are not equal to given value. */
	updatedAt_not?: ModelTypes["DateTime"] | undefined,
	/** All values that are contained in given list. */
	updatedAt_in?: Array<ModelTypes["DateTime"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	updatedAt_not_in?: Array<ModelTypes["DateTime"] | undefined> | undefined,
	/** All values less than the given value. */
	updatedAt_lt?: ModelTypes["DateTime"] | undefined,
	/** All values less than or equal the given value. */
	updatedAt_lte?: ModelTypes["DateTime"] | undefined,
	/** All values greater than the given value. */
	updatedAt_gt?: ModelTypes["DateTime"] | undefined,
	/** All values greater than or equal the given value. */
	updatedAt_gte?: ModelTypes["DateTime"] | undefined,
	createdAt?: ModelTypes["DateTime"] | undefined,
	/** All values that are not equal to given value. */
	createdAt_not?: ModelTypes["DateTime"] | undefined,
	/** All values that are contained in given list. */
	createdAt_in?: Array<ModelTypes["DateTime"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	createdAt_not_in?: Array<ModelTypes["DateTime"] | undefined> | undefined,
	/** All values less than the given value. */
	createdAt_lt?: ModelTypes["DateTime"] | undefined,
	/** All values less than or equal the given value. */
	createdAt_lte?: ModelTypes["DateTime"] | undefined,
	/** All values greater than the given value. */
	createdAt_gt?: ModelTypes["DateTime"] | undefined,
	/** All values greater than or equal the given value. */
	createdAt_gte?: ModelTypes["DateTime"] | undefined,
	id?: string | undefined,
	/** All values that are not equal to given value. */
	id_not?: string | undefined,
	/** All values that are contained in given list. */
	id_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	id_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	id_contains?: string | undefined,
	/** All values not containing the given string. */
	id_not_contains?: string | undefined,
	/** All values starting with the given string. */
	id_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	id_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	id_ends_with?: string | undefined,
	/** All values not ending with the given string */
	id_not_ends_with?: string | undefined,
	title?: string | undefined,
	/** All values that are not equal to given value. */
	title_not?: string | undefined,
	/** All values that are contained in given list. */
	title_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	title_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	title_contains?: string | undefined,
	/** All values not containing the given string. */
	title_not_contains?: string | undefined,
	/** All values starting with the given string. */
	title_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	title_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	title_ends_with?: string | undefined,
	/** All values not ending with the given string */
	title_not_ends_with?: string | undefined,
	description?: string | undefined,
	/** All values that are not equal to given value. */
	description_not?: string | undefined,
	/** All values that are contained in given list. */
	description_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	description_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	description_contains?: string | undefined,
	/** All values not containing the given string. */
	description_not_contains?: string | undefined,
	/** All values starting with the given string. */
	description_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	description_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	description_ends_with?: string | undefined,
	/** All values not ending with the given string */
	description_not_ends_with?: string | undefined,
	/** Matches if the field array contains *all* items provided to the filter and order does match */
	keywords?: Array<string> | undefined,
	/** Matches if the field array does not contains *all* items provided to the filter or order does not match */
	keywords_not?: Array<string> | undefined,
	/** Matches if the field array contains *all* items provided to the filter */
	keywords_contains_all?: Array<string> | undefined,
	/** Matches if the field array contains at least one item provided to the filter */
	keywords_contains_some?: Array<string> | undefined,
	/** Matches if the field array does not contain any of the items provided to the filter */
	keywords_contains_none?: Array<string> | undefined,
	publishedBy?: ModelTypes["UserWhereInput"] | undefined,
	updatedBy?: ModelTypes["UserWhereInput"] | undefined,
	createdBy?: ModelTypes["UserWhereInput"] | undefined,
	og_image?: ModelTypes["AssetWhereInput"] | undefined,
	scheduledIn_every?: ModelTypes["ScheduledOperationWhereInput"] | undefined,
	scheduledIn_some?: ModelTypes["ScheduledOperationWhereInput"] | undefined,
	scheduledIn_none?: ModelTypes["ScheduledOperationWhereInput"] | undefined
};
	/** References Seo record uniquely */
["SeoWhereUniqueInput"]: {
	id?: string | undefined
};
	["Skill"]: {
		/** System stage field */
	stage: ModelTypes["Stage"],
	/** The unique identifier */
	id: string,
	name: string,
	icon: ModelTypes["Asset"]
};
	["SkillCategory"]: {
		/** System stage field */
	stage: ModelTypes["Stage"],
	/** Get the document in other stages */
	documentInStages: Array<ModelTypes["SkillCategory"]>,
	/** The time the document was published. Null on documents in draft stage. */
	publishedAt?: ModelTypes["DateTime"] | undefined,
	/** The time the document was updated */
	updatedAt: ModelTypes["DateTime"],
	/** The time the document was created */
	createdAt: ModelTypes["DateTime"],
	/** The unique identifier */
	id: string,
	name: string,
	skillsList: Array<ModelTypes["SkillCategoryskillsListUnion"]>,
	/** User that last published this document */
	publishedBy?: ModelTypes["User"] | undefined,
	/** User that last updated this document */
	updatedBy?: ModelTypes["User"] | undefined,
	/** User that created this document */
	createdBy?: ModelTypes["User"] | undefined,
	scheduledIn: Array<ModelTypes["ScheduledOperation"]>,
	/** List of SkillCategory versions */
	history: Array<ModelTypes["Version"]>
};
	["SkillCategoryConnectInput"]: {
	/** Document to connect */
	where: ModelTypes["SkillCategoryWhereUniqueInput"],
	/** Allow to specify document position in list of connected documents, will default to appending at end of list */
	position?: ModelTypes["ConnectPositionInput"] | undefined
};
	/** A connection to a list of items. */
["SkillCategoryConnection"]: {
		/** Information to aid in pagination. */
	pageInfo: ModelTypes["PageInfo"],
	/** A list of edges. */
	edges: Array<ModelTypes["SkillCategoryEdge"]>,
	aggregate: ModelTypes["Aggregate"]
};
	["SkillCategoryCreateInput"]: {
	updatedAt?: ModelTypes["DateTime"] | undefined,
	createdAt?: ModelTypes["DateTime"] | undefined,
	name: string,
	skillsList?: ModelTypes["SkillCategoryskillsListUnionCreateManyInlineInput"] | undefined
};
	["SkillCategoryCreateManyInlineInput"]: {
	/** Create and connect multiple existing SkillCategory documents */
	create?: Array<ModelTypes["SkillCategoryCreateInput"]> | undefined,
	/** Connect multiple existing SkillCategory documents */
	connect?: Array<ModelTypes["SkillCategoryWhereUniqueInput"]> | undefined
};
	["SkillCategoryCreateOneInlineInput"]: {
	/** Create and connect one SkillCategory document */
	create?: ModelTypes["SkillCategoryCreateInput"] | undefined,
	/** Connect one existing SkillCategory document */
	connect?: ModelTypes["SkillCategoryWhereUniqueInput"] | undefined
};
	/** An edge in a connection. */
["SkillCategoryEdge"]: {
		/** The item at the end of the edge. */
	node: ModelTypes["SkillCategory"],
	/** A cursor for use in pagination. */
	cursor: string
};
	/** Identifies documents */
["SkillCategoryManyWhereInput"]: {
	/** Contains search across all appropriate fields. */
	_search?: string | undefined,
	/** Logical AND on all given filters. */
	AND?: Array<ModelTypes["SkillCategoryWhereInput"]> | undefined,
	/** Logical OR on all given filters. */
	OR?: Array<ModelTypes["SkillCategoryWhereInput"]> | undefined,
	/** Logical NOT on all given filters combined by AND. */
	NOT?: Array<ModelTypes["SkillCategoryWhereInput"]> | undefined,
	publishedAt?: ModelTypes["DateTime"] | undefined,
	/** All values that are not equal to given value. */
	publishedAt_not?: ModelTypes["DateTime"] | undefined,
	/** All values that are contained in given list. */
	publishedAt_in?: Array<ModelTypes["DateTime"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	publishedAt_not_in?: Array<ModelTypes["DateTime"] | undefined> | undefined,
	/** All values less than the given value. */
	publishedAt_lt?: ModelTypes["DateTime"] | undefined,
	/** All values less than or equal the given value. */
	publishedAt_lte?: ModelTypes["DateTime"] | undefined,
	/** All values greater than the given value. */
	publishedAt_gt?: ModelTypes["DateTime"] | undefined,
	/** All values greater than or equal the given value. */
	publishedAt_gte?: ModelTypes["DateTime"] | undefined,
	updatedAt?: ModelTypes["DateTime"] | undefined,
	/** All values that are not equal to given value. */
	updatedAt_not?: ModelTypes["DateTime"] | undefined,
	/** All values that are contained in given list. */
	updatedAt_in?: Array<ModelTypes["DateTime"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	updatedAt_not_in?: Array<ModelTypes["DateTime"] | undefined> | undefined,
	/** All values less than the given value. */
	updatedAt_lt?: ModelTypes["DateTime"] | undefined,
	/** All values less than or equal the given value. */
	updatedAt_lte?: ModelTypes["DateTime"] | undefined,
	/** All values greater than the given value. */
	updatedAt_gt?: ModelTypes["DateTime"] | undefined,
	/** All values greater than or equal the given value. */
	updatedAt_gte?: ModelTypes["DateTime"] | undefined,
	createdAt?: ModelTypes["DateTime"] | undefined,
	/** All values that are not equal to given value. */
	createdAt_not?: ModelTypes["DateTime"] | undefined,
	/** All values that are contained in given list. */
	createdAt_in?: Array<ModelTypes["DateTime"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	createdAt_not_in?: Array<ModelTypes["DateTime"] | undefined> | undefined,
	/** All values less than the given value. */
	createdAt_lt?: ModelTypes["DateTime"] | undefined,
	/** All values less than or equal the given value. */
	createdAt_lte?: ModelTypes["DateTime"] | undefined,
	/** All values greater than the given value. */
	createdAt_gt?: ModelTypes["DateTime"] | undefined,
	/** All values greater than or equal the given value. */
	createdAt_gte?: ModelTypes["DateTime"] | undefined,
	id?: string | undefined,
	/** All values that are not equal to given value. */
	id_not?: string | undefined,
	/** All values that are contained in given list. */
	id_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	id_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	id_contains?: string | undefined,
	/** All values not containing the given string. */
	id_not_contains?: string | undefined,
	/** All values starting with the given string. */
	id_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	id_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	id_ends_with?: string | undefined,
	/** All values not ending with the given string */
	id_not_ends_with?: string | undefined,
	name?: string | undefined,
	/** All values that are not equal to given value. */
	name_not?: string | undefined,
	/** All values that are contained in given list. */
	name_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	name_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	name_contains?: string | undefined,
	/** All values not containing the given string. */
	name_not_contains?: string | undefined,
	/** All values starting with the given string. */
	name_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	name_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	name_ends_with?: string | undefined,
	/** All values not ending with the given string */
	name_not_ends_with?: string | undefined,
	publishedBy?: ModelTypes["UserWhereInput"] | undefined,
	updatedBy?: ModelTypes["UserWhereInput"] | undefined,
	createdBy?: ModelTypes["UserWhereInput"] | undefined,
	scheduledIn_every?: ModelTypes["ScheduledOperationWhereInput"] | undefined,
	scheduledIn_some?: ModelTypes["ScheduledOperationWhereInput"] | undefined,
	scheduledIn_none?: ModelTypes["ScheduledOperationWhereInput"] | undefined
};
	["SkillCategoryOrderByInput"]:SkillCategoryOrderByInput;
	["SkillCategoryUpdateInput"]: {
	name?: string | undefined,
	skillsList?: ModelTypes["SkillCategoryskillsListUnionUpdateManyInlineInput"] | undefined
};
	["SkillCategoryUpdateManyInlineInput"]: {
	/** Create and connect multiple SkillCategory documents */
	create?: Array<ModelTypes["SkillCategoryCreateInput"]> | undefined,
	/** Connect multiple existing SkillCategory documents */
	connect?: Array<ModelTypes["SkillCategoryConnectInput"]> | undefined,
	/** Override currently-connected documents with multiple existing SkillCategory documents */
	set?: Array<ModelTypes["SkillCategoryWhereUniqueInput"]> | undefined,
	/** Update multiple SkillCategory documents */
	update?: Array<ModelTypes["SkillCategoryUpdateWithNestedWhereUniqueInput"]> | undefined,
	/** Upsert multiple SkillCategory documents */
	upsert?: Array<ModelTypes["SkillCategoryUpsertWithNestedWhereUniqueInput"]> | undefined,
	/** Disconnect multiple SkillCategory documents */
	disconnect?: Array<ModelTypes["SkillCategoryWhereUniqueInput"]> | undefined,
	/** Delete multiple SkillCategory documents */
	delete?: Array<ModelTypes["SkillCategoryWhereUniqueInput"]> | undefined
};
	["SkillCategoryUpdateManyInput"]: {
	/** No fields in updateMany data input */
	_?: string | undefined
};
	["SkillCategoryUpdateManyWithNestedWhereInput"]: {
	/** Document search */
	where: ModelTypes["SkillCategoryWhereInput"],
	/** Update many input */
	data: ModelTypes["SkillCategoryUpdateManyInput"]
};
	["SkillCategoryUpdateOneInlineInput"]: {
	/** Create and connect one SkillCategory document */
	create?: ModelTypes["SkillCategoryCreateInput"] | undefined,
	/** Update single SkillCategory document */
	update?: ModelTypes["SkillCategoryUpdateWithNestedWhereUniqueInput"] | undefined,
	/** Upsert single SkillCategory document */
	upsert?: ModelTypes["SkillCategoryUpsertWithNestedWhereUniqueInput"] | undefined,
	/** Connect existing SkillCategory document */
	connect?: ModelTypes["SkillCategoryWhereUniqueInput"] | undefined,
	/** Disconnect currently connected SkillCategory document */
	disconnect?: boolean | undefined,
	/** Delete currently connected SkillCategory document */
	delete?: boolean | undefined
};
	["SkillCategoryUpdateWithNestedWhereUniqueInput"]: {
	/** Unique document search */
	where: ModelTypes["SkillCategoryWhereUniqueInput"],
	/** Document to update */
	data: ModelTypes["SkillCategoryUpdateInput"]
};
	["SkillCategoryUpsertInput"]: {
	/** Create document if it didn't exist */
	create: ModelTypes["SkillCategoryCreateInput"],
	/** Update document if it exists */
	update: ModelTypes["SkillCategoryUpdateInput"]
};
	["SkillCategoryUpsertWithNestedWhereUniqueInput"]: {
	/** Unique document search */
	where: ModelTypes["SkillCategoryWhereUniqueInput"],
	/** Upsert data */
	data: ModelTypes["SkillCategoryUpsertInput"]
};
	/** Identifies documents */
["SkillCategoryWhereInput"]: {
	/** Contains search across all appropriate fields. */
	_search?: string | undefined,
	/** Logical AND on all given filters. */
	AND?: Array<ModelTypes["SkillCategoryWhereInput"]> | undefined,
	/** Logical OR on all given filters. */
	OR?: Array<ModelTypes["SkillCategoryWhereInput"]> | undefined,
	/** Logical NOT on all given filters combined by AND. */
	NOT?: Array<ModelTypes["SkillCategoryWhereInput"]> | undefined,
	publishedAt?: ModelTypes["DateTime"] | undefined,
	/** All values that are not equal to given value. */
	publishedAt_not?: ModelTypes["DateTime"] | undefined,
	/** All values that are contained in given list. */
	publishedAt_in?: Array<ModelTypes["DateTime"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	publishedAt_not_in?: Array<ModelTypes["DateTime"] | undefined> | undefined,
	/** All values less than the given value. */
	publishedAt_lt?: ModelTypes["DateTime"] | undefined,
	/** All values less than or equal the given value. */
	publishedAt_lte?: ModelTypes["DateTime"] | undefined,
	/** All values greater than the given value. */
	publishedAt_gt?: ModelTypes["DateTime"] | undefined,
	/** All values greater than or equal the given value. */
	publishedAt_gte?: ModelTypes["DateTime"] | undefined,
	updatedAt?: ModelTypes["DateTime"] | undefined,
	/** All values that are not equal to given value. */
	updatedAt_not?: ModelTypes["DateTime"] | undefined,
	/** All values that are contained in given list. */
	updatedAt_in?: Array<ModelTypes["DateTime"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	updatedAt_not_in?: Array<ModelTypes["DateTime"] | undefined> | undefined,
	/** All values less than the given value. */
	updatedAt_lt?: ModelTypes["DateTime"] | undefined,
	/** All values less than or equal the given value. */
	updatedAt_lte?: ModelTypes["DateTime"] | undefined,
	/** All values greater than the given value. */
	updatedAt_gt?: ModelTypes["DateTime"] | undefined,
	/** All values greater than or equal the given value. */
	updatedAt_gte?: ModelTypes["DateTime"] | undefined,
	createdAt?: ModelTypes["DateTime"] | undefined,
	/** All values that are not equal to given value. */
	createdAt_not?: ModelTypes["DateTime"] | undefined,
	/** All values that are contained in given list. */
	createdAt_in?: Array<ModelTypes["DateTime"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	createdAt_not_in?: Array<ModelTypes["DateTime"] | undefined> | undefined,
	/** All values less than the given value. */
	createdAt_lt?: ModelTypes["DateTime"] | undefined,
	/** All values less than or equal the given value. */
	createdAt_lte?: ModelTypes["DateTime"] | undefined,
	/** All values greater than the given value. */
	createdAt_gt?: ModelTypes["DateTime"] | undefined,
	/** All values greater than or equal the given value. */
	createdAt_gte?: ModelTypes["DateTime"] | undefined,
	id?: string | undefined,
	/** All values that are not equal to given value. */
	id_not?: string | undefined,
	/** All values that are contained in given list. */
	id_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	id_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	id_contains?: string | undefined,
	/** All values not containing the given string. */
	id_not_contains?: string | undefined,
	/** All values starting with the given string. */
	id_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	id_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	id_ends_with?: string | undefined,
	/** All values not ending with the given string */
	id_not_ends_with?: string | undefined,
	name?: string | undefined,
	/** All values that are not equal to given value. */
	name_not?: string | undefined,
	/** All values that are contained in given list. */
	name_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	name_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	name_contains?: string | undefined,
	/** All values not containing the given string. */
	name_not_contains?: string | undefined,
	/** All values starting with the given string. */
	name_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	name_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	name_ends_with?: string | undefined,
	/** All values not ending with the given string */
	name_not_ends_with?: string | undefined,
	publishedBy?: ModelTypes["UserWhereInput"] | undefined,
	updatedBy?: ModelTypes["UserWhereInput"] | undefined,
	createdBy?: ModelTypes["UserWhereInput"] | undefined,
	scheduledIn_every?: ModelTypes["ScheduledOperationWhereInput"] | undefined,
	scheduledIn_some?: ModelTypes["ScheduledOperationWhereInput"] | undefined,
	scheduledIn_none?: ModelTypes["ScheduledOperationWhereInput"] | undefined
};
	/** References SkillCategory record uniquely */
["SkillCategoryWhereUniqueInput"]: {
	id?: string | undefined,
	name?: string | undefined
};
	["SkillCategoryskillsListUnion"]:ModelTypes["Skill"];
	["SkillCategoryskillsListUnionConnectInput"]: {
	Skill?: ModelTypes["SkillConnectInput"] | undefined
};
	["SkillCategoryskillsListUnionCreateInput"]: {
	Skill?: ModelTypes["SkillCreateInput"] | undefined
};
	["SkillCategoryskillsListUnionCreateManyInlineInput"]: {
	/** Create and connect multiple existing SkillCategoryskillsListUnion documents */
	create?: Array<ModelTypes["SkillCategoryskillsListUnionCreateInput"]> | undefined
};
	["SkillCategoryskillsListUnionCreateOneInlineInput"]: {
	/** Create and connect one SkillCategoryskillsListUnion document */
	create?: ModelTypes["SkillCategoryskillsListUnionCreateInput"] | undefined
};
	["SkillCategoryskillsListUnionCreateWithPositionInput"]: {
	Skill?: ModelTypes["SkillCreateWithPositionInput"] | undefined
};
	["SkillCategoryskillsListUnionUpdateInput"]: {
	Skill?: ModelTypes["SkillUpdateInput"] | undefined
};
	["SkillCategoryskillsListUnionUpdateManyInlineInput"]: {
	/** Create and connect multiple SkillCategoryskillsListUnion component instances */
	create?: Array<ModelTypes["SkillCategoryskillsListUnionCreateWithPositionInput"]> | undefined,
	/** Update multiple SkillCategoryskillsListUnion component instances */
	update?: Array<ModelTypes["SkillCategoryskillsListUnionUpdateWithNestedWhereUniqueAndPositionInput"]> | undefined,
	/** Upsert multiple SkillCategoryskillsListUnion component instances */
	upsert?: Array<ModelTypes["SkillCategoryskillsListUnionUpsertWithNestedWhereUniqueAndPositionInput"]> | undefined,
	/** Delete multiple SkillCategoryskillsListUnion documents */
	delete?: Array<ModelTypes["SkillCategoryskillsListUnionWhereUniqueInput"]> | undefined
};
	["SkillCategoryskillsListUnionUpdateManyWithNestedWhereInput"]: {
	Skill?: ModelTypes["SkillUpdateManyWithNestedWhereInput"] | undefined
};
	["SkillCategoryskillsListUnionUpdateOneInlineInput"]: {
	/** Create and connect one SkillCategoryskillsListUnion document */
	create?: ModelTypes["SkillCategoryskillsListUnionCreateInput"] | undefined,
	/** Update single SkillCategoryskillsListUnion document */
	update?: ModelTypes["SkillCategoryskillsListUnionUpdateWithNestedWhereUniqueInput"] | undefined,
	/** Upsert single SkillCategoryskillsListUnion document */
	upsert?: ModelTypes["SkillCategoryskillsListUnionUpsertWithNestedWhereUniqueInput"] | undefined,
	/** Delete currently connected SkillCategoryskillsListUnion document */
	delete?: boolean | undefined
};
	["SkillCategoryskillsListUnionUpdateWithNestedWhereUniqueAndPositionInput"]: {
	Skill?: ModelTypes["SkillUpdateWithNestedWhereUniqueAndPositionInput"] | undefined
};
	["SkillCategoryskillsListUnionUpdateWithNestedWhereUniqueInput"]: {
	Skill?: ModelTypes["SkillUpdateWithNestedWhereUniqueInput"] | undefined
};
	["SkillCategoryskillsListUnionUpsertWithNestedWhereUniqueAndPositionInput"]: {
	Skill?: ModelTypes["SkillUpsertWithNestedWhereUniqueAndPositionInput"] | undefined
};
	["SkillCategoryskillsListUnionUpsertWithNestedWhereUniqueInput"]: {
	Skill?: ModelTypes["SkillUpsertWithNestedWhereUniqueInput"] | undefined
};
	["SkillCategoryskillsListUnionWhereInput"]: {
	Skill?: ModelTypes["SkillWhereInput"] | undefined
};
	["SkillCategoryskillsListUnionWhereUniqueInput"]: {
	Skill?: ModelTypes["SkillWhereUniqueInput"] | undefined
};
	["SkillConnectInput"]: {
	/** Document to connect */
	where: ModelTypes["SkillWhereUniqueInput"],
	/** Allow to specify document position in list of connected documents, will default to appending at end of list */
	position?: ModelTypes["ConnectPositionInput"] | undefined
};
	/** A connection to a list of items. */
["SkillConnection"]: {
		/** Information to aid in pagination. */
	pageInfo: ModelTypes["PageInfo"],
	/** A list of edges. */
	edges: Array<ModelTypes["SkillEdge"]>,
	aggregate: ModelTypes["Aggregate"]
};
	["SkillCreateInput"]: {
	name: string,
	icon: ModelTypes["AssetCreateOneInlineInput"]
};
	["SkillCreateManyInlineInput"]: {
	/** Create and connect multiple existing Skill documents */
	create?: Array<ModelTypes["SkillCreateInput"]> | undefined
};
	["SkillCreateOneInlineInput"]: {
	/** Create and connect one Skill document */
	create?: ModelTypes["SkillCreateInput"] | undefined
};
	["SkillCreateWithPositionInput"]: {
	/** Position in the list of existing component instances, will default to appending at the end of list */
	position?: ModelTypes["ConnectPositionInput"] | undefined,
	/** Document to create */
	data: ModelTypes["SkillCreateInput"]
};
	/** An edge in a connection. */
["SkillEdge"]: {
		/** The item at the end of the edge. */
	node: ModelTypes["Skill"],
	/** A cursor for use in pagination. */
	cursor: string
};
	/** Identifies documents */
["SkillManyWhereInput"]: {
	/** Contains search across all appropriate fields. */
	_search?: string | undefined,
	/** Logical AND on all given filters. */
	AND?: Array<ModelTypes["SkillWhereInput"]> | undefined,
	/** Logical OR on all given filters. */
	OR?: Array<ModelTypes["SkillWhereInput"]> | undefined,
	/** Logical NOT on all given filters combined by AND. */
	NOT?: Array<ModelTypes["SkillWhereInput"]> | undefined,
	id?: string | undefined,
	/** All values that are not equal to given value. */
	id_not?: string | undefined,
	/** All values that are contained in given list. */
	id_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	id_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	id_contains?: string | undefined,
	/** All values not containing the given string. */
	id_not_contains?: string | undefined,
	/** All values starting with the given string. */
	id_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	id_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	id_ends_with?: string | undefined,
	/** All values not ending with the given string */
	id_not_ends_with?: string | undefined,
	name?: string | undefined,
	/** All values that are not equal to given value. */
	name_not?: string | undefined,
	/** All values that are contained in given list. */
	name_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	name_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	name_contains?: string | undefined,
	/** All values not containing the given string. */
	name_not_contains?: string | undefined,
	/** All values starting with the given string. */
	name_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	name_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	name_ends_with?: string | undefined,
	/** All values not ending with the given string */
	name_not_ends_with?: string | undefined,
	icon?: ModelTypes["AssetWhereInput"] | undefined
};
	["SkillOrderByInput"]:SkillOrderByInput;
	["SkillParent"]:ModelTypes["SkillCategory"];
	["SkillParentConnectInput"]: {
	SkillCategory?: ModelTypes["SkillCategoryConnectInput"] | undefined
};
	["SkillParentCreateInput"]: {
	SkillCategory?: ModelTypes["SkillCategoryCreateInput"] | undefined
};
	["SkillParentCreateManyInlineInput"]: {
	/** Create and connect multiple existing SkillParent documents */
	create?: Array<ModelTypes["SkillParentCreateInput"]> | undefined,
	/** Connect multiple existing SkillParent documents */
	connect?: Array<ModelTypes["SkillParentWhereUniqueInput"]> | undefined
};
	["SkillParentCreateOneInlineInput"]: {
	/** Create and connect one SkillParent document */
	create?: ModelTypes["SkillParentCreateInput"] | undefined,
	/** Connect one existing SkillParent document */
	connect?: ModelTypes["SkillParentWhereUniqueInput"] | undefined
};
	["SkillParentUpdateInput"]: {
	SkillCategory?: ModelTypes["SkillCategoryUpdateInput"] | undefined
};
	["SkillParentUpdateManyInlineInput"]: {
	/** Create and connect multiple SkillParent documents */
	create?: Array<ModelTypes["SkillParentCreateInput"]> | undefined,
	/** Connect multiple existing SkillParent documents */
	connect?: Array<ModelTypes["SkillParentConnectInput"]> | undefined,
	/** Override currently-connected documents with multiple existing SkillParent documents */
	set?: Array<ModelTypes["SkillParentWhereUniqueInput"]> | undefined,
	/** Update multiple SkillParent documents */
	update?: Array<ModelTypes["SkillParentUpdateWithNestedWhereUniqueInput"]> | undefined,
	/** Upsert multiple SkillParent documents */
	upsert?: Array<ModelTypes["SkillParentUpsertWithNestedWhereUniqueInput"]> | undefined,
	/** Disconnect multiple SkillParent documents */
	disconnect?: Array<ModelTypes["SkillParentWhereUniqueInput"]> | undefined,
	/** Delete multiple SkillParent documents */
	delete?: Array<ModelTypes["SkillParentWhereUniqueInput"]> | undefined
};
	["SkillParentUpdateManyWithNestedWhereInput"]: {
	SkillCategory?: ModelTypes["SkillCategoryUpdateManyWithNestedWhereInput"] | undefined
};
	["SkillParentUpdateOneInlineInput"]: {
	/** Create and connect one SkillParent document */
	create?: ModelTypes["SkillParentCreateInput"] | undefined,
	/** Update single SkillParent document */
	update?: ModelTypes["SkillParentUpdateWithNestedWhereUniqueInput"] | undefined,
	/** Upsert single SkillParent document */
	upsert?: ModelTypes["SkillParentUpsertWithNestedWhereUniqueInput"] | undefined,
	/** Connect existing SkillParent document */
	connect?: ModelTypes["SkillParentWhereUniqueInput"] | undefined,
	/** Disconnect currently connected SkillParent document */
	disconnect?: boolean | undefined,
	/** Delete currently connected SkillParent document */
	delete?: boolean | undefined
};
	["SkillParentUpdateWithNestedWhereUniqueInput"]: {
	SkillCategory?: ModelTypes["SkillCategoryUpdateWithNestedWhereUniqueInput"] | undefined
};
	["SkillParentUpsertWithNestedWhereUniqueInput"]: {
	SkillCategory?: ModelTypes["SkillCategoryUpsertWithNestedWhereUniqueInput"] | undefined
};
	["SkillParentWhereInput"]: {
	SkillCategory?: ModelTypes["SkillCategoryWhereInput"] | undefined
};
	["SkillParentWhereUniqueInput"]: {
	SkillCategory?: ModelTypes["SkillCategoryWhereUniqueInput"] | undefined
};
	["SkillUpdateInput"]: {
	name?: string | undefined,
	icon?: ModelTypes["AssetUpdateOneInlineInput"] | undefined
};
	["SkillUpdateManyInlineInput"]: {
	/** Create and connect multiple Skill component instances */
	create?: Array<ModelTypes["SkillCreateWithPositionInput"]> | undefined,
	/** Update multiple Skill component instances */
	update?: Array<ModelTypes["SkillUpdateWithNestedWhereUniqueAndPositionInput"]> | undefined,
	/** Upsert multiple Skill component instances */
	upsert?: Array<ModelTypes["SkillUpsertWithNestedWhereUniqueAndPositionInput"]> | undefined,
	/** Delete multiple Skill documents */
	delete?: Array<ModelTypes["SkillWhereUniqueInput"]> | undefined
};
	["SkillUpdateManyInput"]: {
	/** No fields in updateMany data input */
	_?: string | undefined
};
	["SkillUpdateManyWithNestedWhereInput"]: {
	/** Document search */
	where: ModelTypes["SkillWhereInput"],
	/** Update many input */
	data: ModelTypes["SkillUpdateManyInput"]
};
	["SkillUpdateOneInlineInput"]: {
	/** Create and connect one Skill document */
	create?: ModelTypes["SkillCreateInput"] | undefined,
	/** Update single Skill document */
	update?: ModelTypes["SkillUpdateWithNestedWhereUniqueInput"] | undefined,
	/** Upsert single Skill document */
	upsert?: ModelTypes["SkillUpsertWithNestedWhereUniqueInput"] | undefined,
	/** Delete currently connected Skill document */
	delete?: boolean | undefined
};
	["SkillUpdateWithNestedWhereUniqueAndPositionInput"]: {
	/** Unique component instance search */
	where: ModelTypes["SkillWhereUniqueInput"],
	/** Position in the list of existing component instances, will default to appending at the end of list */
	position?: ModelTypes["ConnectPositionInput"] | undefined,
	/** Document to update */
	data?: ModelTypes["SkillUpdateInput"] | undefined
};
	["SkillUpdateWithNestedWhereUniqueInput"]: {
	/** Unique document search */
	where: ModelTypes["SkillWhereUniqueInput"],
	/** Document to update */
	data: ModelTypes["SkillUpdateInput"]
};
	["SkillUpsertInput"]: {
	/** Create document if it didn't exist */
	create: ModelTypes["SkillCreateInput"],
	/** Update document if it exists */
	update: ModelTypes["SkillUpdateInput"]
};
	["SkillUpsertWithNestedWhereUniqueAndPositionInput"]: {
	/** Unique component instance search */
	where: ModelTypes["SkillWhereUniqueInput"],
	/** Position in the list of existing component instances, will default to appending at the end of list */
	position?: ModelTypes["ConnectPositionInput"] | undefined,
	/** Document to upsert */
	data?: ModelTypes["SkillUpsertInput"] | undefined
};
	["SkillUpsertWithNestedWhereUniqueInput"]: {
	/** Unique document search */
	where: ModelTypes["SkillWhereUniqueInput"],
	/** Upsert data */
	data: ModelTypes["SkillUpsertInput"]
};
	/** Identifies documents */
["SkillWhereInput"]: {
	/** Contains search across all appropriate fields. */
	_search?: string | undefined,
	/** Logical AND on all given filters. */
	AND?: Array<ModelTypes["SkillWhereInput"]> | undefined,
	/** Logical OR on all given filters. */
	OR?: Array<ModelTypes["SkillWhereInput"]> | undefined,
	/** Logical NOT on all given filters combined by AND. */
	NOT?: Array<ModelTypes["SkillWhereInput"]> | undefined,
	id?: string | undefined,
	/** All values that are not equal to given value. */
	id_not?: string | undefined,
	/** All values that are contained in given list. */
	id_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	id_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	id_contains?: string | undefined,
	/** All values not containing the given string. */
	id_not_contains?: string | undefined,
	/** All values starting with the given string. */
	id_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	id_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	id_ends_with?: string | undefined,
	/** All values not ending with the given string */
	id_not_ends_with?: string | undefined,
	name?: string | undefined,
	/** All values that are not equal to given value. */
	name_not?: string | undefined,
	/** All values that are contained in given list. */
	name_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	name_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	name_contains?: string | undefined,
	/** All values not containing the given string. */
	name_not_contains?: string | undefined,
	/** All values starting with the given string. */
	name_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	name_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	name_ends_with?: string | undefined,
	/** All values not ending with the given string */
	name_not_ends_with?: string | undefined,
	icon?: ModelTypes["AssetWhereInput"] | undefined
};
	/** References Skill record uniquely */
["SkillWhereUniqueInput"]: {
	id?: string | undefined,
	name?: string | undefined
};
	["Stage"]:Stage;
	["SystemDateTimeFieldVariation"]:SystemDateTimeFieldVariation;
	["Technologies"]:Technologies;
	["UnpublishLocaleInput"]: {
	/** Locales to unpublish */
	locale: ModelTypes["Locale"],
	/** Stages to unpublish selected locales from */
	stages: Array<ModelTypes["Stage"]>
};
	/** User system model */
["User"]: {
		/** System stage field */
	stage: ModelTypes["Stage"],
	/** Get the document in other stages */
	documentInStages: Array<ModelTypes["User"]>,
	/** Flag to determine if user is active or not */
	isActive: boolean,
	/** Profile Picture url */
	picture?: string | undefined,
	/** The username */
	name: string,
	/** The time the document was published. Null on documents in draft stage. */
	publishedAt?: ModelTypes["DateTime"] | undefined,
	/** The time the document was updated */
	updatedAt: ModelTypes["DateTime"],
	/** The time the document was created */
	createdAt: ModelTypes["DateTime"],
	/** The unique identifier */
	id: string,
	/** User Kind. Can be either MEMBER, PAT or PUBLIC */
	kind: ModelTypes["UserKind"]
};
	["UserConnectInput"]: {
	/** Document to connect */
	where: ModelTypes["UserWhereUniqueInput"],
	/** Allow to specify document position in list of connected documents, will default to appending at end of list */
	position?: ModelTypes["ConnectPositionInput"] | undefined
};
	/** A connection to a list of items. */
["UserConnection"]: {
		/** Information to aid in pagination. */
	pageInfo: ModelTypes["PageInfo"],
	/** A list of edges. */
	edges: Array<ModelTypes["UserEdge"]>,
	aggregate: ModelTypes["Aggregate"]
};
	["UserCreateManyInlineInput"]: {
	/** Connect multiple existing User documents */
	connect?: Array<ModelTypes["UserWhereUniqueInput"]> | undefined
};
	["UserCreateOneInlineInput"]: {
	/** Connect one existing User document */
	connect?: ModelTypes["UserWhereUniqueInput"] | undefined
};
	/** An edge in a connection. */
["UserEdge"]: {
		/** The item at the end of the edge. */
	node: ModelTypes["User"],
	/** A cursor for use in pagination. */
	cursor: string
};
	["UserKind"]:UserKind;
	/** Identifies documents */
["UserManyWhereInput"]: {
	/** Contains search across all appropriate fields. */
	_search?: string | undefined,
	/** Logical AND on all given filters. */
	AND?: Array<ModelTypes["UserWhereInput"]> | undefined,
	/** Logical OR on all given filters. */
	OR?: Array<ModelTypes["UserWhereInput"]> | undefined,
	/** Logical NOT on all given filters combined by AND. */
	NOT?: Array<ModelTypes["UserWhereInput"]> | undefined,
	isActive?: boolean | undefined,
	/** All values that are not equal to given value. */
	isActive_not?: boolean | undefined,
	picture?: string | undefined,
	/** All values that are not equal to given value. */
	picture_not?: string | undefined,
	/** All values that are contained in given list. */
	picture_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	picture_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	picture_contains?: string | undefined,
	/** All values not containing the given string. */
	picture_not_contains?: string | undefined,
	/** All values starting with the given string. */
	picture_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	picture_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	picture_ends_with?: string | undefined,
	/** All values not ending with the given string */
	picture_not_ends_with?: string | undefined,
	name?: string | undefined,
	/** All values that are not equal to given value. */
	name_not?: string | undefined,
	/** All values that are contained in given list. */
	name_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	name_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	name_contains?: string | undefined,
	/** All values not containing the given string. */
	name_not_contains?: string | undefined,
	/** All values starting with the given string. */
	name_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	name_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	name_ends_with?: string | undefined,
	/** All values not ending with the given string */
	name_not_ends_with?: string | undefined,
	publishedAt?: ModelTypes["DateTime"] | undefined,
	/** All values that are not equal to given value. */
	publishedAt_not?: ModelTypes["DateTime"] | undefined,
	/** All values that are contained in given list. */
	publishedAt_in?: Array<ModelTypes["DateTime"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	publishedAt_not_in?: Array<ModelTypes["DateTime"] | undefined> | undefined,
	/** All values less than the given value. */
	publishedAt_lt?: ModelTypes["DateTime"] | undefined,
	/** All values less than or equal the given value. */
	publishedAt_lte?: ModelTypes["DateTime"] | undefined,
	/** All values greater than the given value. */
	publishedAt_gt?: ModelTypes["DateTime"] | undefined,
	/** All values greater than or equal the given value. */
	publishedAt_gte?: ModelTypes["DateTime"] | undefined,
	updatedAt?: ModelTypes["DateTime"] | undefined,
	/** All values that are not equal to given value. */
	updatedAt_not?: ModelTypes["DateTime"] | undefined,
	/** All values that are contained in given list. */
	updatedAt_in?: Array<ModelTypes["DateTime"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	updatedAt_not_in?: Array<ModelTypes["DateTime"] | undefined> | undefined,
	/** All values less than the given value. */
	updatedAt_lt?: ModelTypes["DateTime"] | undefined,
	/** All values less than or equal the given value. */
	updatedAt_lte?: ModelTypes["DateTime"] | undefined,
	/** All values greater than the given value. */
	updatedAt_gt?: ModelTypes["DateTime"] | undefined,
	/** All values greater than or equal the given value. */
	updatedAt_gte?: ModelTypes["DateTime"] | undefined,
	createdAt?: ModelTypes["DateTime"] | undefined,
	/** All values that are not equal to given value. */
	createdAt_not?: ModelTypes["DateTime"] | undefined,
	/** All values that are contained in given list. */
	createdAt_in?: Array<ModelTypes["DateTime"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	createdAt_not_in?: Array<ModelTypes["DateTime"] | undefined> | undefined,
	/** All values less than the given value. */
	createdAt_lt?: ModelTypes["DateTime"] | undefined,
	/** All values less than or equal the given value. */
	createdAt_lte?: ModelTypes["DateTime"] | undefined,
	/** All values greater than the given value. */
	createdAt_gt?: ModelTypes["DateTime"] | undefined,
	/** All values greater than or equal the given value. */
	createdAt_gte?: ModelTypes["DateTime"] | undefined,
	id?: string | undefined,
	/** All values that are not equal to given value. */
	id_not?: string | undefined,
	/** All values that are contained in given list. */
	id_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	id_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	id_contains?: string | undefined,
	/** All values not containing the given string. */
	id_not_contains?: string | undefined,
	/** All values starting with the given string. */
	id_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	id_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	id_ends_with?: string | undefined,
	/** All values not ending with the given string */
	id_not_ends_with?: string | undefined,
	kind?: ModelTypes["UserKind"] | undefined,
	/** All values that are not equal to given value. */
	kind_not?: ModelTypes["UserKind"] | undefined,
	/** All values that are contained in given list. */
	kind_in?: Array<ModelTypes["UserKind"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	kind_not_in?: Array<ModelTypes["UserKind"] | undefined> | undefined
};
	["UserOrderByInput"]:UserOrderByInput;
	["UserUpdateManyInlineInput"]: {
	/** Connect multiple existing User documents */
	connect?: Array<ModelTypes["UserConnectInput"]> | undefined,
	/** Override currently-connected documents with multiple existing User documents */
	set?: Array<ModelTypes["UserWhereUniqueInput"]> | undefined,
	/** Disconnect multiple User documents */
	disconnect?: Array<ModelTypes["UserWhereUniqueInput"]> | undefined
};
	["UserUpdateOneInlineInput"]: {
	/** Connect existing User document */
	connect?: ModelTypes["UserWhereUniqueInput"] | undefined,
	/** Disconnect currently connected User document */
	disconnect?: boolean | undefined
};
	/** Identifies documents */
["UserWhereInput"]: {
	/** Contains search across all appropriate fields. */
	_search?: string | undefined,
	/** Logical AND on all given filters. */
	AND?: Array<ModelTypes["UserWhereInput"]> | undefined,
	/** Logical OR on all given filters. */
	OR?: Array<ModelTypes["UserWhereInput"]> | undefined,
	/** Logical NOT on all given filters combined by AND. */
	NOT?: Array<ModelTypes["UserWhereInput"]> | undefined,
	isActive?: boolean | undefined,
	/** All values that are not equal to given value. */
	isActive_not?: boolean | undefined,
	picture?: string | undefined,
	/** All values that are not equal to given value. */
	picture_not?: string | undefined,
	/** All values that are contained in given list. */
	picture_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	picture_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	picture_contains?: string | undefined,
	/** All values not containing the given string. */
	picture_not_contains?: string | undefined,
	/** All values starting with the given string. */
	picture_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	picture_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	picture_ends_with?: string | undefined,
	/** All values not ending with the given string */
	picture_not_ends_with?: string | undefined,
	name?: string | undefined,
	/** All values that are not equal to given value. */
	name_not?: string | undefined,
	/** All values that are contained in given list. */
	name_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	name_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	name_contains?: string | undefined,
	/** All values not containing the given string. */
	name_not_contains?: string | undefined,
	/** All values starting with the given string. */
	name_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	name_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	name_ends_with?: string | undefined,
	/** All values not ending with the given string */
	name_not_ends_with?: string | undefined,
	publishedAt?: ModelTypes["DateTime"] | undefined,
	/** All values that are not equal to given value. */
	publishedAt_not?: ModelTypes["DateTime"] | undefined,
	/** All values that are contained in given list. */
	publishedAt_in?: Array<ModelTypes["DateTime"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	publishedAt_not_in?: Array<ModelTypes["DateTime"] | undefined> | undefined,
	/** All values less than the given value. */
	publishedAt_lt?: ModelTypes["DateTime"] | undefined,
	/** All values less than or equal the given value. */
	publishedAt_lte?: ModelTypes["DateTime"] | undefined,
	/** All values greater than the given value. */
	publishedAt_gt?: ModelTypes["DateTime"] | undefined,
	/** All values greater than or equal the given value. */
	publishedAt_gte?: ModelTypes["DateTime"] | undefined,
	updatedAt?: ModelTypes["DateTime"] | undefined,
	/** All values that are not equal to given value. */
	updatedAt_not?: ModelTypes["DateTime"] | undefined,
	/** All values that are contained in given list. */
	updatedAt_in?: Array<ModelTypes["DateTime"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	updatedAt_not_in?: Array<ModelTypes["DateTime"] | undefined> | undefined,
	/** All values less than the given value. */
	updatedAt_lt?: ModelTypes["DateTime"] | undefined,
	/** All values less than or equal the given value. */
	updatedAt_lte?: ModelTypes["DateTime"] | undefined,
	/** All values greater than the given value. */
	updatedAt_gt?: ModelTypes["DateTime"] | undefined,
	/** All values greater than or equal the given value. */
	updatedAt_gte?: ModelTypes["DateTime"] | undefined,
	createdAt?: ModelTypes["DateTime"] | undefined,
	/** All values that are not equal to given value. */
	createdAt_not?: ModelTypes["DateTime"] | undefined,
	/** All values that are contained in given list. */
	createdAt_in?: Array<ModelTypes["DateTime"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	createdAt_not_in?: Array<ModelTypes["DateTime"] | undefined> | undefined,
	/** All values less than the given value. */
	createdAt_lt?: ModelTypes["DateTime"] | undefined,
	/** All values less than or equal the given value. */
	createdAt_lte?: ModelTypes["DateTime"] | undefined,
	/** All values greater than the given value. */
	createdAt_gt?: ModelTypes["DateTime"] | undefined,
	/** All values greater than or equal the given value. */
	createdAt_gte?: ModelTypes["DateTime"] | undefined,
	id?: string | undefined,
	/** All values that are not equal to given value. */
	id_not?: string | undefined,
	/** All values that are contained in given list. */
	id_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	id_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	id_contains?: string | undefined,
	/** All values not containing the given string. */
	id_not_contains?: string | undefined,
	/** All values starting with the given string. */
	id_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	id_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	id_ends_with?: string | undefined,
	/** All values not ending with the given string */
	id_not_ends_with?: string | undefined,
	kind?: ModelTypes["UserKind"] | undefined,
	/** All values that are not equal to given value. */
	kind_not?: ModelTypes["UserKind"] | undefined,
	/** All values that are contained in given list. */
	kind_in?: Array<ModelTypes["UserKind"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	kind_not_in?: Array<ModelTypes["UserKind"] | undefined> | undefined
};
	/** References User record uniquely */
["UserWhereUniqueInput"]: {
	id?: string | undefined
};
	["Version"]: {
		id: string,
	stage: ModelTypes["Stage"],
	revision: number,
	createdAt: ModelTypes["DateTime"]
};
	["VersionWhereInput"]: {
	id: string,
	stage: ModelTypes["Stage"],
	revision: number
};
	["_FilterKind"]:_FilterKind;
	["_MutationInputFieldKind"]:_MutationInputFieldKind;
	["_MutationKind"]:_MutationKind;
	["_OrderDirection"]:_OrderDirection;
	["_RelationInputCardinality"]:_RelationInputCardinality;
	["_RelationInputKind"]:_RelationInputKind;
	["_RelationKind"]:_RelationKind;
	["_SystemDateTimeFieldVariation"]:_SystemDateTimeFieldVariation
    }

export type GraphQLTypes = {
    ["AboutMe"]: {
	__typename: "AboutMe",
	/** System stage field */
	stage: GraphQLTypes["Stage"],
	/** Get the document in other stages */
	documentInStages: Array<GraphQLTypes["AboutMe"]>,
	/** The time the document was published. Null on documents in draft stage. */
	publishedAt?: GraphQLTypes["DateTime"] | undefined,
	/** The time the document was updated */
	updatedAt: GraphQLTypes["DateTime"],
	/** The time the document was created */
	createdAt: GraphQLTypes["DateTime"],
	/** The unique identifier */
	id: string,
	contactEmail: string,
	description: string,
	company?: GraphQLTypes["Company"] | undefined,
	links: Array<GraphQLTypes["AboutMelinksUnion"]>,
	/** User that last published this document */
	publishedBy?: GraphQLTypes["User"] | undefined,
	/** User that last updated this document */
	updatedBy?: GraphQLTypes["User"] | undefined,
	/** User that created this document */
	createdBy?: GraphQLTypes["User"] | undefined,
	photo: GraphQLTypes["Asset"],
	scheduledIn: Array<GraphQLTypes["ScheduledOperation"]>,
	/** List of AboutMe versions */
	history: Array<GraphQLTypes["Version"]>
};
	["AboutMeConnectInput"]: {
		/** Document to connect */
	where: GraphQLTypes["AboutMeWhereUniqueInput"],
	/** Allow to specify document position in list of connected documents, will default to appending at end of list */
	position?: GraphQLTypes["ConnectPositionInput"] | undefined
};
	/** A connection to a list of items. */
["AboutMeConnection"]: {
	__typename: "AboutMeConnection",
	/** Information to aid in pagination. */
	pageInfo: GraphQLTypes["PageInfo"],
	/** A list of edges. */
	edges: Array<GraphQLTypes["AboutMeEdge"]>,
	aggregate: GraphQLTypes["Aggregate"]
};
	["AboutMeCreateInput"]: {
		updatedAt?: GraphQLTypes["DateTime"] | undefined,
	createdAt?: GraphQLTypes["DateTime"] | undefined,
	contactEmail: string,
	description: string,
	company?: GraphQLTypes["CompanyCreateOneInlineInput"] | undefined,
	links?: GraphQLTypes["AboutMelinksUnionCreateManyInlineInput"] | undefined,
	photo: GraphQLTypes["AssetCreateOneInlineInput"]
};
	["AboutMeCreateManyInlineInput"]: {
		/** Create and connect multiple existing AboutMe documents */
	create?: Array<GraphQLTypes["AboutMeCreateInput"]> | undefined,
	/** Connect multiple existing AboutMe documents */
	connect?: Array<GraphQLTypes["AboutMeWhereUniqueInput"]> | undefined
};
	["AboutMeCreateOneInlineInput"]: {
		/** Create and connect one AboutMe document */
	create?: GraphQLTypes["AboutMeCreateInput"] | undefined,
	/** Connect one existing AboutMe document */
	connect?: GraphQLTypes["AboutMeWhereUniqueInput"] | undefined
};
	/** An edge in a connection. */
["AboutMeEdge"]: {
	__typename: "AboutMeEdge",
	/** The item at the end of the edge. */
	node: GraphQLTypes["AboutMe"],
	/** A cursor for use in pagination. */
	cursor: string
};
	/** Identifies documents */
["AboutMeManyWhereInput"]: {
		/** Contains search across all appropriate fields. */
	_search?: string | undefined,
	/** Logical AND on all given filters. */
	AND?: Array<GraphQLTypes["AboutMeWhereInput"]> | undefined,
	/** Logical OR on all given filters. */
	OR?: Array<GraphQLTypes["AboutMeWhereInput"]> | undefined,
	/** Logical NOT on all given filters combined by AND. */
	NOT?: Array<GraphQLTypes["AboutMeWhereInput"]> | undefined,
	publishedAt?: GraphQLTypes["DateTime"] | undefined,
	/** All values that are not equal to given value. */
	publishedAt_not?: GraphQLTypes["DateTime"] | undefined,
	/** All values that are contained in given list. */
	publishedAt_in?: Array<GraphQLTypes["DateTime"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	publishedAt_not_in?: Array<GraphQLTypes["DateTime"] | undefined> | undefined,
	/** All values less than the given value. */
	publishedAt_lt?: GraphQLTypes["DateTime"] | undefined,
	/** All values less than or equal the given value. */
	publishedAt_lte?: GraphQLTypes["DateTime"] | undefined,
	/** All values greater than the given value. */
	publishedAt_gt?: GraphQLTypes["DateTime"] | undefined,
	/** All values greater than or equal the given value. */
	publishedAt_gte?: GraphQLTypes["DateTime"] | undefined,
	updatedAt?: GraphQLTypes["DateTime"] | undefined,
	/** All values that are not equal to given value. */
	updatedAt_not?: GraphQLTypes["DateTime"] | undefined,
	/** All values that are contained in given list. */
	updatedAt_in?: Array<GraphQLTypes["DateTime"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	updatedAt_not_in?: Array<GraphQLTypes["DateTime"] | undefined> | undefined,
	/** All values less than the given value. */
	updatedAt_lt?: GraphQLTypes["DateTime"] | undefined,
	/** All values less than or equal the given value. */
	updatedAt_lte?: GraphQLTypes["DateTime"] | undefined,
	/** All values greater than the given value. */
	updatedAt_gt?: GraphQLTypes["DateTime"] | undefined,
	/** All values greater than or equal the given value. */
	updatedAt_gte?: GraphQLTypes["DateTime"] | undefined,
	createdAt?: GraphQLTypes["DateTime"] | undefined,
	/** All values that are not equal to given value. */
	createdAt_not?: GraphQLTypes["DateTime"] | undefined,
	/** All values that are contained in given list. */
	createdAt_in?: Array<GraphQLTypes["DateTime"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	createdAt_not_in?: Array<GraphQLTypes["DateTime"] | undefined> | undefined,
	/** All values less than the given value. */
	createdAt_lt?: GraphQLTypes["DateTime"] | undefined,
	/** All values less than or equal the given value. */
	createdAt_lte?: GraphQLTypes["DateTime"] | undefined,
	/** All values greater than the given value. */
	createdAt_gt?: GraphQLTypes["DateTime"] | undefined,
	/** All values greater than or equal the given value. */
	createdAt_gte?: GraphQLTypes["DateTime"] | undefined,
	id?: string | undefined,
	/** All values that are not equal to given value. */
	id_not?: string | undefined,
	/** All values that are contained in given list. */
	id_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	id_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	id_contains?: string | undefined,
	/** All values not containing the given string. */
	id_not_contains?: string | undefined,
	/** All values starting with the given string. */
	id_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	id_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	id_ends_with?: string | undefined,
	/** All values not ending with the given string */
	id_not_ends_with?: string | undefined,
	contactEmail?: string | undefined,
	/** All values that are not equal to given value. */
	contactEmail_not?: string | undefined,
	/** All values that are contained in given list. */
	contactEmail_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	contactEmail_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	contactEmail_contains?: string | undefined,
	/** All values not containing the given string. */
	contactEmail_not_contains?: string | undefined,
	/** All values starting with the given string. */
	contactEmail_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	contactEmail_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	contactEmail_ends_with?: string | undefined,
	/** All values not ending with the given string */
	contactEmail_not_ends_with?: string | undefined,
	description?: string | undefined,
	/** All values that are not equal to given value. */
	description_not?: string | undefined,
	/** All values that are contained in given list. */
	description_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	description_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	description_contains?: string | undefined,
	/** All values not containing the given string. */
	description_not_contains?: string | undefined,
	/** All values starting with the given string. */
	description_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	description_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	description_ends_with?: string | undefined,
	/** All values not ending with the given string */
	description_not_ends_with?: string | undefined,
	company?: GraphQLTypes["CompanyWhereInput"] | undefined,
	publishedBy?: GraphQLTypes["UserWhereInput"] | undefined,
	updatedBy?: GraphQLTypes["UserWhereInput"] | undefined,
	createdBy?: GraphQLTypes["UserWhereInput"] | undefined,
	photo?: GraphQLTypes["AssetWhereInput"] | undefined,
	scheduledIn_every?: GraphQLTypes["ScheduledOperationWhereInput"] | undefined,
	scheduledIn_some?: GraphQLTypes["ScheduledOperationWhereInput"] | undefined,
	scheduledIn_none?: GraphQLTypes["ScheduledOperationWhereInput"] | undefined
};
	["AboutMeOrderByInput"]: AboutMeOrderByInput;
	["AboutMeUpdateInput"]: {
		contactEmail?: string | undefined,
	description?: string | undefined,
	company?: GraphQLTypes["CompanyUpdateOneInlineInput"] | undefined,
	links?: GraphQLTypes["AboutMelinksUnionUpdateManyInlineInput"] | undefined,
	photo?: GraphQLTypes["AssetUpdateOneInlineInput"] | undefined
};
	["AboutMeUpdateManyInlineInput"]: {
		/** Create and connect multiple AboutMe documents */
	create?: Array<GraphQLTypes["AboutMeCreateInput"]> | undefined,
	/** Connect multiple existing AboutMe documents */
	connect?: Array<GraphQLTypes["AboutMeConnectInput"]> | undefined,
	/** Override currently-connected documents with multiple existing AboutMe documents */
	set?: Array<GraphQLTypes["AboutMeWhereUniqueInput"]> | undefined,
	/** Update multiple AboutMe documents */
	update?: Array<GraphQLTypes["AboutMeUpdateWithNestedWhereUniqueInput"]> | undefined,
	/** Upsert multiple AboutMe documents */
	upsert?: Array<GraphQLTypes["AboutMeUpsertWithNestedWhereUniqueInput"]> | undefined,
	/** Disconnect multiple AboutMe documents */
	disconnect?: Array<GraphQLTypes["AboutMeWhereUniqueInput"]> | undefined,
	/** Delete multiple AboutMe documents */
	delete?: Array<GraphQLTypes["AboutMeWhereUniqueInput"]> | undefined
};
	["AboutMeUpdateManyInput"]: {
		contactEmail?: string | undefined,
	description?: string | undefined
};
	["AboutMeUpdateManyWithNestedWhereInput"]: {
		/** Document search */
	where: GraphQLTypes["AboutMeWhereInput"],
	/** Update many input */
	data: GraphQLTypes["AboutMeUpdateManyInput"]
};
	["AboutMeUpdateOneInlineInput"]: {
		/** Create and connect one AboutMe document */
	create?: GraphQLTypes["AboutMeCreateInput"] | undefined,
	/** Update single AboutMe document */
	update?: GraphQLTypes["AboutMeUpdateWithNestedWhereUniqueInput"] | undefined,
	/** Upsert single AboutMe document */
	upsert?: GraphQLTypes["AboutMeUpsertWithNestedWhereUniqueInput"] | undefined,
	/** Connect existing AboutMe document */
	connect?: GraphQLTypes["AboutMeWhereUniqueInput"] | undefined,
	/** Disconnect currently connected AboutMe document */
	disconnect?: boolean | undefined,
	/** Delete currently connected AboutMe document */
	delete?: boolean | undefined
};
	["AboutMeUpdateWithNestedWhereUniqueInput"]: {
		/** Unique document search */
	where: GraphQLTypes["AboutMeWhereUniqueInput"],
	/** Document to update */
	data: GraphQLTypes["AboutMeUpdateInput"]
};
	["AboutMeUpsertInput"]: {
		/** Create document if it didn't exist */
	create: GraphQLTypes["AboutMeCreateInput"],
	/** Update document if it exists */
	update: GraphQLTypes["AboutMeUpdateInput"]
};
	["AboutMeUpsertWithNestedWhereUniqueInput"]: {
		/** Unique document search */
	where: GraphQLTypes["AboutMeWhereUniqueInput"],
	/** Upsert data */
	data: GraphQLTypes["AboutMeUpsertInput"]
};
	/** Identifies documents */
["AboutMeWhereInput"]: {
		/** Contains search across all appropriate fields. */
	_search?: string | undefined,
	/** Logical AND on all given filters. */
	AND?: Array<GraphQLTypes["AboutMeWhereInput"]> | undefined,
	/** Logical OR on all given filters. */
	OR?: Array<GraphQLTypes["AboutMeWhereInput"]> | undefined,
	/** Logical NOT on all given filters combined by AND. */
	NOT?: Array<GraphQLTypes["AboutMeWhereInput"]> | undefined,
	publishedAt?: GraphQLTypes["DateTime"] | undefined,
	/** All values that are not equal to given value. */
	publishedAt_not?: GraphQLTypes["DateTime"] | undefined,
	/** All values that are contained in given list. */
	publishedAt_in?: Array<GraphQLTypes["DateTime"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	publishedAt_not_in?: Array<GraphQLTypes["DateTime"] | undefined> | undefined,
	/** All values less than the given value. */
	publishedAt_lt?: GraphQLTypes["DateTime"] | undefined,
	/** All values less than or equal the given value. */
	publishedAt_lte?: GraphQLTypes["DateTime"] | undefined,
	/** All values greater than the given value. */
	publishedAt_gt?: GraphQLTypes["DateTime"] | undefined,
	/** All values greater than or equal the given value. */
	publishedAt_gte?: GraphQLTypes["DateTime"] | undefined,
	updatedAt?: GraphQLTypes["DateTime"] | undefined,
	/** All values that are not equal to given value. */
	updatedAt_not?: GraphQLTypes["DateTime"] | undefined,
	/** All values that are contained in given list. */
	updatedAt_in?: Array<GraphQLTypes["DateTime"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	updatedAt_not_in?: Array<GraphQLTypes["DateTime"] | undefined> | undefined,
	/** All values less than the given value. */
	updatedAt_lt?: GraphQLTypes["DateTime"] | undefined,
	/** All values less than or equal the given value. */
	updatedAt_lte?: GraphQLTypes["DateTime"] | undefined,
	/** All values greater than the given value. */
	updatedAt_gt?: GraphQLTypes["DateTime"] | undefined,
	/** All values greater than or equal the given value. */
	updatedAt_gte?: GraphQLTypes["DateTime"] | undefined,
	createdAt?: GraphQLTypes["DateTime"] | undefined,
	/** All values that are not equal to given value. */
	createdAt_not?: GraphQLTypes["DateTime"] | undefined,
	/** All values that are contained in given list. */
	createdAt_in?: Array<GraphQLTypes["DateTime"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	createdAt_not_in?: Array<GraphQLTypes["DateTime"] | undefined> | undefined,
	/** All values less than the given value. */
	createdAt_lt?: GraphQLTypes["DateTime"] | undefined,
	/** All values less than or equal the given value. */
	createdAt_lte?: GraphQLTypes["DateTime"] | undefined,
	/** All values greater than the given value. */
	createdAt_gt?: GraphQLTypes["DateTime"] | undefined,
	/** All values greater than or equal the given value. */
	createdAt_gte?: GraphQLTypes["DateTime"] | undefined,
	id?: string | undefined,
	/** All values that are not equal to given value. */
	id_not?: string | undefined,
	/** All values that are contained in given list. */
	id_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	id_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	id_contains?: string | undefined,
	/** All values not containing the given string. */
	id_not_contains?: string | undefined,
	/** All values starting with the given string. */
	id_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	id_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	id_ends_with?: string | undefined,
	/** All values not ending with the given string */
	id_not_ends_with?: string | undefined,
	contactEmail?: string | undefined,
	/** All values that are not equal to given value. */
	contactEmail_not?: string | undefined,
	/** All values that are contained in given list. */
	contactEmail_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	contactEmail_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	contactEmail_contains?: string | undefined,
	/** All values not containing the given string. */
	contactEmail_not_contains?: string | undefined,
	/** All values starting with the given string. */
	contactEmail_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	contactEmail_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	contactEmail_ends_with?: string | undefined,
	/** All values not ending with the given string */
	contactEmail_not_ends_with?: string | undefined,
	description?: string | undefined,
	/** All values that are not equal to given value. */
	description_not?: string | undefined,
	/** All values that are contained in given list. */
	description_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	description_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	description_contains?: string | undefined,
	/** All values not containing the given string. */
	description_not_contains?: string | undefined,
	/** All values starting with the given string. */
	description_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	description_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	description_ends_with?: string | undefined,
	/** All values not ending with the given string */
	description_not_ends_with?: string | undefined,
	company?: GraphQLTypes["CompanyWhereInput"] | undefined,
	publishedBy?: GraphQLTypes["UserWhereInput"] | undefined,
	updatedBy?: GraphQLTypes["UserWhereInput"] | undefined,
	createdBy?: GraphQLTypes["UserWhereInput"] | undefined,
	photo?: GraphQLTypes["AssetWhereInput"] | undefined,
	scheduledIn_every?: GraphQLTypes["ScheduledOperationWhereInput"] | undefined,
	scheduledIn_some?: GraphQLTypes["ScheduledOperationWhereInput"] | undefined,
	scheduledIn_none?: GraphQLTypes["ScheduledOperationWhereInput"] | undefined
};
	/** References AboutMe record uniquely */
["AboutMeWhereUniqueInput"]: {
		id?: string | undefined
};
	["AboutMelinksUnion"]:{
        	__typename:"Link"
        	['...on Link']: '__union' & GraphQLTypes["Link"];
};
	["AboutMelinksUnionConnectInput"]: {
		Link?: GraphQLTypes["LinkConnectInput"] | undefined
};
	["AboutMelinksUnionCreateInput"]: {
		Link?: GraphQLTypes["LinkCreateInput"] | undefined
};
	["AboutMelinksUnionCreateManyInlineInput"]: {
		/** Create and connect multiple existing AboutMelinksUnion documents */
	create?: Array<GraphQLTypes["AboutMelinksUnionCreateInput"]> | undefined
};
	["AboutMelinksUnionCreateOneInlineInput"]: {
		/** Create and connect one AboutMelinksUnion document */
	create?: GraphQLTypes["AboutMelinksUnionCreateInput"] | undefined
};
	["AboutMelinksUnionCreateWithPositionInput"]: {
		Link?: GraphQLTypes["LinkCreateWithPositionInput"] | undefined
};
	["AboutMelinksUnionUpdateInput"]: {
		Link?: GraphQLTypes["LinkUpdateInput"] | undefined
};
	["AboutMelinksUnionUpdateManyInlineInput"]: {
		/** Create and connect multiple AboutMelinksUnion component instances */
	create?: Array<GraphQLTypes["AboutMelinksUnionCreateWithPositionInput"]> | undefined,
	/** Update multiple AboutMelinksUnion component instances */
	update?: Array<GraphQLTypes["AboutMelinksUnionUpdateWithNestedWhereUniqueAndPositionInput"]> | undefined,
	/** Upsert multiple AboutMelinksUnion component instances */
	upsert?: Array<GraphQLTypes["AboutMelinksUnionUpsertWithNestedWhereUniqueAndPositionInput"]> | undefined,
	/** Delete multiple AboutMelinksUnion documents */
	delete?: Array<GraphQLTypes["AboutMelinksUnionWhereUniqueInput"]> | undefined
};
	["AboutMelinksUnionUpdateManyWithNestedWhereInput"]: {
		Link?: GraphQLTypes["LinkUpdateManyWithNestedWhereInput"] | undefined
};
	["AboutMelinksUnionUpdateOneInlineInput"]: {
		/** Create and connect one AboutMelinksUnion document */
	create?: GraphQLTypes["AboutMelinksUnionCreateInput"] | undefined,
	/** Update single AboutMelinksUnion document */
	update?: GraphQLTypes["AboutMelinksUnionUpdateWithNestedWhereUniqueInput"] | undefined,
	/** Upsert single AboutMelinksUnion document */
	upsert?: GraphQLTypes["AboutMelinksUnionUpsertWithNestedWhereUniqueInput"] | undefined,
	/** Delete currently connected AboutMelinksUnion document */
	delete?: boolean | undefined
};
	["AboutMelinksUnionUpdateWithNestedWhereUniqueAndPositionInput"]: {
		Link?: GraphQLTypes["LinkUpdateWithNestedWhereUniqueAndPositionInput"] | undefined
};
	["AboutMelinksUnionUpdateWithNestedWhereUniqueInput"]: {
		Link?: GraphQLTypes["LinkUpdateWithNestedWhereUniqueInput"] | undefined
};
	["AboutMelinksUnionUpsertWithNestedWhereUniqueAndPositionInput"]: {
		Link?: GraphQLTypes["LinkUpsertWithNestedWhereUniqueAndPositionInput"] | undefined
};
	["AboutMelinksUnionUpsertWithNestedWhereUniqueInput"]: {
		Link?: GraphQLTypes["LinkUpsertWithNestedWhereUniqueInput"] | undefined
};
	["AboutMelinksUnionWhereInput"]: {
		Link?: GraphQLTypes["LinkWhereInput"] | undefined
};
	["AboutMelinksUnionWhereUniqueInput"]: {
		Link?: GraphQLTypes["LinkWhereUniqueInput"] | undefined
};
	["Aggregate"]: {
	__typename: "Aggregate",
	count: number
};
	/** Asset system model */
["Asset"]: {
	__typename: "Asset",
	/** System stage field */
	stage: GraphQLTypes["Stage"],
	/** System Locale field */
	locale: GraphQLTypes["Locale"],
	/** Get the other localizations for this document */
	localizations: Array<GraphQLTypes["Asset"]>,
	/** Get the document in other stages */
	documentInStages: Array<GraphQLTypes["Asset"]>,
	/** The mime type of the file */
	mimeType?: string | undefined,
	/** The file size */
	size?: number | undefined,
	/** The file width */
	width?: number | undefined,
	/** The height of the file */
	height?: number | undefined,
	/** The file name */
	fileName: string,
	/** The file handle */
	handle: string,
	/** The time the document was published. Null on documents in draft stage. */
	publishedAt?: GraphQLTypes["DateTime"] | undefined,
	/** The time the document was updated */
	updatedAt: GraphQLTypes["DateTime"],
	/** The time the document was created */
	createdAt: GraphQLTypes["DateTime"],
	/** The unique identifier */
	id: string,
	/** User that last published this document */
	publishedBy?: GraphQLTypes["User"] | undefined,
	/** User that last updated this document */
	updatedBy?: GraphQLTypes["User"] | undefined,
	/** User that created this document */
	createdBy?: GraphQLTypes["User"] | undefined,
	imageProject: Array<GraphQLTypes["Project"]>,
	og_imageSeo: Array<GraphQLTypes["Seo"]>,
	photoAboutMe: Array<GraphQLTypes["AboutMe"]>,
	scheduledIn: Array<GraphQLTypes["ScheduledOperation"]>,
	/** List of Asset versions */
	history: Array<GraphQLTypes["Version"]>,
	/** Get the url for the asset with provided transformations applied. */
	url: string
};
	["AssetConnectInput"]: {
		/** Document to connect */
	where: GraphQLTypes["AssetWhereUniqueInput"],
	/** Allow to specify document position in list of connected documents, will default to appending at end of list */
	position?: GraphQLTypes["ConnectPositionInput"] | undefined
};
	/** A connection to a list of items. */
["AssetConnection"]: {
	__typename: "AssetConnection",
	/** Information to aid in pagination. */
	pageInfo: GraphQLTypes["PageInfo"],
	/** A list of edges. */
	edges: Array<GraphQLTypes["AssetEdge"]>,
	aggregate: GraphQLTypes["Aggregate"]
};
	["AssetCreateInput"]: {
		mimeType?: string | undefined,
	size?: number | undefined,
	width?: number | undefined,
	height?: number | undefined,
	fileName: string,
	handle: string,
	updatedAt?: GraphQLTypes["DateTime"] | undefined,
	createdAt?: GraphQLTypes["DateTime"] | undefined,
	imageProject?: GraphQLTypes["ProjectCreateManyInlineInput"] | undefined,
	og_imageSeo?: GraphQLTypes["SeoCreateManyInlineInput"] | undefined,
	iconLink?: GraphQLTypes["LinkCreateManyInlineInput"] | undefined,
	iconSkill?: GraphQLTypes["SkillCreateManyInlineInput"] | undefined,
	photoAboutMe?: GraphQLTypes["AboutMeCreateManyInlineInput"] | undefined,
	/** Inline mutations for managing document localizations excluding the default locale */
	localizations?: GraphQLTypes["AssetCreateLocalizationsInput"] | undefined
};
	["AssetCreateLocalizationDataInput"]: {
		mimeType?: string | undefined,
	size?: number | undefined,
	width?: number | undefined,
	height?: number | undefined,
	fileName: string,
	handle: string,
	updatedAt?: GraphQLTypes["DateTime"] | undefined,
	createdAt?: GraphQLTypes["DateTime"] | undefined
};
	["AssetCreateLocalizationInput"]: {
		/** Localization input */
	data: GraphQLTypes["AssetCreateLocalizationDataInput"],
	locale: GraphQLTypes["Locale"]
};
	["AssetCreateLocalizationsInput"]: {
		/** Create localizations for the newly-created document */
	create?: Array<GraphQLTypes["AssetCreateLocalizationInput"]> | undefined
};
	["AssetCreateManyInlineInput"]: {
		/** Create and connect multiple existing Asset documents */
	create?: Array<GraphQLTypes["AssetCreateInput"]> | undefined,
	/** Connect multiple existing Asset documents */
	connect?: Array<GraphQLTypes["AssetWhereUniqueInput"]> | undefined
};
	["AssetCreateOneInlineInput"]: {
		/** Create and connect one Asset document */
	create?: GraphQLTypes["AssetCreateInput"] | undefined,
	/** Connect one existing Asset document */
	connect?: GraphQLTypes["AssetWhereUniqueInput"] | undefined
};
	/** An edge in a connection. */
["AssetEdge"]: {
	__typename: "AssetEdge",
	/** The item at the end of the edge. */
	node: GraphQLTypes["Asset"],
	/** A cursor for use in pagination. */
	cursor: string
};
	/** Identifies documents */
["AssetManyWhereInput"]: {
		/** Contains search across all appropriate fields. */
	_search?: string | undefined,
	/** Logical AND on all given filters. */
	AND?: Array<GraphQLTypes["AssetWhereInput"]> | undefined,
	/** Logical OR on all given filters. */
	OR?: Array<GraphQLTypes["AssetWhereInput"]> | undefined,
	/** Logical NOT on all given filters combined by AND. */
	NOT?: Array<GraphQLTypes["AssetWhereInput"]> | undefined,
	publishedAt?: GraphQLTypes["DateTime"] | undefined,
	/** All values that are not equal to given value. */
	publishedAt_not?: GraphQLTypes["DateTime"] | undefined,
	/** All values that are contained in given list. */
	publishedAt_in?: Array<GraphQLTypes["DateTime"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	publishedAt_not_in?: Array<GraphQLTypes["DateTime"] | undefined> | undefined,
	/** All values less than the given value. */
	publishedAt_lt?: GraphQLTypes["DateTime"] | undefined,
	/** All values less than or equal the given value. */
	publishedAt_lte?: GraphQLTypes["DateTime"] | undefined,
	/** All values greater than the given value. */
	publishedAt_gt?: GraphQLTypes["DateTime"] | undefined,
	/** All values greater than or equal the given value. */
	publishedAt_gte?: GraphQLTypes["DateTime"] | undefined,
	updatedAt?: GraphQLTypes["DateTime"] | undefined,
	/** All values that are not equal to given value. */
	updatedAt_not?: GraphQLTypes["DateTime"] | undefined,
	/** All values that are contained in given list. */
	updatedAt_in?: Array<GraphQLTypes["DateTime"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	updatedAt_not_in?: Array<GraphQLTypes["DateTime"] | undefined> | undefined,
	/** All values less than the given value. */
	updatedAt_lt?: GraphQLTypes["DateTime"] | undefined,
	/** All values less than or equal the given value. */
	updatedAt_lte?: GraphQLTypes["DateTime"] | undefined,
	/** All values greater than the given value. */
	updatedAt_gt?: GraphQLTypes["DateTime"] | undefined,
	/** All values greater than or equal the given value. */
	updatedAt_gte?: GraphQLTypes["DateTime"] | undefined,
	createdAt?: GraphQLTypes["DateTime"] | undefined,
	/** All values that are not equal to given value. */
	createdAt_not?: GraphQLTypes["DateTime"] | undefined,
	/** All values that are contained in given list. */
	createdAt_in?: Array<GraphQLTypes["DateTime"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	createdAt_not_in?: Array<GraphQLTypes["DateTime"] | undefined> | undefined,
	/** All values less than the given value. */
	createdAt_lt?: GraphQLTypes["DateTime"] | undefined,
	/** All values less than or equal the given value. */
	createdAt_lte?: GraphQLTypes["DateTime"] | undefined,
	/** All values greater than the given value. */
	createdAt_gt?: GraphQLTypes["DateTime"] | undefined,
	/** All values greater than or equal the given value. */
	createdAt_gte?: GraphQLTypes["DateTime"] | undefined,
	id?: string | undefined,
	/** All values that are not equal to given value. */
	id_not?: string | undefined,
	/** All values that are contained in given list. */
	id_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	id_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	id_contains?: string | undefined,
	/** All values not containing the given string. */
	id_not_contains?: string | undefined,
	/** All values starting with the given string. */
	id_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	id_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	id_ends_with?: string | undefined,
	/** All values not ending with the given string */
	id_not_ends_with?: string | undefined,
	publishedBy?: GraphQLTypes["UserWhereInput"] | undefined,
	updatedBy?: GraphQLTypes["UserWhereInput"] | undefined,
	createdBy?: GraphQLTypes["UserWhereInput"] | undefined,
	imageProject_every?: GraphQLTypes["ProjectWhereInput"] | undefined,
	imageProject_some?: GraphQLTypes["ProjectWhereInput"] | undefined,
	imageProject_none?: GraphQLTypes["ProjectWhereInput"] | undefined,
	og_imageSeo_every?: GraphQLTypes["SeoWhereInput"] | undefined,
	og_imageSeo_some?: GraphQLTypes["SeoWhereInput"] | undefined,
	og_imageSeo_none?: GraphQLTypes["SeoWhereInput"] | undefined,
	photoAboutMe_every?: GraphQLTypes["AboutMeWhereInput"] | undefined,
	photoAboutMe_some?: GraphQLTypes["AboutMeWhereInput"] | undefined,
	photoAboutMe_none?: GraphQLTypes["AboutMeWhereInput"] | undefined,
	scheduledIn_every?: GraphQLTypes["ScheduledOperationWhereInput"] | undefined,
	scheduledIn_some?: GraphQLTypes["ScheduledOperationWhereInput"] | undefined,
	scheduledIn_none?: GraphQLTypes["ScheduledOperationWhereInput"] | undefined
};
	["AssetOrderByInput"]: AssetOrderByInput;
	/** Transformations for Assets */
["AssetTransformationInput"]: {
		image?: GraphQLTypes["ImageTransformationInput"] | undefined,
	document?: GraphQLTypes["DocumentTransformationInput"] | undefined,
	/** Pass true if you want to validate the passed transformation parameters */
	validateOptions?: boolean | undefined
};
	["AssetUpdateInput"]: {
		mimeType?: string | undefined,
	size?: number | undefined,
	width?: number | undefined,
	height?: number | undefined,
	fileName?: string | undefined,
	handle?: string | undefined,
	imageProject?: GraphQLTypes["ProjectUpdateManyInlineInput"] | undefined,
	og_imageSeo?: GraphQLTypes["SeoUpdateManyInlineInput"] | undefined,
	iconLink?: GraphQLTypes["LinkUpdateManyInlineInput"] | undefined,
	iconSkill?: GraphQLTypes["SkillUpdateManyInlineInput"] | undefined,
	photoAboutMe?: GraphQLTypes["AboutMeUpdateManyInlineInput"] | undefined,
	/** Manage document localizations */
	localizations?: GraphQLTypes["AssetUpdateLocalizationsInput"] | undefined
};
	["AssetUpdateLocalizationDataInput"]: {
		mimeType?: string | undefined,
	size?: number | undefined,
	width?: number | undefined,
	height?: number | undefined,
	fileName?: string | undefined,
	handle?: string | undefined
};
	["AssetUpdateLocalizationInput"]: {
		data: GraphQLTypes["AssetUpdateLocalizationDataInput"],
	locale: GraphQLTypes["Locale"]
};
	["AssetUpdateLocalizationsInput"]: {
		/** Localizations to create */
	create?: Array<GraphQLTypes["AssetCreateLocalizationInput"]> | undefined,
	/** Localizations to update */
	update?: Array<GraphQLTypes["AssetUpdateLocalizationInput"]> | undefined,
	upsert?: Array<GraphQLTypes["AssetUpsertLocalizationInput"]> | undefined,
	/** Localizations to delete */
	delete?: Array<GraphQLTypes["Locale"]> | undefined
};
	["AssetUpdateManyInlineInput"]: {
		/** Create and connect multiple Asset documents */
	create?: Array<GraphQLTypes["AssetCreateInput"]> | undefined,
	/** Connect multiple existing Asset documents */
	connect?: Array<GraphQLTypes["AssetConnectInput"]> | undefined,
	/** Override currently-connected documents with multiple existing Asset documents */
	set?: Array<GraphQLTypes["AssetWhereUniqueInput"]> | undefined,
	/** Update multiple Asset documents */
	update?: Array<GraphQLTypes["AssetUpdateWithNestedWhereUniqueInput"]> | undefined,
	/** Upsert multiple Asset documents */
	upsert?: Array<GraphQLTypes["AssetUpsertWithNestedWhereUniqueInput"]> | undefined,
	/** Disconnect multiple Asset documents */
	disconnect?: Array<GraphQLTypes["AssetWhereUniqueInput"]> | undefined,
	/** Delete multiple Asset documents */
	delete?: Array<GraphQLTypes["AssetWhereUniqueInput"]> | undefined
};
	["AssetUpdateManyInput"]: {
		mimeType?: string | undefined,
	size?: number | undefined,
	width?: number | undefined,
	height?: number | undefined,
	fileName?: string | undefined,
	/** Optional updates to localizations */
	localizations?: GraphQLTypes["AssetUpdateManyLocalizationsInput"] | undefined
};
	["AssetUpdateManyLocalizationDataInput"]: {
		mimeType?: string | undefined,
	size?: number | undefined,
	width?: number | undefined,
	height?: number | undefined,
	fileName?: string | undefined
};
	["AssetUpdateManyLocalizationInput"]: {
		data: GraphQLTypes["AssetUpdateManyLocalizationDataInput"],
	locale: GraphQLTypes["Locale"]
};
	["AssetUpdateManyLocalizationsInput"]: {
		/** Localizations to update */
	update?: Array<GraphQLTypes["AssetUpdateManyLocalizationInput"]> | undefined
};
	["AssetUpdateManyWithNestedWhereInput"]: {
		/** Document search */
	where: GraphQLTypes["AssetWhereInput"],
	/** Update many input */
	data: GraphQLTypes["AssetUpdateManyInput"]
};
	["AssetUpdateOneInlineInput"]: {
		/** Create and connect one Asset document */
	create?: GraphQLTypes["AssetCreateInput"] | undefined,
	/** Update single Asset document */
	update?: GraphQLTypes["AssetUpdateWithNestedWhereUniqueInput"] | undefined,
	/** Upsert single Asset document */
	upsert?: GraphQLTypes["AssetUpsertWithNestedWhereUniqueInput"] | undefined,
	/** Connect existing Asset document */
	connect?: GraphQLTypes["AssetWhereUniqueInput"] | undefined,
	/** Disconnect currently connected Asset document */
	disconnect?: boolean | undefined,
	/** Delete currently connected Asset document */
	delete?: boolean | undefined
};
	["AssetUpdateWithNestedWhereUniqueInput"]: {
		/** Unique document search */
	where: GraphQLTypes["AssetWhereUniqueInput"],
	/** Document to update */
	data: GraphQLTypes["AssetUpdateInput"]
};
	["AssetUpsertInput"]: {
		/** Create document if it didn't exist */
	create: GraphQLTypes["AssetCreateInput"],
	/** Update document if it exists */
	update: GraphQLTypes["AssetUpdateInput"]
};
	["AssetUpsertLocalizationInput"]: {
		update: GraphQLTypes["AssetUpdateLocalizationDataInput"],
	create: GraphQLTypes["AssetCreateLocalizationDataInput"],
	locale: GraphQLTypes["Locale"]
};
	["AssetUpsertWithNestedWhereUniqueInput"]: {
		/** Unique document search */
	where: GraphQLTypes["AssetWhereUniqueInput"],
	/** Upsert data */
	data: GraphQLTypes["AssetUpsertInput"]
};
	/** Identifies documents */
["AssetWhereInput"]: {
		/** Contains search across all appropriate fields. */
	_search?: string | undefined,
	/** Logical AND on all given filters. */
	AND?: Array<GraphQLTypes["AssetWhereInput"]> | undefined,
	/** Logical OR on all given filters. */
	OR?: Array<GraphQLTypes["AssetWhereInput"]> | undefined,
	/** Logical NOT on all given filters combined by AND. */
	NOT?: Array<GraphQLTypes["AssetWhereInput"]> | undefined,
	mimeType?: string | undefined,
	/** All values that are not equal to given value. */
	mimeType_not?: string | undefined,
	/** All values that are contained in given list. */
	mimeType_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	mimeType_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	mimeType_contains?: string | undefined,
	/** All values not containing the given string. */
	mimeType_not_contains?: string | undefined,
	/** All values starting with the given string. */
	mimeType_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	mimeType_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	mimeType_ends_with?: string | undefined,
	/** All values not ending with the given string */
	mimeType_not_ends_with?: string | undefined,
	size?: number | undefined,
	/** All values that are not equal to given value. */
	size_not?: number | undefined,
	/** All values that are contained in given list. */
	size_in?: Array<number | undefined> | undefined,
	/** All values that are not contained in given list. */
	size_not_in?: Array<number | undefined> | undefined,
	/** All values less than the given value. */
	size_lt?: number | undefined,
	/** All values less than or equal the given value. */
	size_lte?: number | undefined,
	/** All values greater than the given value. */
	size_gt?: number | undefined,
	/** All values greater than or equal the given value. */
	size_gte?: number | undefined,
	width?: number | undefined,
	/** All values that are not equal to given value. */
	width_not?: number | undefined,
	/** All values that are contained in given list. */
	width_in?: Array<number | undefined> | undefined,
	/** All values that are not contained in given list. */
	width_not_in?: Array<number | undefined> | undefined,
	/** All values less than the given value. */
	width_lt?: number | undefined,
	/** All values less than or equal the given value. */
	width_lte?: number | undefined,
	/** All values greater than the given value. */
	width_gt?: number | undefined,
	/** All values greater than or equal the given value. */
	width_gte?: number | undefined,
	height?: number | undefined,
	/** All values that are not equal to given value. */
	height_not?: number | undefined,
	/** All values that are contained in given list. */
	height_in?: Array<number | undefined> | undefined,
	/** All values that are not contained in given list. */
	height_not_in?: Array<number | undefined> | undefined,
	/** All values less than the given value. */
	height_lt?: number | undefined,
	/** All values less than or equal the given value. */
	height_lte?: number | undefined,
	/** All values greater than the given value. */
	height_gt?: number | undefined,
	/** All values greater than or equal the given value. */
	height_gte?: number | undefined,
	fileName?: string | undefined,
	/** All values that are not equal to given value. */
	fileName_not?: string | undefined,
	/** All values that are contained in given list. */
	fileName_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	fileName_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	fileName_contains?: string | undefined,
	/** All values not containing the given string. */
	fileName_not_contains?: string | undefined,
	/** All values starting with the given string. */
	fileName_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	fileName_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	fileName_ends_with?: string | undefined,
	/** All values not ending with the given string */
	fileName_not_ends_with?: string | undefined,
	handle?: string | undefined,
	/** All values that are not equal to given value. */
	handle_not?: string | undefined,
	/** All values that are contained in given list. */
	handle_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	handle_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	handle_contains?: string | undefined,
	/** All values not containing the given string. */
	handle_not_contains?: string | undefined,
	/** All values starting with the given string. */
	handle_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	handle_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	handle_ends_with?: string | undefined,
	/** All values not ending with the given string */
	handle_not_ends_with?: string | undefined,
	publishedAt?: GraphQLTypes["DateTime"] | undefined,
	/** All values that are not equal to given value. */
	publishedAt_not?: GraphQLTypes["DateTime"] | undefined,
	/** All values that are contained in given list. */
	publishedAt_in?: Array<GraphQLTypes["DateTime"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	publishedAt_not_in?: Array<GraphQLTypes["DateTime"] | undefined> | undefined,
	/** All values less than the given value. */
	publishedAt_lt?: GraphQLTypes["DateTime"] | undefined,
	/** All values less than or equal the given value. */
	publishedAt_lte?: GraphQLTypes["DateTime"] | undefined,
	/** All values greater than the given value. */
	publishedAt_gt?: GraphQLTypes["DateTime"] | undefined,
	/** All values greater than or equal the given value. */
	publishedAt_gte?: GraphQLTypes["DateTime"] | undefined,
	updatedAt?: GraphQLTypes["DateTime"] | undefined,
	/** All values that are not equal to given value. */
	updatedAt_not?: GraphQLTypes["DateTime"] | undefined,
	/** All values that are contained in given list. */
	updatedAt_in?: Array<GraphQLTypes["DateTime"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	updatedAt_not_in?: Array<GraphQLTypes["DateTime"] | undefined> | undefined,
	/** All values less than the given value. */
	updatedAt_lt?: GraphQLTypes["DateTime"] | undefined,
	/** All values less than or equal the given value. */
	updatedAt_lte?: GraphQLTypes["DateTime"] | undefined,
	/** All values greater than the given value. */
	updatedAt_gt?: GraphQLTypes["DateTime"] | undefined,
	/** All values greater than or equal the given value. */
	updatedAt_gte?: GraphQLTypes["DateTime"] | undefined,
	createdAt?: GraphQLTypes["DateTime"] | undefined,
	/** All values that are not equal to given value. */
	createdAt_not?: GraphQLTypes["DateTime"] | undefined,
	/** All values that are contained in given list. */
	createdAt_in?: Array<GraphQLTypes["DateTime"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	createdAt_not_in?: Array<GraphQLTypes["DateTime"] | undefined> | undefined,
	/** All values less than the given value. */
	createdAt_lt?: GraphQLTypes["DateTime"] | undefined,
	/** All values less than or equal the given value. */
	createdAt_lte?: GraphQLTypes["DateTime"] | undefined,
	/** All values greater than the given value. */
	createdAt_gt?: GraphQLTypes["DateTime"] | undefined,
	/** All values greater than or equal the given value. */
	createdAt_gte?: GraphQLTypes["DateTime"] | undefined,
	id?: string | undefined,
	/** All values that are not equal to given value. */
	id_not?: string | undefined,
	/** All values that are contained in given list. */
	id_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	id_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	id_contains?: string | undefined,
	/** All values not containing the given string. */
	id_not_contains?: string | undefined,
	/** All values starting with the given string. */
	id_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	id_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	id_ends_with?: string | undefined,
	/** All values not ending with the given string */
	id_not_ends_with?: string | undefined,
	publishedBy?: GraphQLTypes["UserWhereInput"] | undefined,
	updatedBy?: GraphQLTypes["UserWhereInput"] | undefined,
	createdBy?: GraphQLTypes["UserWhereInput"] | undefined,
	imageProject_every?: GraphQLTypes["ProjectWhereInput"] | undefined,
	imageProject_some?: GraphQLTypes["ProjectWhereInput"] | undefined,
	imageProject_none?: GraphQLTypes["ProjectWhereInput"] | undefined,
	og_imageSeo_every?: GraphQLTypes["SeoWhereInput"] | undefined,
	og_imageSeo_some?: GraphQLTypes["SeoWhereInput"] | undefined,
	og_imageSeo_none?: GraphQLTypes["SeoWhereInput"] | undefined,
	photoAboutMe_every?: GraphQLTypes["AboutMeWhereInput"] | undefined,
	photoAboutMe_some?: GraphQLTypes["AboutMeWhereInput"] | undefined,
	photoAboutMe_none?: GraphQLTypes["AboutMeWhereInput"] | undefined,
	scheduledIn_every?: GraphQLTypes["ScheduledOperationWhereInput"] | undefined,
	scheduledIn_some?: GraphQLTypes["ScheduledOperationWhereInput"] | undefined,
	scheduledIn_none?: GraphQLTypes["ScheduledOperationWhereInput"] | undefined
};
	/** References Asset record uniquely */
["AssetWhereUniqueInput"]: {
		id?: string | undefined
};
	["BatchPayload"]: {
	__typename: "BatchPayload",
	/** The number of nodes that have been affected by the Batch operation. */
	count: GraphQLTypes["Long"]
};
	/** Representing a color value comprising of HEX, RGBA and css color values */
["Color"]: {
	__typename: "Color",
	hex: GraphQLTypes["Hex"],
	rgba: GraphQLTypes["RGBA"],
	css: string
};
	/** Accepts either HEX or RGBA color value. At least one of hex or rgba value should be passed. If both are passed RGBA is used. */
["ColorInput"]: {
		hex?: GraphQLTypes["Hex"] | undefined,
	rgba?: GraphQLTypes["RGBAInput"] | undefined
};
	["Company"]: {
	__typename: "Company",
	/** System stage field */
	stage: GraphQLTypes["Stage"],
	/** The unique identifier */
	id: string,
	companyName: string,
	companyWebsite: string
};
	["CompanyConnectInput"]: {
		/** Document to connect */
	where: GraphQLTypes["CompanyWhereUniqueInput"],
	/** Allow to specify document position in list of connected documents, will default to appending at end of list */
	position?: GraphQLTypes["ConnectPositionInput"] | undefined
};
	/** A connection to a list of items. */
["CompanyConnection"]: {
	__typename: "CompanyConnection",
	/** Information to aid in pagination. */
	pageInfo: GraphQLTypes["PageInfo"],
	/** A list of edges. */
	edges: Array<GraphQLTypes["CompanyEdge"]>,
	aggregate: GraphQLTypes["Aggregate"]
};
	["CompanyCreateInput"]: {
		companyName: string,
	companyWebsite: string
};
	["CompanyCreateManyInlineInput"]: {
		/** Create and connect multiple existing Company documents */
	create?: Array<GraphQLTypes["CompanyCreateInput"]> | undefined
};
	["CompanyCreateOneInlineInput"]: {
		/** Create and connect one Company document */
	create?: GraphQLTypes["CompanyCreateInput"] | undefined
};
	["CompanyCreateWithPositionInput"]: {
		/** Position in the list of existing component instances, will default to appending at the end of list */
	position?: GraphQLTypes["ConnectPositionInput"] | undefined,
	/** Document to create */
	data: GraphQLTypes["CompanyCreateInput"]
};
	/** An edge in a connection. */
["CompanyEdge"]: {
	__typename: "CompanyEdge",
	/** The item at the end of the edge. */
	node: GraphQLTypes["Company"],
	/** A cursor for use in pagination. */
	cursor: string
};
	/** Identifies documents */
["CompanyManyWhereInput"]: {
		/** Contains search across all appropriate fields. */
	_search?: string | undefined,
	/** Logical AND on all given filters. */
	AND?: Array<GraphQLTypes["CompanyWhereInput"]> | undefined,
	/** Logical OR on all given filters. */
	OR?: Array<GraphQLTypes["CompanyWhereInput"]> | undefined,
	/** Logical NOT on all given filters combined by AND. */
	NOT?: Array<GraphQLTypes["CompanyWhereInput"]> | undefined,
	id?: string | undefined,
	/** All values that are not equal to given value. */
	id_not?: string | undefined,
	/** All values that are contained in given list. */
	id_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	id_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	id_contains?: string | undefined,
	/** All values not containing the given string. */
	id_not_contains?: string | undefined,
	/** All values starting with the given string. */
	id_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	id_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	id_ends_with?: string | undefined,
	/** All values not ending with the given string */
	id_not_ends_with?: string | undefined,
	companyName?: string | undefined,
	/** All values that are not equal to given value. */
	companyName_not?: string | undefined,
	/** All values that are contained in given list. */
	companyName_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	companyName_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	companyName_contains?: string | undefined,
	/** All values not containing the given string. */
	companyName_not_contains?: string | undefined,
	/** All values starting with the given string. */
	companyName_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	companyName_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	companyName_ends_with?: string | undefined,
	/** All values not ending with the given string */
	companyName_not_ends_with?: string | undefined,
	companyWebsite?: string | undefined,
	/** All values that are not equal to given value. */
	companyWebsite_not?: string | undefined,
	/** All values that are contained in given list. */
	companyWebsite_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	companyWebsite_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	companyWebsite_contains?: string | undefined,
	/** All values not containing the given string. */
	companyWebsite_not_contains?: string | undefined,
	/** All values starting with the given string. */
	companyWebsite_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	companyWebsite_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	companyWebsite_ends_with?: string | undefined,
	/** All values not ending with the given string */
	companyWebsite_not_ends_with?: string | undefined
};
	["CompanyOrderByInput"]: CompanyOrderByInput;
	["CompanyParent"]:{
        	__typename:"AboutMe"
        	['...on AboutMe']: '__union' & GraphQLTypes["AboutMe"];
};
	["CompanyParentConnectInput"]: {
		AboutMe?: GraphQLTypes["AboutMeConnectInput"] | undefined
};
	["CompanyParentCreateInput"]: {
		AboutMe?: GraphQLTypes["AboutMeCreateInput"] | undefined
};
	["CompanyParentCreateManyInlineInput"]: {
		/** Create and connect multiple existing CompanyParent documents */
	create?: Array<GraphQLTypes["CompanyParentCreateInput"]> | undefined,
	/** Connect multiple existing CompanyParent documents */
	connect?: Array<GraphQLTypes["CompanyParentWhereUniqueInput"]> | undefined
};
	["CompanyParentCreateOneInlineInput"]: {
		/** Create and connect one CompanyParent document */
	create?: GraphQLTypes["CompanyParentCreateInput"] | undefined,
	/** Connect one existing CompanyParent document */
	connect?: GraphQLTypes["CompanyParentWhereUniqueInput"] | undefined
};
	["CompanyParentUpdateInput"]: {
		AboutMe?: GraphQLTypes["AboutMeUpdateInput"] | undefined
};
	["CompanyParentUpdateManyInlineInput"]: {
		/** Create and connect multiple CompanyParent documents */
	create?: Array<GraphQLTypes["CompanyParentCreateInput"]> | undefined,
	/** Connect multiple existing CompanyParent documents */
	connect?: Array<GraphQLTypes["CompanyParentConnectInput"]> | undefined,
	/** Override currently-connected documents with multiple existing CompanyParent documents */
	set?: Array<GraphQLTypes["CompanyParentWhereUniqueInput"]> | undefined,
	/** Update multiple CompanyParent documents */
	update?: Array<GraphQLTypes["CompanyParentUpdateWithNestedWhereUniqueInput"]> | undefined,
	/** Upsert multiple CompanyParent documents */
	upsert?: Array<GraphQLTypes["CompanyParentUpsertWithNestedWhereUniqueInput"]> | undefined,
	/** Disconnect multiple CompanyParent documents */
	disconnect?: Array<GraphQLTypes["CompanyParentWhereUniqueInput"]> | undefined,
	/** Delete multiple CompanyParent documents */
	delete?: Array<GraphQLTypes["CompanyParentWhereUniqueInput"]> | undefined
};
	["CompanyParentUpdateManyWithNestedWhereInput"]: {
		AboutMe?: GraphQLTypes["AboutMeUpdateManyWithNestedWhereInput"] | undefined
};
	["CompanyParentUpdateOneInlineInput"]: {
		/** Create and connect one CompanyParent document */
	create?: GraphQLTypes["CompanyParentCreateInput"] | undefined,
	/** Update single CompanyParent document */
	update?: GraphQLTypes["CompanyParentUpdateWithNestedWhereUniqueInput"] | undefined,
	/** Upsert single CompanyParent document */
	upsert?: GraphQLTypes["CompanyParentUpsertWithNestedWhereUniqueInput"] | undefined,
	/** Connect existing CompanyParent document */
	connect?: GraphQLTypes["CompanyParentWhereUniqueInput"] | undefined,
	/** Disconnect currently connected CompanyParent document */
	disconnect?: boolean | undefined,
	/** Delete currently connected CompanyParent document */
	delete?: boolean | undefined
};
	["CompanyParentUpdateWithNestedWhereUniqueInput"]: {
		AboutMe?: GraphQLTypes["AboutMeUpdateWithNestedWhereUniqueInput"] | undefined
};
	["CompanyParentUpsertWithNestedWhereUniqueInput"]: {
		AboutMe?: GraphQLTypes["AboutMeUpsertWithNestedWhereUniqueInput"] | undefined
};
	["CompanyParentWhereInput"]: {
		AboutMe?: GraphQLTypes["AboutMeWhereInput"] | undefined
};
	["CompanyParentWhereUniqueInput"]: {
		AboutMe?: GraphQLTypes["AboutMeWhereUniqueInput"] | undefined
};
	["CompanyUpdateInput"]: {
		companyName?: string | undefined,
	companyWebsite?: string | undefined
};
	["CompanyUpdateManyInlineInput"]: {
		/** Create and connect multiple Company component instances */
	create?: Array<GraphQLTypes["CompanyCreateWithPositionInput"]> | undefined,
	/** Update multiple Company component instances */
	update?: Array<GraphQLTypes["CompanyUpdateWithNestedWhereUniqueAndPositionInput"]> | undefined,
	/** Upsert multiple Company component instances */
	upsert?: Array<GraphQLTypes["CompanyUpsertWithNestedWhereUniqueAndPositionInput"]> | undefined,
	/** Delete multiple Company documents */
	delete?: Array<GraphQLTypes["CompanyWhereUniqueInput"]> | undefined
};
	["CompanyUpdateManyInput"]: {
		companyName?: string | undefined,
	companyWebsite?: string | undefined
};
	["CompanyUpdateManyWithNestedWhereInput"]: {
		/** Document search */
	where: GraphQLTypes["CompanyWhereInput"],
	/** Update many input */
	data: GraphQLTypes["CompanyUpdateManyInput"]
};
	["CompanyUpdateOneInlineInput"]: {
		/** Create and connect one Company document */
	create?: GraphQLTypes["CompanyCreateInput"] | undefined,
	/** Update single Company document */
	update?: GraphQLTypes["CompanyUpdateWithNestedWhereUniqueInput"] | undefined,
	/** Upsert single Company document */
	upsert?: GraphQLTypes["CompanyUpsertWithNestedWhereUniqueInput"] | undefined,
	/** Delete currently connected Company document */
	delete?: boolean | undefined
};
	["CompanyUpdateWithNestedWhereUniqueAndPositionInput"]: {
		/** Unique component instance search */
	where: GraphQLTypes["CompanyWhereUniqueInput"],
	/** Position in the list of existing component instances, will default to appending at the end of list */
	position?: GraphQLTypes["ConnectPositionInput"] | undefined,
	/** Document to update */
	data?: GraphQLTypes["CompanyUpdateInput"] | undefined
};
	["CompanyUpdateWithNestedWhereUniqueInput"]: {
		/** Unique document search */
	where: GraphQLTypes["CompanyWhereUniqueInput"],
	/** Document to update */
	data: GraphQLTypes["CompanyUpdateInput"]
};
	["CompanyUpsertInput"]: {
		/** Create document if it didn't exist */
	create: GraphQLTypes["CompanyCreateInput"],
	/** Update document if it exists */
	update: GraphQLTypes["CompanyUpdateInput"]
};
	["CompanyUpsertWithNestedWhereUniqueAndPositionInput"]: {
		/** Unique component instance search */
	where: GraphQLTypes["CompanyWhereUniqueInput"],
	/** Position in the list of existing component instances, will default to appending at the end of list */
	position?: GraphQLTypes["ConnectPositionInput"] | undefined,
	/** Document to upsert */
	data?: GraphQLTypes["CompanyUpsertInput"] | undefined
};
	["CompanyUpsertWithNestedWhereUniqueInput"]: {
		/** Unique document search */
	where: GraphQLTypes["CompanyWhereUniqueInput"],
	/** Upsert data */
	data: GraphQLTypes["CompanyUpsertInput"]
};
	/** Identifies documents */
["CompanyWhereInput"]: {
		/** Contains search across all appropriate fields. */
	_search?: string | undefined,
	/** Logical AND on all given filters. */
	AND?: Array<GraphQLTypes["CompanyWhereInput"]> | undefined,
	/** Logical OR on all given filters. */
	OR?: Array<GraphQLTypes["CompanyWhereInput"]> | undefined,
	/** Logical NOT on all given filters combined by AND. */
	NOT?: Array<GraphQLTypes["CompanyWhereInput"]> | undefined,
	id?: string | undefined,
	/** All values that are not equal to given value. */
	id_not?: string | undefined,
	/** All values that are contained in given list. */
	id_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	id_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	id_contains?: string | undefined,
	/** All values not containing the given string. */
	id_not_contains?: string | undefined,
	/** All values starting with the given string. */
	id_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	id_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	id_ends_with?: string | undefined,
	/** All values not ending with the given string */
	id_not_ends_with?: string | undefined,
	companyName?: string | undefined,
	/** All values that are not equal to given value. */
	companyName_not?: string | undefined,
	/** All values that are contained in given list. */
	companyName_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	companyName_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	companyName_contains?: string | undefined,
	/** All values not containing the given string. */
	companyName_not_contains?: string | undefined,
	/** All values starting with the given string. */
	companyName_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	companyName_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	companyName_ends_with?: string | undefined,
	/** All values not ending with the given string */
	companyName_not_ends_with?: string | undefined,
	companyWebsite?: string | undefined,
	/** All values that are not equal to given value. */
	companyWebsite_not?: string | undefined,
	/** All values that are contained in given list. */
	companyWebsite_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	companyWebsite_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	companyWebsite_contains?: string | undefined,
	/** All values not containing the given string. */
	companyWebsite_not_contains?: string | undefined,
	/** All values starting with the given string. */
	companyWebsite_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	companyWebsite_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	companyWebsite_ends_with?: string | undefined,
	/** All values not ending with the given string */
	companyWebsite_not_ends_with?: string | undefined
};
	/** References Company record uniquely */
["CompanyWhereUniqueInput"]: {
		id?: string | undefined
};
	["ConnectPositionInput"]: {
		/** Connect document after specified document */
	after?: string | undefined,
	/** Connect document before specified document */
	before?: string | undefined,
	/** Connect document at first position */
	start?: boolean | undefined,
	/** Connect document at last position */
	end?: boolean | undefined
};
	/** A date string, such as 2007-12-03 (YYYY-MM-DD), compliant with ISO 8601 standard for representation of dates using the Gregorian calendar. */
["Date"]: "scalar" & { name: "Date" };
	/** A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the date-timeformat outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representationof dates and times using the Gregorian calendar. */
["DateTime"]: "scalar" & { name: "DateTime" };
	["DocumentFileTypes"]: DocumentFileTypes;
	["DocumentOutputInput"]: {
		/** Transforms a document into a desired file type.
See this matrix for format support:

PDF:	jpg, odp, ods, odt, png, svg, txt, and webp
DOC:	docx, html, jpg, odt, pdf, png, svg, txt, and webp
DOCX:	doc, html, jpg, odt, pdf, png, svg, txt, and webp
ODT:	doc, docx, html, jpg, pdf, png, svg, txt, and webp
XLS:	jpg, pdf, ods, png, svg, xlsx, and webp
XLSX:	jpg, pdf, ods, png, svg, xls, and webp
ODS:	jpg, pdf, png, xls, svg, xlsx, and webp
PPT:	jpg, odp, pdf, png, svg, pptx, and webp
PPTX:	jpg, odp, pdf, png, svg, ppt, and webp
ODP:	jpg, pdf, png, ppt, svg, pptx, and webp
BMP:	jpg, odp, ods, odt, pdf, png, svg, and webp
GIF:	jpg, odp, ods, odt, pdf, png, svg, and webp
JPG:	jpg, odp, ods, odt, pdf, png, svg, and webp
PNG:	jpg, odp, ods, odt, pdf, png, svg, and webp
WEBP:	jpg, odp, ods, odt, pdf, png, svg, and webp
TIFF:	jpg, odp, ods, odt, pdf, png, svg, and webp
AI:	    jpg, odp, ods, odt, pdf, png, svg, and webp
PSD:	jpg, odp, ods, odt, pdf, png, svg, and webp
SVG:	jpg, odp, ods, odt, pdf, png, and webp
HTML:	jpg, odt, pdf, svg, txt, and webp
TXT:	jpg, html, odt, pdf, svg, and webp */
	format?: GraphQLTypes["DocumentFileTypes"] | undefined
};
	/** Transformations for Documents */
["DocumentTransformationInput"]: {
		/** Changes the output for the file. */
	output?: GraphQLTypes["DocumentOutputInput"] | undefined
};
	["DocumentVersion"]: {
	__typename: "DocumentVersion",
	id: string,
	stage: GraphQLTypes["Stage"],
	revision: number,
	createdAt: GraphQLTypes["DateTime"],
	data?: GraphQLTypes["Json"] | undefined
};
	["Hex"]: "scalar" & { name: "Hex" };
	["ImageFit"]: ImageFit;
	["ImageResizeInput"]: {
		/** The width in pixels to resize the image to. The value must be an integer from 1 to 10000. */
	width?: number | undefined,
	/** The height in pixels to resize the image to. The value must be an integer from 1 to 10000. */
	height?: number | undefined,
	/** The default value for the fit parameter is fit:clip. */
	fit?: GraphQLTypes["ImageFit"] | undefined
};
	/** Transformations for Images */
["ImageTransformationInput"]: {
		/** Resizes the image */
	resize?: GraphQLTypes["ImageResizeInput"] | undefined
};
	/** Raw JSON value */
["Json"]: "scalar" & { name: "Json" };
	["Link"]: {
	__typename: "Link",
	/** System stage field */
	stage: GraphQLTypes["Stage"],
	/** The unique identifier */
	id: string,
	name: string,
	url: string,
	icon?: GraphQLTypes["Asset"] | undefined
};
	["LinkConnectInput"]: {
		/** Document to connect */
	where: GraphQLTypes["LinkWhereUniqueInput"],
	/** Allow to specify document position in list of connected documents, will default to appending at end of list */
	position?: GraphQLTypes["ConnectPositionInput"] | undefined
};
	/** A connection to a list of items. */
["LinkConnection"]: {
	__typename: "LinkConnection",
	/** Information to aid in pagination. */
	pageInfo: GraphQLTypes["PageInfo"],
	/** A list of edges. */
	edges: Array<GraphQLTypes["LinkEdge"]>,
	aggregate: GraphQLTypes["Aggregate"]
};
	["LinkCreateInput"]: {
		name: string,
	url: string,
	icon?: GraphQLTypes["AssetCreateOneInlineInput"] | undefined
};
	["LinkCreateManyInlineInput"]: {
		/** Create and connect multiple existing Link documents */
	create?: Array<GraphQLTypes["LinkCreateInput"]> | undefined
};
	["LinkCreateOneInlineInput"]: {
		/** Create and connect one Link document */
	create?: GraphQLTypes["LinkCreateInput"] | undefined
};
	["LinkCreateWithPositionInput"]: {
		/** Position in the list of existing component instances, will default to appending at the end of list */
	position?: GraphQLTypes["ConnectPositionInput"] | undefined,
	/** Document to create */
	data: GraphQLTypes["LinkCreateInput"]
};
	/** An edge in a connection. */
["LinkEdge"]: {
	__typename: "LinkEdge",
	/** The item at the end of the edge. */
	node: GraphQLTypes["Link"],
	/** A cursor for use in pagination. */
	cursor: string
};
	/** Identifies documents */
["LinkManyWhereInput"]: {
		/** Contains search across all appropriate fields. */
	_search?: string | undefined,
	/** Logical AND on all given filters. */
	AND?: Array<GraphQLTypes["LinkWhereInput"]> | undefined,
	/** Logical OR on all given filters. */
	OR?: Array<GraphQLTypes["LinkWhereInput"]> | undefined,
	/** Logical NOT on all given filters combined by AND. */
	NOT?: Array<GraphQLTypes["LinkWhereInput"]> | undefined,
	id?: string | undefined,
	/** All values that are not equal to given value. */
	id_not?: string | undefined,
	/** All values that are contained in given list. */
	id_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	id_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	id_contains?: string | undefined,
	/** All values not containing the given string. */
	id_not_contains?: string | undefined,
	/** All values starting with the given string. */
	id_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	id_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	id_ends_with?: string | undefined,
	/** All values not ending with the given string */
	id_not_ends_with?: string | undefined,
	name?: string | undefined,
	/** All values that are not equal to given value. */
	name_not?: string | undefined,
	/** All values that are contained in given list. */
	name_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	name_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	name_contains?: string | undefined,
	/** All values not containing the given string. */
	name_not_contains?: string | undefined,
	/** All values starting with the given string. */
	name_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	name_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	name_ends_with?: string | undefined,
	/** All values not ending with the given string */
	name_not_ends_with?: string | undefined,
	url?: string | undefined,
	/** All values that are not equal to given value. */
	url_not?: string | undefined,
	/** All values that are contained in given list. */
	url_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	url_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	url_contains?: string | undefined,
	/** All values not containing the given string. */
	url_not_contains?: string | undefined,
	/** All values starting with the given string. */
	url_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	url_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	url_ends_with?: string | undefined,
	/** All values not ending with the given string */
	url_not_ends_with?: string | undefined,
	icon?: GraphQLTypes["AssetWhereInput"] | undefined
};
	["LinkOrderByInput"]: LinkOrderByInput;
	["LinkParent"]:{
        	__typename:"AboutMe"
        	['...on AboutMe']: '__union' & GraphQLTypes["AboutMe"];
};
	["LinkParentConnectInput"]: {
		AboutMe?: GraphQLTypes["AboutMeConnectInput"] | undefined
};
	["LinkParentCreateInput"]: {
		AboutMe?: GraphQLTypes["AboutMeCreateInput"] | undefined
};
	["LinkParentCreateManyInlineInput"]: {
		/** Create and connect multiple existing LinkParent documents */
	create?: Array<GraphQLTypes["LinkParentCreateInput"]> | undefined,
	/** Connect multiple existing LinkParent documents */
	connect?: Array<GraphQLTypes["LinkParentWhereUniqueInput"]> | undefined
};
	["LinkParentCreateOneInlineInput"]: {
		/** Create and connect one LinkParent document */
	create?: GraphQLTypes["LinkParentCreateInput"] | undefined,
	/** Connect one existing LinkParent document */
	connect?: GraphQLTypes["LinkParentWhereUniqueInput"] | undefined
};
	["LinkParentUpdateInput"]: {
		AboutMe?: GraphQLTypes["AboutMeUpdateInput"] | undefined
};
	["LinkParentUpdateManyInlineInput"]: {
		/** Create and connect multiple LinkParent documents */
	create?: Array<GraphQLTypes["LinkParentCreateInput"]> | undefined,
	/** Connect multiple existing LinkParent documents */
	connect?: Array<GraphQLTypes["LinkParentConnectInput"]> | undefined,
	/** Override currently-connected documents with multiple existing LinkParent documents */
	set?: Array<GraphQLTypes["LinkParentWhereUniqueInput"]> | undefined,
	/** Update multiple LinkParent documents */
	update?: Array<GraphQLTypes["LinkParentUpdateWithNestedWhereUniqueInput"]> | undefined,
	/** Upsert multiple LinkParent documents */
	upsert?: Array<GraphQLTypes["LinkParentUpsertWithNestedWhereUniqueInput"]> | undefined,
	/** Disconnect multiple LinkParent documents */
	disconnect?: Array<GraphQLTypes["LinkParentWhereUniqueInput"]> | undefined,
	/** Delete multiple LinkParent documents */
	delete?: Array<GraphQLTypes["LinkParentWhereUniqueInput"]> | undefined
};
	["LinkParentUpdateManyWithNestedWhereInput"]: {
		AboutMe?: GraphQLTypes["AboutMeUpdateManyWithNestedWhereInput"] | undefined
};
	["LinkParentUpdateOneInlineInput"]: {
		/** Create and connect one LinkParent document */
	create?: GraphQLTypes["LinkParentCreateInput"] | undefined,
	/** Update single LinkParent document */
	update?: GraphQLTypes["LinkParentUpdateWithNestedWhereUniqueInput"] | undefined,
	/** Upsert single LinkParent document */
	upsert?: GraphQLTypes["LinkParentUpsertWithNestedWhereUniqueInput"] | undefined,
	/** Connect existing LinkParent document */
	connect?: GraphQLTypes["LinkParentWhereUniqueInput"] | undefined,
	/** Disconnect currently connected LinkParent document */
	disconnect?: boolean | undefined,
	/** Delete currently connected LinkParent document */
	delete?: boolean | undefined
};
	["LinkParentUpdateWithNestedWhereUniqueInput"]: {
		AboutMe?: GraphQLTypes["AboutMeUpdateWithNestedWhereUniqueInput"] | undefined
};
	["LinkParentUpsertWithNestedWhereUniqueInput"]: {
		AboutMe?: GraphQLTypes["AboutMeUpsertWithNestedWhereUniqueInput"] | undefined
};
	["LinkParentWhereInput"]: {
		AboutMe?: GraphQLTypes["AboutMeWhereInput"] | undefined
};
	["LinkParentWhereUniqueInput"]: {
		AboutMe?: GraphQLTypes["AboutMeWhereUniqueInput"] | undefined
};
	["LinkUpdateInput"]: {
		name?: string | undefined,
	url?: string | undefined,
	icon?: GraphQLTypes["AssetUpdateOneInlineInput"] | undefined
};
	["LinkUpdateManyInlineInput"]: {
		/** Create and connect multiple Link component instances */
	create?: Array<GraphQLTypes["LinkCreateWithPositionInput"]> | undefined,
	/** Update multiple Link component instances */
	update?: Array<GraphQLTypes["LinkUpdateWithNestedWhereUniqueAndPositionInput"]> | undefined,
	/** Upsert multiple Link component instances */
	upsert?: Array<GraphQLTypes["LinkUpsertWithNestedWhereUniqueAndPositionInput"]> | undefined,
	/** Delete multiple Link documents */
	delete?: Array<GraphQLTypes["LinkWhereUniqueInput"]> | undefined
};
	["LinkUpdateManyInput"]: {
		url?: string | undefined
};
	["LinkUpdateManyWithNestedWhereInput"]: {
		/** Document search */
	where: GraphQLTypes["LinkWhereInput"],
	/** Update many input */
	data: GraphQLTypes["LinkUpdateManyInput"]
};
	["LinkUpdateOneInlineInput"]: {
		/** Create and connect one Link document */
	create?: GraphQLTypes["LinkCreateInput"] | undefined,
	/** Update single Link document */
	update?: GraphQLTypes["LinkUpdateWithNestedWhereUniqueInput"] | undefined,
	/** Upsert single Link document */
	upsert?: GraphQLTypes["LinkUpsertWithNestedWhereUniqueInput"] | undefined,
	/** Delete currently connected Link document */
	delete?: boolean | undefined
};
	["LinkUpdateWithNestedWhereUniqueAndPositionInput"]: {
		/** Unique component instance search */
	where: GraphQLTypes["LinkWhereUniqueInput"],
	/** Position in the list of existing component instances, will default to appending at the end of list */
	position?: GraphQLTypes["ConnectPositionInput"] | undefined,
	/** Document to update */
	data?: GraphQLTypes["LinkUpdateInput"] | undefined
};
	["LinkUpdateWithNestedWhereUniqueInput"]: {
		/** Unique document search */
	where: GraphQLTypes["LinkWhereUniqueInput"],
	/** Document to update */
	data: GraphQLTypes["LinkUpdateInput"]
};
	["LinkUpsertInput"]: {
		/** Create document if it didn't exist */
	create: GraphQLTypes["LinkCreateInput"],
	/** Update document if it exists */
	update: GraphQLTypes["LinkUpdateInput"]
};
	["LinkUpsertWithNestedWhereUniqueAndPositionInput"]: {
		/** Unique component instance search */
	where: GraphQLTypes["LinkWhereUniqueInput"],
	/** Position in the list of existing component instances, will default to appending at the end of list */
	position?: GraphQLTypes["ConnectPositionInput"] | undefined,
	/** Document to upsert */
	data?: GraphQLTypes["LinkUpsertInput"] | undefined
};
	["LinkUpsertWithNestedWhereUniqueInput"]: {
		/** Unique document search */
	where: GraphQLTypes["LinkWhereUniqueInput"],
	/** Upsert data */
	data: GraphQLTypes["LinkUpsertInput"]
};
	/** Identifies documents */
["LinkWhereInput"]: {
		/** Contains search across all appropriate fields. */
	_search?: string | undefined,
	/** Logical AND on all given filters. */
	AND?: Array<GraphQLTypes["LinkWhereInput"]> | undefined,
	/** Logical OR on all given filters. */
	OR?: Array<GraphQLTypes["LinkWhereInput"]> | undefined,
	/** Logical NOT on all given filters combined by AND. */
	NOT?: Array<GraphQLTypes["LinkWhereInput"]> | undefined,
	id?: string | undefined,
	/** All values that are not equal to given value. */
	id_not?: string | undefined,
	/** All values that are contained in given list. */
	id_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	id_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	id_contains?: string | undefined,
	/** All values not containing the given string. */
	id_not_contains?: string | undefined,
	/** All values starting with the given string. */
	id_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	id_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	id_ends_with?: string | undefined,
	/** All values not ending with the given string */
	id_not_ends_with?: string | undefined,
	name?: string | undefined,
	/** All values that are not equal to given value. */
	name_not?: string | undefined,
	/** All values that are contained in given list. */
	name_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	name_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	name_contains?: string | undefined,
	/** All values not containing the given string. */
	name_not_contains?: string | undefined,
	/** All values starting with the given string. */
	name_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	name_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	name_ends_with?: string | undefined,
	/** All values not ending with the given string */
	name_not_ends_with?: string | undefined,
	url?: string | undefined,
	/** All values that are not equal to given value. */
	url_not?: string | undefined,
	/** All values that are contained in given list. */
	url_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	url_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	url_contains?: string | undefined,
	/** All values not containing the given string. */
	url_not_contains?: string | undefined,
	/** All values starting with the given string. */
	url_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	url_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	url_ends_with?: string | undefined,
	/** All values not ending with the given string */
	url_not_ends_with?: string | undefined,
	icon?: GraphQLTypes["AssetWhereInput"] | undefined
};
	/** References Link record uniquely */
["LinkWhereUniqueInput"]: {
		id?: string | undefined,
	name?: string | undefined
};
	/** Locale system enumeration */
["Locale"]: Locale;
	/** Representing a geolocation point with latitude and longitude */
["Location"]: {
	__typename: "Location",
	latitude: number,
	longitude: number,
	distance: number
};
	/** Input for a geolocation point with latitude and longitude */
["LocationInput"]: {
		latitude: number,
	longitude: number
};
	/** The Long scalar type represents non-fractional signed whole numeric values. Long can represent values between -(2^63) and 2^63 - 1. */
["Long"]: "scalar" & { name: "Long" };
	["Mutation"]: {
	__typename: "Mutation",
	/** Create one asset */
	createAsset?: GraphQLTypes["Asset"] | undefined,
	/** Update one asset */
	updateAsset?: GraphQLTypes["Asset"] | undefined,
	/** Delete one asset from _all_ existing stages. Returns deleted document. */
	deleteAsset?: GraphQLTypes["Asset"] | undefined,
	/** Upsert one asset */
	upsertAsset?: GraphQLTypes["Asset"] | undefined,
	/** Publish one asset */
	publishAsset?: GraphQLTypes["Asset"] | undefined,
	/** Unpublish one asset from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only. */
	unpublishAsset?: GraphQLTypes["Asset"] | undefined,
	/** Update many Asset documents */
	updateManyAssetsConnection: GraphQLTypes["AssetConnection"],
	/** Delete many Asset documents, return deleted documents */
	deleteManyAssetsConnection: GraphQLTypes["AssetConnection"],
	/** Publish many Asset documents */
	publishManyAssetsConnection: GraphQLTypes["AssetConnection"],
	/** Find many Asset documents that match criteria in specified stage and unpublish from target stages */
	unpublishManyAssetsConnection: GraphQLTypes["AssetConnection"],
	/** Update many assets */
	updateManyAssets: GraphQLTypes["BatchPayload"],
	/** Delete many Asset documents */
	deleteManyAssets: GraphQLTypes["BatchPayload"],
	/** Publish many Asset documents */
	publishManyAssets: GraphQLTypes["BatchPayload"],
	/** Unpublish many Asset documents */
	unpublishManyAssets: GraphQLTypes["BatchPayload"],
	/** Schedule to publish one asset */
	schedulePublishAsset?: GraphQLTypes["Asset"] | undefined,
	/** Unpublish one asset from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only. */
	scheduleUnpublishAsset?: GraphQLTypes["Asset"] | undefined,
	/** Delete and return scheduled operation */
	deleteScheduledOperation?: GraphQLTypes["ScheduledOperation"] | undefined,
	/** Create one scheduledRelease */
	createScheduledRelease?: GraphQLTypes["ScheduledRelease"] | undefined,
	/** Update one scheduledRelease */
	updateScheduledRelease?: GraphQLTypes["ScheduledRelease"] | undefined,
	/** Delete one scheduledRelease from _all_ existing stages. Returns deleted document. */
	deleteScheduledRelease?: GraphQLTypes["ScheduledRelease"] | undefined,
	/** Create one project */
	createProject?: GraphQLTypes["Project"] | undefined,
	/** Update one project */
	updateProject?: GraphQLTypes["Project"] | undefined,
	/** Delete one project from _all_ existing stages. Returns deleted document. */
	deleteProject?: GraphQLTypes["Project"] | undefined,
	/** Upsert one project */
	upsertProject?: GraphQLTypes["Project"] | undefined,
	/** Publish one project */
	publishProject?: GraphQLTypes["Project"] | undefined,
	/** Unpublish one project from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only. */
	unpublishProject?: GraphQLTypes["Project"] | undefined,
	/** Update many Project documents */
	updateManyProjectsConnection: GraphQLTypes["ProjectConnection"],
	/** Delete many Project documents, return deleted documents */
	deleteManyProjectsConnection: GraphQLTypes["ProjectConnection"],
	/** Publish many Project documents */
	publishManyProjectsConnection: GraphQLTypes["ProjectConnection"],
	/** Find many Project documents that match criteria in specified stage and unpublish from target stages */
	unpublishManyProjectsConnection: GraphQLTypes["ProjectConnection"],
	/** Update many projects */
	updateManyProjects: GraphQLTypes["BatchPayload"],
	/** Delete many Project documents */
	deleteManyProjects: GraphQLTypes["BatchPayload"],
	/** Publish many Project documents */
	publishManyProjects: GraphQLTypes["BatchPayload"],
	/** Unpublish many Project documents */
	unpublishManyProjects: GraphQLTypes["BatchPayload"],
	/** Schedule to publish one project */
	schedulePublishProject?: GraphQLTypes["Project"] | undefined,
	/** Unpublish one project from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only. */
	scheduleUnpublishProject?: GraphQLTypes["Project"] | undefined,
	/** Create one seo */
	createSeo?: GraphQLTypes["Seo"] | undefined,
	/** Update one seo */
	updateSeo?: GraphQLTypes["Seo"] | undefined,
	/** Delete one seo from _all_ existing stages. Returns deleted document. */
	deleteSeo?: GraphQLTypes["Seo"] | undefined,
	/** Upsert one seo */
	upsertSeo?: GraphQLTypes["Seo"] | undefined,
	/** Publish one seo */
	publishSeo?: GraphQLTypes["Seo"] | undefined,
	/** Unpublish one seo from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only. */
	unpublishSeo?: GraphQLTypes["Seo"] | undefined,
	/** Update many Seo documents */
	updateManySeosConnection: GraphQLTypes["SeoConnection"],
	/** Delete many Seo documents, return deleted documents */
	deleteManySeosConnection: GraphQLTypes["SeoConnection"],
	/** Publish many Seo documents */
	publishManySeosConnection: GraphQLTypes["SeoConnection"],
	/** Find many Seo documents that match criteria in specified stage and unpublish from target stages */
	unpublishManySeosConnection: GraphQLTypes["SeoConnection"],
	/** Update many seos */
	updateManySeos: GraphQLTypes["BatchPayload"],
	/** Delete many Seo documents */
	deleteManySeos: GraphQLTypes["BatchPayload"],
	/** Publish many Seo documents */
	publishManySeos: GraphQLTypes["BatchPayload"],
	/** Unpublish many Seo documents */
	unpublishManySeos: GraphQLTypes["BatchPayload"],
	/** Schedule to publish one seo */
	schedulePublishSeo?: GraphQLTypes["Seo"] | undefined,
	/** Unpublish one seo from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only. */
	scheduleUnpublishSeo?: GraphQLTypes["Seo"] | undefined,
	/** Create one aboutMe */
	createAboutMe?: GraphQLTypes["AboutMe"] | undefined,
	/** Update one aboutMe */
	updateAboutMe?: GraphQLTypes["AboutMe"] | undefined,
	/** Delete one aboutMe from _all_ existing stages. Returns deleted document. */
	deleteAboutMe?: GraphQLTypes["AboutMe"] | undefined,
	/** Upsert one aboutMe */
	upsertAboutMe?: GraphQLTypes["AboutMe"] | undefined,
	/** Publish one aboutMe */
	publishAboutMe?: GraphQLTypes["AboutMe"] | undefined,
	/** Unpublish one aboutMe from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only. */
	unpublishAboutMe?: GraphQLTypes["AboutMe"] | undefined,
	/** Update many AboutMe documents */
	updateManyAboutMesConnection: GraphQLTypes["AboutMeConnection"],
	/** Delete many AboutMe documents, return deleted documents */
	deleteManyAboutMesConnection: GraphQLTypes["AboutMeConnection"],
	/** Publish many AboutMe documents */
	publishManyAboutMesConnection: GraphQLTypes["AboutMeConnection"],
	/** Find many AboutMe documents that match criteria in specified stage and unpublish from target stages */
	unpublishManyAboutMesConnection: GraphQLTypes["AboutMeConnection"],
	/** Update many aboutMes */
	updateManyAboutMes: GraphQLTypes["BatchPayload"],
	/** Delete many AboutMe documents */
	deleteManyAboutMes: GraphQLTypes["BatchPayload"],
	/** Publish many AboutMe documents */
	publishManyAboutMes: GraphQLTypes["BatchPayload"],
	/** Unpublish many AboutMe documents */
	unpublishManyAboutMes: GraphQLTypes["BatchPayload"],
	/** Schedule to publish one aboutMe */
	schedulePublishAboutMe?: GraphQLTypes["AboutMe"] | undefined,
	/** Unpublish one aboutMe from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only. */
	scheduleUnpublishAboutMe?: GraphQLTypes["AboutMe"] | undefined,
	/** Create one skillCategory */
	createSkillCategory?: GraphQLTypes["SkillCategory"] | undefined,
	/** Update one skillCategory */
	updateSkillCategory?: GraphQLTypes["SkillCategory"] | undefined,
	/** Delete one skillCategory from _all_ existing stages. Returns deleted document. */
	deleteSkillCategory?: GraphQLTypes["SkillCategory"] | undefined,
	/** Upsert one skillCategory */
	upsertSkillCategory?: GraphQLTypes["SkillCategory"] | undefined,
	/** Publish one skillCategory */
	publishSkillCategory?: GraphQLTypes["SkillCategory"] | undefined,
	/** Unpublish one skillCategory from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only. */
	unpublishSkillCategory?: GraphQLTypes["SkillCategory"] | undefined,
	/** Update many SkillCategory documents */
	updateManySkillCategoriesConnection: GraphQLTypes["SkillCategoryConnection"],
	/** Delete many SkillCategory documents, return deleted documents */
	deleteManySkillCategoriesConnection: GraphQLTypes["SkillCategoryConnection"],
	/** Publish many SkillCategory documents */
	publishManySkillCategoriesConnection: GraphQLTypes["SkillCategoryConnection"],
	/** Find many SkillCategory documents that match criteria in specified stage and unpublish from target stages */
	unpublishManySkillCategoriesConnection: GraphQLTypes["SkillCategoryConnection"],
	/** Update many skillCategories */
	updateManySkillCategories: GraphQLTypes["BatchPayload"],
	/** Delete many SkillCategory documents */
	deleteManySkillCategories: GraphQLTypes["BatchPayload"],
	/** Publish many SkillCategory documents */
	publishManySkillCategories: GraphQLTypes["BatchPayload"],
	/** Unpublish many SkillCategory documents */
	unpublishManySkillCategories: GraphQLTypes["BatchPayload"],
	/** Schedule to publish one skillCategory */
	schedulePublishSkillCategory?: GraphQLTypes["SkillCategory"] | undefined,
	/** Unpublish one skillCategory from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only. */
	scheduleUnpublishSkillCategory?: GraphQLTypes["SkillCategory"] | undefined
};
	/** An object with an ID */
["Node"]: {
	__typename:"AboutMe" | "Asset" | "Project" | "ScheduledOperation" | "ScheduledRelease" | "Seo" | "SkillCategory" | "User",
	/** The id of the object. */
	id: string,
	/** The Stage of an object */
	stage: GraphQLTypes["Stage"]
	['...on AboutMe']: '__union' & GraphQLTypes["AboutMe"];
	['...on Asset']: '__union' & GraphQLTypes["Asset"];
	['...on Project']: '__union' & GraphQLTypes["Project"];
	['...on ScheduledOperation']: '__union' & GraphQLTypes["ScheduledOperation"];
	['...on ScheduledRelease']: '__union' & GraphQLTypes["ScheduledRelease"];
	['...on Seo']: '__union' & GraphQLTypes["Seo"];
	['...on SkillCategory']: '__union' & GraphQLTypes["SkillCategory"];
	['...on User']: '__union' & GraphQLTypes["User"];
};
	/** Information about pagination in a connection. */
["PageInfo"]: {
	__typename: "PageInfo",
	/** When paginating forwards, are there more items? */
	hasNextPage: boolean,
	/** When paginating backwards, are there more items? */
	hasPreviousPage: boolean,
	/** When paginating backwards, the cursor to continue. */
	startCursor?: string | undefined,
	/** When paginating forwards, the cursor to continue. */
	endCursor?: string | undefined,
	/** Number of items in the current page. */
	pageSize?: number | undefined
};
	["Project"]: {
	__typename: "Project",
	/** System stage field */
	stage: GraphQLTypes["Stage"],
	/** Get the document in other stages */
	documentInStages: Array<GraphQLTypes["Project"]>,
	/** The time the document was published. Null on documents in draft stage. */
	publishedAt?: GraphQLTypes["DateTime"] | undefined,
	/** The time the document was updated */
	updatedAt: GraphQLTypes["DateTime"],
	/** The time the document was created */
	createdAt: GraphQLTypes["DateTime"],
	/** The unique identifier */
	id: string,
	name: string,
	description: string,
	demo?: string | undefined,
	sourceCode?: string | undefined,
	/** User that last published this document */
	publishedBy?: GraphQLTypes["User"] | undefined,
	/** User that last updated this document */
	updatedBy?: GraphQLTypes["User"] | undefined,
	/** User that created this document */
	createdBy?: GraphQLTypes["User"] | undefined,
	/** Add one or more images of the project  */
	image: Array<GraphQLTypes["Asset"]>,
	/** Tech stack for project */
	stack: Array<GraphQLTypes["Technologies"]>,
	scheduledIn: Array<GraphQLTypes["ScheduledOperation"]>,
	/** List of Project versions */
	history: Array<GraphQLTypes["Version"]>
};
	["ProjectConnectInput"]: {
		/** Document to connect */
	where: GraphQLTypes["ProjectWhereUniqueInput"],
	/** Allow to specify document position in list of connected documents, will default to appending at end of list */
	position?: GraphQLTypes["ConnectPositionInput"] | undefined
};
	/** A connection to a list of items. */
["ProjectConnection"]: {
	__typename: "ProjectConnection",
	/** Information to aid in pagination. */
	pageInfo: GraphQLTypes["PageInfo"],
	/** A list of edges. */
	edges: Array<GraphQLTypes["ProjectEdge"]>,
	aggregate: GraphQLTypes["Aggregate"]
};
	["ProjectCreateInput"]: {
		updatedAt?: GraphQLTypes["DateTime"] | undefined,
	createdAt?: GraphQLTypes["DateTime"] | undefined,
	name: string,
	description: string,
	demo?: string | undefined,
	sourceCode?: string | undefined,
	image: GraphQLTypes["AssetCreateManyInlineInput"],
	stack?: Array<GraphQLTypes["Technologies"]> | undefined
};
	["ProjectCreateManyInlineInput"]: {
		/** Create and connect multiple existing Project documents */
	create?: Array<GraphQLTypes["ProjectCreateInput"]> | undefined,
	/** Connect multiple existing Project documents */
	connect?: Array<GraphQLTypes["ProjectWhereUniqueInput"]> | undefined
};
	["ProjectCreateOneInlineInput"]: {
		/** Create and connect one Project document */
	create?: GraphQLTypes["ProjectCreateInput"] | undefined,
	/** Connect one existing Project document */
	connect?: GraphQLTypes["ProjectWhereUniqueInput"] | undefined
};
	/** An edge in a connection. */
["ProjectEdge"]: {
	__typename: "ProjectEdge",
	/** The item at the end of the edge. */
	node: GraphQLTypes["Project"],
	/** A cursor for use in pagination. */
	cursor: string
};
	/** Identifies documents */
["ProjectManyWhereInput"]: {
		/** Contains search across all appropriate fields. */
	_search?: string | undefined,
	/** Logical AND on all given filters. */
	AND?: Array<GraphQLTypes["ProjectWhereInput"]> | undefined,
	/** Logical OR on all given filters. */
	OR?: Array<GraphQLTypes["ProjectWhereInput"]> | undefined,
	/** Logical NOT on all given filters combined by AND. */
	NOT?: Array<GraphQLTypes["ProjectWhereInput"]> | undefined,
	publishedAt?: GraphQLTypes["DateTime"] | undefined,
	/** All values that are not equal to given value. */
	publishedAt_not?: GraphQLTypes["DateTime"] | undefined,
	/** All values that are contained in given list. */
	publishedAt_in?: Array<GraphQLTypes["DateTime"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	publishedAt_not_in?: Array<GraphQLTypes["DateTime"] | undefined> | undefined,
	/** All values less than the given value. */
	publishedAt_lt?: GraphQLTypes["DateTime"] | undefined,
	/** All values less than or equal the given value. */
	publishedAt_lte?: GraphQLTypes["DateTime"] | undefined,
	/** All values greater than the given value. */
	publishedAt_gt?: GraphQLTypes["DateTime"] | undefined,
	/** All values greater than or equal the given value. */
	publishedAt_gte?: GraphQLTypes["DateTime"] | undefined,
	updatedAt?: GraphQLTypes["DateTime"] | undefined,
	/** All values that are not equal to given value. */
	updatedAt_not?: GraphQLTypes["DateTime"] | undefined,
	/** All values that are contained in given list. */
	updatedAt_in?: Array<GraphQLTypes["DateTime"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	updatedAt_not_in?: Array<GraphQLTypes["DateTime"] | undefined> | undefined,
	/** All values less than the given value. */
	updatedAt_lt?: GraphQLTypes["DateTime"] | undefined,
	/** All values less than or equal the given value. */
	updatedAt_lte?: GraphQLTypes["DateTime"] | undefined,
	/** All values greater than the given value. */
	updatedAt_gt?: GraphQLTypes["DateTime"] | undefined,
	/** All values greater than or equal the given value. */
	updatedAt_gte?: GraphQLTypes["DateTime"] | undefined,
	createdAt?: GraphQLTypes["DateTime"] | undefined,
	/** All values that are not equal to given value. */
	createdAt_not?: GraphQLTypes["DateTime"] | undefined,
	/** All values that are contained in given list. */
	createdAt_in?: Array<GraphQLTypes["DateTime"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	createdAt_not_in?: Array<GraphQLTypes["DateTime"] | undefined> | undefined,
	/** All values less than the given value. */
	createdAt_lt?: GraphQLTypes["DateTime"] | undefined,
	/** All values less than or equal the given value. */
	createdAt_lte?: GraphQLTypes["DateTime"] | undefined,
	/** All values greater than the given value. */
	createdAt_gt?: GraphQLTypes["DateTime"] | undefined,
	/** All values greater than or equal the given value. */
	createdAt_gte?: GraphQLTypes["DateTime"] | undefined,
	id?: string | undefined,
	/** All values that are not equal to given value. */
	id_not?: string | undefined,
	/** All values that are contained in given list. */
	id_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	id_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	id_contains?: string | undefined,
	/** All values not containing the given string. */
	id_not_contains?: string | undefined,
	/** All values starting with the given string. */
	id_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	id_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	id_ends_with?: string | undefined,
	/** All values not ending with the given string */
	id_not_ends_with?: string | undefined,
	name?: string | undefined,
	/** All values that are not equal to given value. */
	name_not?: string | undefined,
	/** All values that are contained in given list. */
	name_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	name_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	name_contains?: string | undefined,
	/** All values not containing the given string. */
	name_not_contains?: string | undefined,
	/** All values starting with the given string. */
	name_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	name_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	name_ends_with?: string | undefined,
	/** All values not ending with the given string */
	name_not_ends_with?: string | undefined,
	description?: string | undefined,
	/** All values that are not equal to given value. */
	description_not?: string | undefined,
	/** All values that are contained in given list. */
	description_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	description_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	description_contains?: string | undefined,
	/** All values not containing the given string. */
	description_not_contains?: string | undefined,
	/** All values starting with the given string. */
	description_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	description_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	description_ends_with?: string | undefined,
	/** All values not ending with the given string */
	description_not_ends_with?: string | undefined,
	demo?: string | undefined,
	/** All values that are not equal to given value. */
	demo_not?: string | undefined,
	/** All values that are contained in given list. */
	demo_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	demo_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	demo_contains?: string | undefined,
	/** All values not containing the given string. */
	demo_not_contains?: string | undefined,
	/** All values starting with the given string. */
	demo_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	demo_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	demo_ends_with?: string | undefined,
	/** All values not ending with the given string */
	demo_not_ends_with?: string | undefined,
	sourceCode?: string | undefined,
	/** All values that are not equal to given value. */
	sourceCode_not?: string | undefined,
	/** All values that are contained in given list. */
	sourceCode_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	sourceCode_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	sourceCode_contains?: string | undefined,
	/** All values not containing the given string. */
	sourceCode_not_contains?: string | undefined,
	/** All values starting with the given string. */
	sourceCode_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	sourceCode_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	sourceCode_ends_with?: string | undefined,
	/** All values not ending with the given string */
	sourceCode_not_ends_with?: string | undefined,
	publishedBy?: GraphQLTypes["UserWhereInput"] | undefined,
	updatedBy?: GraphQLTypes["UserWhereInput"] | undefined,
	createdBy?: GraphQLTypes["UserWhereInput"] | undefined,
	image_every?: GraphQLTypes["AssetWhereInput"] | undefined,
	image_some?: GraphQLTypes["AssetWhereInput"] | undefined,
	image_none?: GraphQLTypes["AssetWhereInput"] | undefined,
	/** Matches if the field array contains *all* items provided to the filter and order does match */
	stack?: Array<GraphQLTypes["Technologies"]> | undefined,
	/** Matches if the field array does not contains *all* items provided to the filter or order does not match */
	stack_not?: Array<GraphQLTypes["Technologies"]> | undefined,
	/** Matches if the field array contains *all* items provided to the filter */
	stack_contains_all?: Array<GraphQLTypes["Technologies"]> | undefined,
	/** Matches if the field array contains at least one item provided to the filter */
	stack_contains_some?: Array<GraphQLTypes["Technologies"]> | undefined,
	/** Matches if the field array does not contain any of the items provided to the filter */
	stack_contains_none?: Array<GraphQLTypes["Technologies"]> | undefined,
	scheduledIn_every?: GraphQLTypes["ScheduledOperationWhereInput"] | undefined,
	scheduledIn_some?: GraphQLTypes["ScheduledOperationWhereInput"] | undefined,
	scheduledIn_none?: GraphQLTypes["ScheduledOperationWhereInput"] | undefined
};
	["ProjectOrderByInput"]: ProjectOrderByInput;
	["ProjectUpdateInput"]: {
		name?: string | undefined,
	description?: string | undefined,
	demo?: string | undefined,
	sourceCode?: string | undefined,
	image?: GraphQLTypes["AssetUpdateManyInlineInput"] | undefined,
	stack?: Array<GraphQLTypes["Technologies"]> | undefined
};
	["ProjectUpdateManyInlineInput"]: {
		/** Create and connect multiple Project documents */
	create?: Array<GraphQLTypes["ProjectCreateInput"]> | undefined,
	/** Connect multiple existing Project documents */
	connect?: Array<GraphQLTypes["ProjectConnectInput"]> | undefined,
	/** Override currently-connected documents with multiple existing Project documents */
	set?: Array<GraphQLTypes["ProjectWhereUniqueInput"]> | undefined,
	/** Update multiple Project documents */
	update?: Array<GraphQLTypes["ProjectUpdateWithNestedWhereUniqueInput"]> | undefined,
	/** Upsert multiple Project documents */
	upsert?: Array<GraphQLTypes["ProjectUpsertWithNestedWhereUniqueInput"]> | undefined,
	/** Disconnect multiple Project documents */
	disconnect?: Array<GraphQLTypes["ProjectWhereUniqueInput"]> | undefined,
	/** Delete multiple Project documents */
	delete?: Array<GraphQLTypes["ProjectWhereUniqueInput"]> | undefined
};
	["ProjectUpdateManyInput"]: {
		description?: string | undefined,
	demo?: string | undefined,
	sourceCode?: string | undefined,
	stack?: Array<GraphQLTypes["Technologies"]> | undefined
};
	["ProjectUpdateManyWithNestedWhereInput"]: {
		/** Document search */
	where: GraphQLTypes["ProjectWhereInput"],
	/** Update many input */
	data: GraphQLTypes["ProjectUpdateManyInput"]
};
	["ProjectUpdateOneInlineInput"]: {
		/** Create and connect one Project document */
	create?: GraphQLTypes["ProjectCreateInput"] | undefined,
	/** Update single Project document */
	update?: GraphQLTypes["ProjectUpdateWithNestedWhereUniqueInput"] | undefined,
	/** Upsert single Project document */
	upsert?: GraphQLTypes["ProjectUpsertWithNestedWhereUniqueInput"] | undefined,
	/** Connect existing Project document */
	connect?: GraphQLTypes["ProjectWhereUniqueInput"] | undefined,
	/** Disconnect currently connected Project document */
	disconnect?: boolean | undefined,
	/** Delete currently connected Project document */
	delete?: boolean | undefined
};
	["ProjectUpdateWithNestedWhereUniqueInput"]: {
		/** Unique document search */
	where: GraphQLTypes["ProjectWhereUniqueInput"],
	/** Document to update */
	data: GraphQLTypes["ProjectUpdateInput"]
};
	["ProjectUpsertInput"]: {
		/** Create document if it didn't exist */
	create: GraphQLTypes["ProjectCreateInput"],
	/** Update document if it exists */
	update: GraphQLTypes["ProjectUpdateInput"]
};
	["ProjectUpsertWithNestedWhereUniqueInput"]: {
		/** Unique document search */
	where: GraphQLTypes["ProjectWhereUniqueInput"],
	/** Upsert data */
	data: GraphQLTypes["ProjectUpsertInput"]
};
	/** Identifies documents */
["ProjectWhereInput"]: {
		/** Contains search across all appropriate fields. */
	_search?: string | undefined,
	/** Logical AND on all given filters. */
	AND?: Array<GraphQLTypes["ProjectWhereInput"]> | undefined,
	/** Logical OR on all given filters. */
	OR?: Array<GraphQLTypes["ProjectWhereInput"]> | undefined,
	/** Logical NOT on all given filters combined by AND. */
	NOT?: Array<GraphQLTypes["ProjectWhereInput"]> | undefined,
	publishedAt?: GraphQLTypes["DateTime"] | undefined,
	/** All values that are not equal to given value. */
	publishedAt_not?: GraphQLTypes["DateTime"] | undefined,
	/** All values that are contained in given list. */
	publishedAt_in?: Array<GraphQLTypes["DateTime"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	publishedAt_not_in?: Array<GraphQLTypes["DateTime"] | undefined> | undefined,
	/** All values less than the given value. */
	publishedAt_lt?: GraphQLTypes["DateTime"] | undefined,
	/** All values less than or equal the given value. */
	publishedAt_lte?: GraphQLTypes["DateTime"] | undefined,
	/** All values greater than the given value. */
	publishedAt_gt?: GraphQLTypes["DateTime"] | undefined,
	/** All values greater than or equal the given value. */
	publishedAt_gte?: GraphQLTypes["DateTime"] | undefined,
	updatedAt?: GraphQLTypes["DateTime"] | undefined,
	/** All values that are not equal to given value. */
	updatedAt_not?: GraphQLTypes["DateTime"] | undefined,
	/** All values that are contained in given list. */
	updatedAt_in?: Array<GraphQLTypes["DateTime"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	updatedAt_not_in?: Array<GraphQLTypes["DateTime"] | undefined> | undefined,
	/** All values less than the given value. */
	updatedAt_lt?: GraphQLTypes["DateTime"] | undefined,
	/** All values less than or equal the given value. */
	updatedAt_lte?: GraphQLTypes["DateTime"] | undefined,
	/** All values greater than the given value. */
	updatedAt_gt?: GraphQLTypes["DateTime"] | undefined,
	/** All values greater than or equal the given value. */
	updatedAt_gte?: GraphQLTypes["DateTime"] | undefined,
	createdAt?: GraphQLTypes["DateTime"] | undefined,
	/** All values that are not equal to given value. */
	createdAt_not?: GraphQLTypes["DateTime"] | undefined,
	/** All values that are contained in given list. */
	createdAt_in?: Array<GraphQLTypes["DateTime"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	createdAt_not_in?: Array<GraphQLTypes["DateTime"] | undefined> | undefined,
	/** All values less than the given value. */
	createdAt_lt?: GraphQLTypes["DateTime"] | undefined,
	/** All values less than or equal the given value. */
	createdAt_lte?: GraphQLTypes["DateTime"] | undefined,
	/** All values greater than the given value. */
	createdAt_gt?: GraphQLTypes["DateTime"] | undefined,
	/** All values greater than or equal the given value. */
	createdAt_gte?: GraphQLTypes["DateTime"] | undefined,
	id?: string | undefined,
	/** All values that are not equal to given value. */
	id_not?: string | undefined,
	/** All values that are contained in given list. */
	id_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	id_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	id_contains?: string | undefined,
	/** All values not containing the given string. */
	id_not_contains?: string | undefined,
	/** All values starting with the given string. */
	id_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	id_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	id_ends_with?: string | undefined,
	/** All values not ending with the given string */
	id_not_ends_with?: string | undefined,
	name?: string | undefined,
	/** All values that are not equal to given value. */
	name_not?: string | undefined,
	/** All values that are contained in given list. */
	name_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	name_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	name_contains?: string | undefined,
	/** All values not containing the given string. */
	name_not_contains?: string | undefined,
	/** All values starting with the given string. */
	name_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	name_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	name_ends_with?: string | undefined,
	/** All values not ending with the given string */
	name_not_ends_with?: string | undefined,
	description?: string | undefined,
	/** All values that are not equal to given value. */
	description_not?: string | undefined,
	/** All values that are contained in given list. */
	description_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	description_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	description_contains?: string | undefined,
	/** All values not containing the given string. */
	description_not_contains?: string | undefined,
	/** All values starting with the given string. */
	description_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	description_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	description_ends_with?: string | undefined,
	/** All values not ending with the given string */
	description_not_ends_with?: string | undefined,
	demo?: string | undefined,
	/** All values that are not equal to given value. */
	demo_not?: string | undefined,
	/** All values that are contained in given list. */
	demo_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	demo_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	demo_contains?: string | undefined,
	/** All values not containing the given string. */
	demo_not_contains?: string | undefined,
	/** All values starting with the given string. */
	demo_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	demo_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	demo_ends_with?: string | undefined,
	/** All values not ending with the given string */
	demo_not_ends_with?: string | undefined,
	sourceCode?: string | undefined,
	/** All values that are not equal to given value. */
	sourceCode_not?: string | undefined,
	/** All values that are contained in given list. */
	sourceCode_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	sourceCode_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	sourceCode_contains?: string | undefined,
	/** All values not containing the given string. */
	sourceCode_not_contains?: string | undefined,
	/** All values starting with the given string. */
	sourceCode_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	sourceCode_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	sourceCode_ends_with?: string | undefined,
	/** All values not ending with the given string */
	sourceCode_not_ends_with?: string | undefined,
	publishedBy?: GraphQLTypes["UserWhereInput"] | undefined,
	updatedBy?: GraphQLTypes["UserWhereInput"] | undefined,
	createdBy?: GraphQLTypes["UserWhereInput"] | undefined,
	image_every?: GraphQLTypes["AssetWhereInput"] | undefined,
	image_some?: GraphQLTypes["AssetWhereInput"] | undefined,
	image_none?: GraphQLTypes["AssetWhereInput"] | undefined,
	/** Matches if the field array contains *all* items provided to the filter and order does match */
	stack?: Array<GraphQLTypes["Technologies"]> | undefined,
	/** Matches if the field array does not contains *all* items provided to the filter or order does not match */
	stack_not?: Array<GraphQLTypes["Technologies"]> | undefined,
	/** Matches if the field array contains *all* items provided to the filter */
	stack_contains_all?: Array<GraphQLTypes["Technologies"]> | undefined,
	/** Matches if the field array contains at least one item provided to the filter */
	stack_contains_some?: Array<GraphQLTypes["Technologies"]> | undefined,
	/** Matches if the field array does not contain any of the items provided to the filter */
	stack_contains_none?: Array<GraphQLTypes["Technologies"]> | undefined,
	scheduledIn_every?: GraphQLTypes["ScheduledOperationWhereInput"] | undefined,
	scheduledIn_some?: GraphQLTypes["ScheduledOperationWhereInput"] | undefined,
	scheduledIn_none?: GraphQLTypes["ScheduledOperationWhereInput"] | undefined
};
	/** References Project record uniquely */
["ProjectWhereUniqueInput"]: {
		id?: string | undefined,
	name?: string | undefined
};
	["PublishLocaleInput"]: {
		/** Locales to publish */
	locale: GraphQLTypes["Locale"],
	/** Stages to publish selected locales to */
	stages: Array<GraphQLTypes["Stage"]>
};
	["Query"]: {
	__typename: "Query",
	/** Fetches an object given its ID */
	node?: GraphQLTypes["Node"] | undefined,
	/** Retrieve multiple users */
	users: Array<GraphQLTypes["User"]>,
	/** Retrieve a single user */
	user?: GraphQLTypes["User"] | undefined,
	/** Retrieve multiple users using the Relay connection interface */
	usersConnection: GraphQLTypes["UserConnection"],
	/** Retrieve multiple assets */
	assets: Array<GraphQLTypes["Asset"]>,
	/** Retrieve a single asset */
	asset?: GraphQLTypes["Asset"] | undefined,
	/** Retrieve multiple assets using the Relay connection interface */
	assetsConnection: GraphQLTypes["AssetConnection"],
	/** Retrieve document version */
	assetVersion?: GraphQLTypes["DocumentVersion"] | undefined,
	/** Retrieve multiple scheduledOperations */
	scheduledOperations: Array<GraphQLTypes["ScheduledOperation"]>,
	/** Retrieve a single scheduledOperation */
	scheduledOperation?: GraphQLTypes["ScheduledOperation"] | undefined,
	/** Retrieve multiple scheduledOperations using the Relay connection interface */
	scheduledOperationsConnection: GraphQLTypes["ScheduledOperationConnection"],
	/** Retrieve multiple scheduledReleases */
	scheduledReleases: Array<GraphQLTypes["ScheduledRelease"]>,
	/** Retrieve a single scheduledRelease */
	scheduledRelease?: GraphQLTypes["ScheduledRelease"] | undefined,
	/** Retrieve multiple scheduledReleases using the Relay connection interface */
	scheduledReleasesConnection: GraphQLTypes["ScheduledReleaseConnection"],
	/** Retrieve multiple projects */
	projects: Array<GraphQLTypes["Project"]>,
	/** Retrieve a single project */
	project?: GraphQLTypes["Project"] | undefined,
	/** Retrieve multiple projects using the Relay connection interface */
	projectsConnection: GraphQLTypes["ProjectConnection"],
	/** Retrieve document version */
	projectVersion?: GraphQLTypes["DocumentVersion"] | undefined,
	/** Retrieve multiple seos */
	seos: Array<GraphQLTypes["Seo"]>,
	/** Retrieve a single seo */
	seo?: GraphQLTypes["Seo"] | undefined,
	/** Retrieve multiple seos using the Relay connection interface */
	seosConnection: GraphQLTypes["SeoConnection"],
	/** Retrieve document version */
	seoVersion?: GraphQLTypes["DocumentVersion"] | undefined,
	/** Retrieve multiple aboutMes */
	aboutMes: Array<GraphQLTypes["AboutMe"]>,
	/** Retrieve a single aboutMe */
	aboutMe?: GraphQLTypes["AboutMe"] | undefined,
	/** Retrieve multiple aboutMes using the Relay connection interface */
	aboutMesConnection: GraphQLTypes["AboutMeConnection"],
	/** Retrieve document version */
	aboutMeVersion?: GraphQLTypes["DocumentVersion"] | undefined,
	/** Retrieve multiple skillCategories */
	skillCategories: Array<GraphQLTypes["SkillCategory"]>,
	/** Retrieve a single skillCategory */
	skillCategory?: GraphQLTypes["SkillCategory"] | undefined,
	/** Retrieve multiple skillCategories using the Relay connection interface */
	skillCategoriesConnection: GraphQLTypes["SkillCategoryConnection"],
	/** Retrieve document version */
	skillCategoryVersion?: GraphQLTypes["DocumentVersion"] | undefined
};
	/** Representing a RGBA color value: https://developer.mozilla.org/en-US/docs/Web/CSS/color_value#rgb()_and_rgba() */
["RGBA"]: {
	__typename: "RGBA",
	r: GraphQLTypes["RGBAHue"],
	g: GraphQLTypes["RGBAHue"],
	b: GraphQLTypes["RGBAHue"],
	a: GraphQLTypes["RGBATransparency"]
};
	["RGBAHue"]: "scalar" & { name: "RGBAHue" };
	/** Input type representing a RGBA color value: https://developer.mozilla.org/en-US/docs/Web/CSS/color_value#rgb()_and_rgba() */
["RGBAInput"]: {
		r: GraphQLTypes["RGBAHue"],
	g: GraphQLTypes["RGBAHue"],
	b: GraphQLTypes["RGBAHue"],
	a: GraphQLTypes["RGBATransparency"]
};
	["RGBATransparency"]: "scalar" & { name: "RGBATransparency" };
	/** Custom type representing a rich text value comprising of raw rich text ast, html, markdown and text values */
["RichText"]: {
	__typename: "RichText",
	/** Returns AST representation */
	raw: GraphQLTypes["RichTextAST"],
	/** Returns HTMl representation */
	html: string,
	/** Returns Markdown representation */
	markdown: string,
	/** Returns plain-text contents of RichText */
	text: string
};
	/** Slate-compatible RichText AST */
["RichTextAST"]: "scalar" & { name: "RichTextAST" };
	/** Scheduled Operation system model */
["ScheduledOperation"]: {
	__typename: "ScheduledOperation",
	/** System stage field */
	stage: GraphQLTypes["Stage"],
	/** Get the document in other stages */
	documentInStages: Array<GraphQLTypes["ScheduledOperation"]>,
	/** Raw operation payload including all details, this field is subject to change */
	rawPayload: GraphQLTypes["Json"],
	/** Operation error message */
	errorMessage?: string | undefined,
	/** Operation description */
	description?: string | undefined,
	/** The time the document was published. Null on documents in draft stage. */
	publishedAt?: GraphQLTypes["DateTime"] | undefined,
	/** The time the document was updated */
	updatedAt: GraphQLTypes["DateTime"],
	/** The time the document was created */
	createdAt: GraphQLTypes["DateTime"],
	/** The unique identifier */
	id: string,
	/** The release this operation is scheduled for */
	release?: GraphQLTypes["ScheduledRelease"] | undefined,
	/** User that last published this document */
	publishedBy?: GraphQLTypes["User"] | undefined,
	/** User that last updated this document */
	updatedBy?: GraphQLTypes["User"] | undefined,
	/** User that created this document */
	createdBy?: GraphQLTypes["User"] | undefined,
	/** operation Status */
	status: GraphQLTypes["ScheduledOperationStatus"],
	affectedDocuments: Array<GraphQLTypes["ScheduledOperationAffectedDocument"]>
};
	["ScheduledOperationAffectedDocument"]:{
        	__typename:"AboutMe" | "Asset" | "Project" | "Seo" | "SkillCategory"
        	['...on AboutMe']: '__union' & GraphQLTypes["AboutMe"];
	['...on Asset']: '__union' & GraphQLTypes["Asset"];
	['...on Project']: '__union' & GraphQLTypes["Project"];
	['...on Seo']: '__union' & GraphQLTypes["Seo"];
	['...on SkillCategory']: '__union' & GraphQLTypes["SkillCategory"];
};
	["ScheduledOperationConnectInput"]: {
		/** Document to connect */
	where: GraphQLTypes["ScheduledOperationWhereUniqueInput"],
	/** Allow to specify document position in list of connected documents, will default to appending at end of list */
	position?: GraphQLTypes["ConnectPositionInput"] | undefined
};
	/** A connection to a list of items. */
["ScheduledOperationConnection"]: {
	__typename: "ScheduledOperationConnection",
	/** Information to aid in pagination. */
	pageInfo: GraphQLTypes["PageInfo"],
	/** A list of edges. */
	edges: Array<GraphQLTypes["ScheduledOperationEdge"]>,
	aggregate: GraphQLTypes["Aggregate"]
};
	["ScheduledOperationCreateManyInlineInput"]: {
		/** Connect multiple existing ScheduledOperation documents */
	connect?: Array<GraphQLTypes["ScheduledOperationWhereUniqueInput"]> | undefined
};
	["ScheduledOperationCreateOneInlineInput"]: {
		/** Connect one existing ScheduledOperation document */
	connect?: GraphQLTypes["ScheduledOperationWhereUniqueInput"] | undefined
};
	/** An edge in a connection. */
["ScheduledOperationEdge"]: {
	__typename: "ScheduledOperationEdge",
	/** The item at the end of the edge. */
	node: GraphQLTypes["ScheduledOperation"],
	/** A cursor for use in pagination. */
	cursor: string
};
	/** Identifies documents */
["ScheduledOperationManyWhereInput"]: {
		/** Contains search across all appropriate fields. */
	_search?: string | undefined,
	/** Logical AND on all given filters. */
	AND?: Array<GraphQLTypes["ScheduledOperationWhereInput"]> | undefined,
	/** Logical OR on all given filters. */
	OR?: Array<GraphQLTypes["ScheduledOperationWhereInput"]> | undefined,
	/** Logical NOT on all given filters combined by AND. */
	NOT?: Array<GraphQLTypes["ScheduledOperationWhereInput"]> | undefined,
	errorMessage?: string | undefined,
	/** All values that are not equal to given value. */
	errorMessage_not?: string | undefined,
	/** All values that are contained in given list. */
	errorMessage_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	errorMessage_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	errorMessage_contains?: string | undefined,
	/** All values not containing the given string. */
	errorMessage_not_contains?: string | undefined,
	/** All values starting with the given string. */
	errorMessage_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	errorMessage_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	errorMessage_ends_with?: string | undefined,
	/** All values not ending with the given string */
	errorMessage_not_ends_with?: string | undefined,
	description?: string | undefined,
	/** All values that are not equal to given value. */
	description_not?: string | undefined,
	/** All values that are contained in given list. */
	description_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	description_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	description_contains?: string | undefined,
	/** All values not containing the given string. */
	description_not_contains?: string | undefined,
	/** All values starting with the given string. */
	description_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	description_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	description_ends_with?: string | undefined,
	/** All values not ending with the given string */
	description_not_ends_with?: string | undefined,
	publishedAt?: GraphQLTypes["DateTime"] | undefined,
	/** All values that are not equal to given value. */
	publishedAt_not?: GraphQLTypes["DateTime"] | undefined,
	/** All values that are contained in given list. */
	publishedAt_in?: Array<GraphQLTypes["DateTime"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	publishedAt_not_in?: Array<GraphQLTypes["DateTime"] | undefined> | undefined,
	/** All values less than the given value. */
	publishedAt_lt?: GraphQLTypes["DateTime"] | undefined,
	/** All values less than or equal the given value. */
	publishedAt_lte?: GraphQLTypes["DateTime"] | undefined,
	/** All values greater than the given value. */
	publishedAt_gt?: GraphQLTypes["DateTime"] | undefined,
	/** All values greater than or equal the given value. */
	publishedAt_gte?: GraphQLTypes["DateTime"] | undefined,
	updatedAt?: GraphQLTypes["DateTime"] | undefined,
	/** All values that are not equal to given value. */
	updatedAt_not?: GraphQLTypes["DateTime"] | undefined,
	/** All values that are contained in given list. */
	updatedAt_in?: Array<GraphQLTypes["DateTime"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	updatedAt_not_in?: Array<GraphQLTypes["DateTime"] | undefined> | undefined,
	/** All values less than the given value. */
	updatedAt_lt?: GraphQLTypes["DateTime"] | undefined,
	/** All values less than or equal the given value. */
	updatedAt_lte?: GraphQLTypes["DateTime"] | undefined,
	/** All values greater than the given value. */
	updatedAt_gt?: GraphQLTypes["DateTime"] | undefined,
	/** All values greater than or equal the given value. */
	updatedAt_gte?: GraphQLTypes["DateTime"] | undefined,
	createdAt?: GraphQLTypes["DateTime"] | undefined,
	/** All values that are not equal to given value. */
	createdAt_not?: GraphQLTypes["DateTime"] | undefined,
	/** All values that are contained in given list. */
	createdAt_in?: Array<GraphQLTypes["DateTime"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	createdAt_not_in?: Array<GraphQLTypes["DateTime"] | undefined> | undefined,
	/** All values less than the given value. */
	createdAt_lt?: GraphQLTypes["DateTime"] | undefined,
	/** All values less than or equal the given value. */
	createdAt_lte?: GraphQLTypes["DateTime"] | undefined,
	/** All values greater than the given value. */
	createdAt_gt?: GraphQLTypes["DateTime"] | undefined,
	/** All values greater than or equal the given value. */
	createdAt_gte?: GraphQLTypes["DateTime"] | undefined,
	id?: string | undefined,
	/** All values that are not equal to given value. */
	id_not?: string | undefined,
	/** All values that are contained in given list. */
	id_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	id_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	id_contains?: string | undefined,
	/** All values not containing the given string. */
	id_not_contains?: string | undefined,
	/** All values starting with the given string. */
	id_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	id_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	id_ends_with?: string | undefined,
	/** All values not ending with the given string */
	id_not_ends_with?: string | undefined,
	release?: GraphQLTypes["ScheduledReleaseWhereInput"] | undefined,
	publishedBy?: GraphQLTypes["UserWhereInput"] | undefined,
	updatedBy?: GraphQLTypes["UserWhereInput"] | undefined,
	createdBy?: GraphQLTypes["UserWhereInput"] | undefined,
	status?: GraphQLTypes["ScheduledOperationStatus"] | undefined,
	/** All values that are not equal to given value. */
	status_not?: GraphQLTypes["ScheduledOperationStatus"] | undefined,
	/** All values that are contained in given list. */
	status_in?: Array<GraphQLTypes["ScheduledOperationStatus"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	status_not_in?: Array<GraphQLTypes["ScheduledOperationStatus"] | undefined> | undefined
};
	["ScheduledOperationOrderByInput"]: ScheduledOperationOrderByInput;
	/** System Scheduled Operation Status */
["ScheduledOperationStatus"]: ScheduledOperationStatus;
	["ScheduledOperationUpdateManyInlineInput"]: {
		/** Connect multiple existing ScheduledOperation documents */
	connect?: Array<GraphQLTypes["ScheduledOperationConnectInput"]> | undefined,
	/** Override currently-connected documents with multiple existing ScheduledOperation documents */
	set?: Array<GraphQLTypes["ScheduledOperationWhereUniqueInput"]> | undefined,
	/** Disconnect multiple ScheduledOperation documents */
	disconnect?: Array<GraphQLTypes["ScheduledOperationWhereUniqueInput"]> | undefined
};
	["ScheduledOperationUpdateOneInlineInput"]: {
		/** Connect existing ScheduledOperation document */
	connect?: GraphQLTypes["ScheduledOperationWhereUniqueInput"] | undefined,
	/** Disconnect currently connected ScheduledOperation document */
	disconnect?: boolean | undefined
};
	/** Identifies documents */
["ScheduledOperationWhereInput"]: {
		/** Contains search across all appropriate fields. */
	_search?: string | undefined,
	/** Logical AND on all given filters. */
	AND?: Array<GraphQLTypes["ScheduledOperationWhereInput"]> | undefined,
	/** Logical OR on all given filters. */
	OR?: Array<GraphQLTypes["ScheduledOperationWhereInput"]> | undefined,
	/** Logical NOT on all given filters combined by AND. */
	NOT?: Array<GraphQLTypes["ScheduledOperationWhereInput"]> | undefined,
	errorMessage?: string | undefined,
	/** All values that are not equal to given value. */
	errorMessage_not?: string | undefined,
	/** All values that are contained in given list. */
	errorMessage_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	errorMessage_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	errorMessage_contains?: string | undefined,
	/** All values not containing the given string. */
	errorMessage_not_contains?: string | undefined,
	/** All values starting with the given string. */
	errorMessage_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	errorMessage_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	errorMessage_ends_with?: string | undefined,
	/** All values not ending with the given string */
	errorMessage_not_ends_with?: string | undefined,
	description?: string | undefined,
	/** All values that are not equal to given value. */
	description_not?: string | undefined,
	/** All values that are contained in given list. */
	description_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	description_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	description_contains?: string | undefined,
	/** All values not containing the given string. */
	description_not_contains?: string | undefined,
	/** All values starting with the given string. */
	description_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	description_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	description_ends_with?: string | undefined,
	/** All values not ending with the given string */
	description_not_ends_with?: string | undefined,
	publishedAt?: GraphQLTypes["DateTime"] | undefined,
	/** All values that are not equal to given value. */
	publishedAt_not?: GraphQLTypes["DateTime"] | undefined,
	/** All values that are contained in given list. */
	publishedAt_in?: Array<GraphQLTypes["DateTime"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	publishedAt_not_in?: Array<GraphQLTypes["DateTime"] | undefined> | undefined,
	/** All values less than the given value. */
	publishedAt_lt?: GraphQLTypes["DateTime"] | undefined,
	/** All values less than or equal the given value. */
	publishedAt_lte?: GraphQLTypes["DateTime"] | undefined,
	/** All values greater than the given value. */
	publishedAt_gt?: GraphQLTypes["DateTime"] | undefined,
	/** All values greater than or equal the given value. */
	publishedAt_gte?: GraphQLTypes["DateTime"] | undefined,
	updatedAt?: GraphQLTypes["DateTime"] | undefined,
	/** All values that are not equal to given value. */
	updatedAt_not?: GraphQLTypes["DateTime"] | undefined,
	/** All values that are contained in given list. */
	updatedAt_in?: Array<GraphQLTypes["DateTime"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	updatedAt_not_in?: Array<GraphQLTypes["DateTime"] | undefined> | undefined,
	/** All values less than the given value. */
	updatedAt_lt?: GraphQLTypes["DateTime"] | undefined,
	/** All values less than or equal the given value. */
	updatedAt_lte?: GraphQLTypes["DateTime"] | undefined,
	/** All values greater than the given value. */
	updatedAt_gt?: GraphQLTypes["DateTime"] | undefined,
	/** All values greater than or equal the given value. */
	updatedAt_gte?: GraphQLTypes["DateTime"] | undefined,
	createdAt?: GraphQLTypes["DateTime"] | undefined,
	/** All values that are not equal to given value. */
	createdAt_not?: GraphQLTypes["DateTime"] | undefined,
	/** All values that are contained in given list. */
	createdAt_in?: Array<GraphQLTypes["DateTime"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	createdAt_not_in?: Array<GraphQLTypes["DateTime"] | undefined> | undefined,
	/** All values less than the given value. */
	createdAt_lt?: GraphQLTypes["DateTime"] | undefined,
	/** All values less than or equal the given value. */
	createdAt_lte?: GraphQLTypes["DateTime"] | undefined,
	/** All values greater than the given value. */
	createdAt_gt?: GraphQLTypes["DateTime"] | undefined,
	/** All values greater than or equal the given value. */
	createdAt_gte?: GraphQLTypes["DateTime"] | undefined,
	id?: string | undefined,
	/** All values that are not equal to given value. */
	id_not?: string | undefined,
	/** All values that are contained in given list. */
	id_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	id_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	id_contains?: string | undefined,
	/** All values not containing the given string. */
	id_not_contains?: string | undefined,
	/** All values starting with the given string. */
	id_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	id_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	id_ends_with?: string | undefined,
	/** All values not ending with the given string */
	id_not_ends_with?: string | undefined,
	release?: GraphQLTypes["ScheduledReleaseWhereInput"] | undefined,
	publishedBy?: GraphQLTypes["UserWhereInput"] | undefined,
	updatedBy?: GraphQLTypes["UserWhereInput"] | undefined,
	createdBy?: GraphQLTypes["UserWhereInput"] | undefined,
	status?: GraphQLTypes["ScheduledOperationStatus"] | undefined,
	/** All values that are not equal to given value. */
	status_not?: GraphQLTypes["ScheduledOperationStatus"] | undefined,
	/** All values that are contained in given list. */
	status_in?: Array<GraphQLTypes["ScheduledOperationStatus"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	status_not_in?: Array<GraphQLTypes["ScheduledOperationStatus"] | undefined> | undefined
};
	/** References ScheduledOperation record uniquely */
["ScheduledOperationWhereUniqueInput"]: {
		id?: string | undefined
};
	/** Scheduled Release system model */
["ScheduledRelease"]: {
	__typename: "ScheduledRelease",
	/** System stage field */
	stage: GraphQLTypes["Stage"],
	/** Get the document in other stages */
	documentInStages: Array<GraphQLTypes["ScheduledRelease"]>,
	/** Release date and time */
	releaseAt?: GraphQLTypes["DateTime"] | undefined,
	/** Whether scheduled release is implicit */
	isImplicit: boolean,
	/** Whether scheduled release should be run */
	isActive: boolean,
	/** Release error message */
	errorMessage?: string | undefined,
	/** Release description */
	description?: string | undefined,
	/** Release Title */
	title?: string | undefined,
	/** The time the document was published. Null on documents in draft stage. */
	publishedAt?: GraphQLTypes["DateTime"] | undefined,
	/** The time the document was updated */
	updatedAt: GraphQLTypes["DateTime"],
	/** The time the document was created */
	createdAt: GraphQLTypes["DateTime"],
	/** The unique identifier */
	id: string,
	/** Operations to run with this release */
	operations: Array<GraphQLTypes["ScheduledOperation"]>,
	/** User that last published this document */
	publishedBy?: GraphQLTypes["User"] | undefined,
	/** User that last updated this document */
	updatedBy?: GraphQLTypes["User"] | undefined,
	/** User that created this document */
	createdBy?: GraphQLTypes["User"] | undefined,
	/** Release Status */
	status: GraphQLTypes["ScheduledReleaseStatus"]
};
	["ScheduledReleaseConnectInput"]: {
		/** Document to connect */
	where: GraphQLTypes["ScheduledReleaseWhereUniqueInput"],
	/** Allow to specify document position in list of connected documents, will default to appending at end of list */
	position?: GraphQLTypes["ConnectPositionInput"] | undefined
};
	/** A connection to a list of items. */
["ScheduledReleaseConnection"]: {
	__typename: "ScheduledReleaseConnection",
	/** Information to aid in pagination. */
	pageInfo: GraphQLTypes["PageInfo"],
	/** A list of edges. */
	edges: Array<GraphQLTypes["ScheduledReleaseEdge"]>,
	aggregate: GraphQLTypes["Aggregate"]
};
	["ScheduledReleaseCreateInput"]: {
		releaseAt?: GraphQLTypes["DateTime"] | undefined,
	isActive?: boolean | undefined,
	errorMessage?: string | undefined,
	description?: string | undefined,
	title?: string | undefined,
	updatedAt?: GraphQLTypes["DateTime"] | undefined,
	createdAt?: GraphQLTypes["DateTime"] | undefined
};
	["ScheduledReleaseCreateManyInlineInput"]: {
		/** Create and connect multiple existing ScheduledRelease documents */
	create?: Array<GraphQLTypes["ScheduledReleaseCreateInput"]> | undefined,
	/** Connect multiple existing ScheduledRelease documents */
	connect?: Array<GraphQLTypes["ScheduledReleaseWhereUniqueInput"]> | undefined
};
	["ScheduledReleaseCreateOneInlineInput"]: {
		/** Create and connect one ScheduledRelease document */
	create?: GraphQLTypes["ScheduledReleaseCreateInput"] | undefined,
	/** Connect one existing ScheduledRelease document */
	connect?: GraphQLTypes["ScheduledReleaseWhereUniqueInput"] | undefined
};
	/** An edge in a connection. */
["ScheduledReleaseEdge"]: {
	__typename: "ScheduledReleaseEdge",
	/** The item at the end of the edge. */
	node: GraphQLTypes["ScheduledRelease"],
	/** A cursor for use in pagination. */
	cursor: string
};
	/** Identifies documents */
["ScheduledReleaseManyWhereInput"]: {
		/** Contains search across all appropriate fields. */
	_search?: string | undefined,
	/** Logical AND on all given filters. */
	AND?: Array<GraphQLTypes["ScheduledReleaseWhereInput"]> | undefined,
	/** Logical OR on all given filters. */
	OR?: Array<GraphQLTypes["ScheduledReleaseWhereInput"]> | undefined,
	/** Logical NOT on all given filters combined by AND. */
	NOT?: Array<GraphQLTypes["ScheduledReleaseWhereInput"]> | undefined,
	releaseAt?: GraphQLTypes["DateTime"] | undefined,
	/** All values that are not equal to given value. */
	releaseAt_not?: GraphQLTypes["DateTime"] | undefined,
	/** All values that are contained in given list. */
	releaseAt_in?: Array<GraphQLTypes["DateTime"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	releaseAt_not_in?: Array<GraphQLTypes["DateTime"] | undefined> | undefined,
	/** All values less than the given value. */
	releaseAt_lt?: GraphQLTypes["DateTime"] | undefined,
	/** All values less than or equal the given value. */
	releaseAt_lte?: GraphQLTypes["DateTime"] | undefined,
	/** All values greater than the given value. */
	releaseAt_gt?: GraphQLTypes["DateTime"] | undefined,
	/** All values greater than or equal the given value. */
	releaseAt_gte?: GraphQLTypes["DateTime"] | undefined,
	isImplicit?: boolean | undefined,
	/** All values that are not equal to given value. */
	isImplicit_not?: boolean | undefined,
	isActive?: boolean | undefined,
	/** All values that are not equal to given value. */
	isActive_not?: boolean | undefined,
	errorMessage?: string | undefined,
	/** All values that are not equal to given value. */
	errorMessage_not?: string | undefined,
	/** All values that are contained in given list. */
	errorMessage_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	errorMessage_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	errorMessage_contains?: string | undefined,
	/** All values not containing the given string. */
	errorMessage_not_contains?: string | undefined,
	/** All values starting with the given string. */
	errorMessage_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	errorMessage_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	errorMessage_ends_with?: string | undefined,
	/** All values not ending with the given string */
	errorMessage_not_ends_with?: string | undefined,
	description?: string | undefined,
	/** All values that are not equal to given value. */
	description_not?: string | undefined,
	/** All values that are contained in given list. */
	description_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	description_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	description_contains?: string | undefined,
	/** All values not containing the given string. */
	description_not_contains?: string | undefined,
	/** All values starting with the given string. */
	description_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	description_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	description_ends_with?: string | undefined,
	/** All values not ending with the given string */
	description_not_ends_with?: string | undefined,
	title?: string | undefined,
	/** All values that are not equal to given value. */
	title_not?: string | undefined,
	/** All values that are contained in given list. */
	title_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	title_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	title_contains?: string | undefined,
	/** All values not containing the given string. */
	title_not_contains?: string | undefined,
	/** All values starting with the given string. */
	title_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	title_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	title_ends_with?: string | undefined,
	/** All values not ending with the given string */
	title_not_ends_with?: string | undefined,
	publishedAt?: GraphQLTypes["DateTime"] | undefined,
	/** All values that are not equal to given value. */
	publishedAt_not?: GraphQLTypes["DateTime"] | undefined,
	/** All values that are contained in given list. */
	publishedAt_in?: Array<GraphQLTypes["DateTime"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	publishedAt_not_in?: Array<GraphQLTypes["DateTime"] | undefined> | undefined,
	/** All values less than the given value. */
	publishedAt_lt?: GraphQLTypes["DateTime"] | undefined,
	/** All values less than or equal the given value. */
	publishedAt_lte?: GraphQLTypes["DateTime"] | undefined,
	/** All values greater than the given value. */
	publishedAt_gt?: GraphQLTypes["DateTime"] | undefined,
	/** All values greater than or equal the given value. */
	publishedAt_gte?: GraphQLTypes["DateTime"] | undefined,
	updatedAt?: GraphQLTypes["DateTime"] | undefined,
	/** All values that are not equal to given value. */
	updatedAt_not?: GraphQLTypes["DateTime"] | undefined,
	/** All values that are contained in given list. */
	updatedAt_in?: Array<GraphQLTypes["DateTime"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	updatedAt_not_in?: Array<GraphQLTypes["DateTime"] | undefined> | undefined,
	/** All values less than the given value. */
	updatedAt_lt?: GraphQLTypes["DateTime"] | undefined,
	/** All values less than or equal the given value. */
	updatedAt_lte?: GraphQLTypes["DateTime"] | undefined,
	/** All values greater than the given value. */
	updatedAt_gt?: GraphQLTypes["DateTime"] | undefined,
	/** All values greater than or equal the given value. */
	updatedAt_gte?: GraphQLTypes["DateTime"] | undefined,
	createdAt?: GraphQLTypes["DateTime"] | undefined,
	/** All values that are not equal to given value. */
	createdAt_not?: GraphQLTypes["DateTime"] | undefined,
	/** All values that are contained in given list. */
	createdAt_in?: Array<GraphQLTypes["DateTime"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	createdAt_not_in?: Array<GraphQLTypes["DateTime"] | undefined> | undefined,
	/** All values less than the given value. */
	createdAt_lt?: GraphQLTypes["DateTime"] | undefined,
	/** All values less than or equal the given value. */
	createdAt_lte?: GraphQLTypes["DateTime"] | undefined,
	/** All values greater than the given value. */
	createdAt_gt?: GraphQLTypes["DateTime"] | undefined,
	/** All values greater than or equal the given value. */
	createdAt_gte?: GraphQLTypes["DateTime"] | undefined,
	id?: string | undefined,
	/** All values that are not equal to given value. */
	id_not?: string | undefined,
	/** All values that are contained in given list. */
	id_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	id_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	id_contains?: string | undefined,
	/** All values not containing the given string. */
	id_not_contains?: string | undefined,
	/** All values starting with the given string. */
	id_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	id_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	id_ends_with?: string | undefined,
	/** All values not ending with the given string */
	id_not_ends_with?: string | undefined,
	operations_every?: GraphQLTypes["ScheduledOperationWhereInput"] | undefined,
	operations_some?: GraphQLTypes["ScheduledOperationWhereInput"] | undefined,
	operations_none?: GraphQLTypes["ScheduledOperationWhereInput"] | undefined,
	publishedBy?: GraphQLTypes["UserWhereInput"] | undefined,
	updatedBy?: GraphQLTypes["UserWhereInput"] | undefined,
	createdBy?: GraphQLTypes["UserWhereInput"] | undefined,
	status?: GraphQLTypes["ScheduledReleaseStatus"] | undefined,
	/** All values that are not equal to given value. */
	status_not?: GraphQLTypes["ScheduledReleaseStatus"] | undefined,
	/** All values that are contained in given list. */
	status_in?: Array<GraphQLTypes["ScheduledReleaseStatus"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	status_not_in?: Array<GraphQLTypes["ScheduledReleaseStatus"] | undefined> | undefined
};
	["ScheduledReleaseOrderByInput"]: ScheduledReleaseOrderByInput;
	/** System Scheduled Release Status */
["ScheduledReleaseStatus"]: ScheduledReleaseStatus;
	["ScheduledReleaseUpdateInput"]: {
		releaseAt?: GraphQLTypes["DateTime"] | undefined,
	isActive?: boolean | undefined,
	errorMessage?: string | undefined,
	description?: string | undefined,
	title?: string | undefined
};
	["ScheduledReleaseUpdateManyInlineInput"]: {
		/** Create and connect multiple ScheduledRelease documents */
	create?: Array<GraphQLTypes["ScheduledReleaseCreateInput"]> | undefined,
	/** Connect multiple existing ScheduledRelease documents */
	connect?: Array<GraphQLTypes["ScheduledReleaseConnectInput"]> | undefined,
	/** Override currently-connected documents with multiple existing ScheduledRelease documents */
	set?: Array<GraphQLTypes["ScheduledReleaseWhereUniqueInput"]> | undefined,
	/** Update multiple ScheduledRelease documents */
	update?: Array<GraphQLTypes["ScheduledReleaseUpdateWithNestedWhereUniqueInput"]> | undefined,
	/** Upsert multiple ScheduledRelease documents */
	upsert?: Array<GraphQLTypes["ScheduledReleaseUpsertWithNestedWhereUniqueInput"]> | undefined,
	/** Disconnect multiple ScheduledRelease documents */
	disconnect?: Array<GraphQLTypes["ScheduledReleaseWhereUniqueInput"]> | undefined,
	/** Delete multiple ScheduledRelease documents */
	delete?: Array<GraphQLTypes["ScheduledReleaseWhereUniqueInput"]> | undefined
};
	["ScheduledReleaseUpdateManyInput"]: {
		releaseAt?: GraphQLTypes["DateTime"] | undefined,
	isActive?: boolean | undefined,
	errorMessage?: string | undefined,
	description?: string | undefined,
	title?: string | undefined
};
	["ScheduledReleaseUpdateManyWithNestedWhereInput"]: {
		/** Document search */
	where: GraphQLTypes["ScheduledReleaseWhereInput"],
	/** Update many input */
	data: GraphQLTypes["ScheduledReleaseUpdateManyInput"]
};
	["ScheduledReleaseUpdateOneInlineInput"]: {
		/** Create and connect one ScheduledRelease document */
	create?: GraphQLTypes["ScheduledReleaseCreateInput"] | undefined,
	/** Update single ScheduledRelease document */
	update?: GraphQLTypes["ScheduledReleaseUpdateWithNestedWhereUniqueInput"] | undefined,
	/** Upsert single ScheduledRelease document */
	upsert?: GraphQLTypes["ScheduledReleaseUpsertWithNestedWhereUniqueInput"] | undefined,
	/** Connect existing ScheduledRelease document */
	connect?: GraphQLTypes["ScheduledReleaseWhereUniqueInput"] | undefined,
	/** Disconnect currently connected ScheduledRelease document */
	disconnect?: boolean | undefined,
	/** Delete currently connected ScheduledRelease document */
	delete?: boolean | undefined
};
	["ScheduledReleaseUpdateWithNestedWhereUniqueInput"]: {
		/** Unique document search */
	where: GraphQLTypes["ScheduledReleaseWhereUniqueInput"],
	/** Document to update */
	data: GraphQLTypes["ScheduledReleaseUpdateInput"]
};
	["ScheduledReleaseUpsertInput"]: {
		/** Create document if it didn't exist */
	create: GraphQLTypes["ScheduledReleaseCreateInput"],
	/** Update document if it exists */
	update: GraphQLTypes["ScheduledReleaseUpdateInput"]
};
	["ScheduledReleaseUpsertWithNestedWhereUniqueInput"]: {
		/** Unique document search */
	where: GraphQLTypes["ScheduledReleaseWhereUniqueInput"],
	/** Upsert data */
	data: GraphQLTypes["ScheduledReleaseUpsertInput"]
};
	/** Identifies documents */
["ScheduledReleaseWhereInput"]: {
		/** Contains search across all appropriate fields. */
	_search?: string | undefined,
	/** Logical AND on all given filters. */
	AND?: Array<GraphQLTypes["ScheduledReleaseWhereInput"]> | undefined,
	/** Logical OR on all given filters. */
	OR?: Array<GraphQLTypes["ScheduledReleaseWhereInput"]> | undefined,
	/** Logical NOT on all given filters combined by AND. */
	NOT?: Array<GraphQLTypes["ScheduledReleaseWhereInput"]> | undefined,
	releaseAt?: GraphQLTypes["DateTime"] | undefined,
	/** All values that are not equal to given value. */
	releaseAt_not?: GraphQLTypes["DateTime"] | undefined,
	/** All values that are contained in given list. */
	releaseAt_in?: Array<GraphQLTypes["DateTime"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	releaseAt_not_in?: Array<GraphQLTypes["DateTime"] | undefined> | undefined,
	/** All values less than the given value. */
	releaseAt_lt?: GraphQLTypes["DateTime"] | undefined,
	/** All values less than or equal the given value. */
	releaseAt_lte?: GraphQLTypes["DateTime"] | undefined,
	/** All values greater than the given value. */
	releaseAt_gt?: GraphQLTypes["DateTime"] | undefined,
	/** All values greater than or equal the given value. */
	releaseAt_gte?: GraphQLTypes["DateTime"] | undefined,
	isImplicit?: boolean | undefined,
	/** All values that are not equal to given value. */
	isImplicit_not?: boolean | undefined,
	isActive?: boolean | undefined,
	/** All values that are not equal to given value. */
	isActive_not?: boolean | undefined,
	errorMessage?: string | undefined,
	/** All values that are not equal to given value. */
	errorMessage_not?: string | undefined,
	/** All values that are contained in given list. */
	errorMessage_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	errorMessage_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	errorMessage_contains?: string | undefined,
	/** All values not containing the given string. */
	errorMessage_not_contains?: string | undefined,
	/** All values starting with the given string. */
	errorMessage_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	errorMessage_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	errorMessage_ends_with?: string | undefined,
	/** All values not ending with the given string */
	errorMessage_not_ends_with?: string | undefined,
	description?: string | undefined,
	/** All values that are not equal to given value. */
	description_not?: string | undefined,
	/** All values that are contained in given list. */
	description_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	description_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	description_contains?: string | undefined,
	/** All values not containing the given string. */
	description_not_contains?: string | undefined,
	/** All values starting with the given string. */
	description_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	description_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	description_ends_with?: string | undefined,
	/** All values not ending with the given string */
	description_not_ends_with?: string | undefined,
	title?: string | undefined,
	/** All values that are not equal to given value. */
	title_not?: string | undefined,
	/** All values that are contained in given list. */
	title_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	title_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	title_contains?: string | undefined,
	/** All values not containing the given string. */
	title_not_contains?: string | undefined,
	/** All values starting with the given string. */
	title_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	title_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	title_ends_with?: string | undefined,
	/** All values not ending with the given string */
	title_not_ends_with?: string | undefined,
	publishedAt?: GraphQLTypes["DateTime"] | undefined,
	/** All values that are not equal to given value. */
	publishedAt_not?: GraphQLTypes["DateTime"] | undefined,
	/** All values that are contained in given list. */
	publishedAt_in?: Array<GraphQLTypes["DateTime"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	publishedAt_not_in?: Array<GraphQLTypes["DateTime"] | undefined> | undefined,
	/** All values less than the given value. */
	publishedAt_lt?: GraphQLTypes["DateTime"] | undefined,
	/** All values less than or equal the given value. */
	publishedAt_lte?: GraphQLTypes["DateTime"] | undefined,
	/** All values greater than the given value. */
	publishedAt_gt?: GraphQLTypes["DateTime"] | undefined,
	/** All values greater than or equal the given value. */
	publishedAt_gte?: GraphQLTypes["DateTime"] | undefined,
	updatedAt?: GraphQLTypes["DateTime"] | undefined,
	/** All values that are not equal to given value. */
	updatedAt_not?: GraphQLTypes["DateTime"] | undefined,
	/** All values that are contained in given list. */
	updatedAt_in?: Array<GraphQLTypes["DateTime"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	updatedAt_not_in?: Array<GraphQLTypes["DateTime"] | undefined> | undefined,
	/** All values less than the given value. */
	updatedAt_lt?: GraphQLTypes["DateTime"] | undefined,
	/** All values less than or equal the given value. */
	updatedAt_lte?: GraphQLTypes["DateTime"] | undefined,
	/** All values greater than the given value. */
	updatedAt_gt?: GraphQLTypes["DateTime"] | undefined,
	/** All values greater than or equal the given value. */
	updatedAt_gte?: GraphQLTypes["DateTime"] | undefined,
	createdAt?: GraphQLTypes["DateTime"] | undefined,
	/** All values that are not equal to given value. */
	createdAt_not?: GraphQLTypes["DateTime"] | undefined,
	/** All values that are contained in given list. */
	createdAt_in?: Array<GraphQLTypes["DateTime"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	createdAt_not_in?: Array<GraphQLTypes["DateTime"] | undefined> | undefined,
	/** All values less than the given value. */
	createdAt_lt?: GraphQLTypes["DateTime"] | undefined,
	/** All values less than or equal the given value. */
	createdAt_lte?: GraphQLTypes["DateTime"] | undefined,
	/** All values greater than the given value. */
	createdAt_gt?: GraphQLTypes["DateTime"] | undefined,
	/** All values greater than or equal the given value. */
	createdAt_gte?: GraphQLTypes["DateTime"] | undefined,
	id?: string | undefined,
	/** All values that are not equal to given value. */
	id_not?: string | undefined,
	/** All values that are contained in given list. */
	id_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	id_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	id_contains?: string | undefined,
	/** All values not containing the given string. */
	id_not_contains?: string | undefined,
	/** All values starting with the given string. */
	id_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	id_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	id_ends_with?: string | undefined,
	/** All values not ending with the given string */
	id_not_ends_with?: string | undefined,
	operations_every?: GraphQLTypes["ScheduledOperationWhereInput"] | undefined,
	operations_some?: GraphQLTypes["ScheduledOperationWhereInput"] | undefined,
	operations_none?: GraphQLTypes["ScheduledOperationWhereInput"] | undefined,
	publishedBy?: GraphQLTypes["UserWhereInput"] | undefined,
	updatedBy?: GraphQLTypes["UserWhereInput"] | undefined,
	createdBy?: GraphQLTypes["UserWhereInput"] | undefined,
	status?: GraphQLTypes["ScheduledReleaseStatus"] | undefined,
	/** All values that are not equal to given value. */
	status_not?: GraphQLTypes["ScheduledReleaseStatus"] | undefined,
	/** All values that are contained in given list. */
	status_in?: Array<GraphQLTypes["ScheduledReleaseStatus"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	status_not_in?: Array<GraphQLTypes["ScheduledReleaseStatus"] | undefined> | undefined
};
	/** References ScheduledRelease record uniquely */
["ScheduledReleaseWhereUniqueInput"]: {
		id?: string | undefined
};
	["Seo"]: {
	__typename: "Seo",
	/** System stage field */
	stage: GraphQLTypes["Stage"],
	/** Get the document in other stages */
	documentInStages: Array<GraphQLTypes["Seo"]>,
	/** The time the document was published. Null on documents in draft stage. */
	publishedAt?: GraphQLTypes["DateTime"] | undefined,
	/** The time the document was updated */
	updatedAt: GraphQLTypes["DateTime"],
	/** The time the document was created */
	createdAt: GraphQLTypes["DateTime"],
	/** The unique identifier */
	id: string,
	title: string,
	description: string,
	keywords: Array<string>,
	/** User that last published this document */
	publishedBy?: GraphQLTypes["User"] | undefined,
	/** User that last updated this document */
	updatedBy?: GraphQLTypes["User"] | undefined,
	/** User that created this document */
	createdBy?: GraphQLTypes["User"] | undefined,
	og_image: GraphQLTypes["Asset"],
	scheduledIn: Array<GraphQLTypes["ScheduledOperation"]>,
	/** List of Seo versions */
	history: Array<GraphQLTypes["Version"]>
};
	["SeoConnectInput"]: {
		/** Document to connect */
	where: GraphQLTypes["SeoWhereUniqueInput"],
	/** Allow to specify document position in list of connected documents, will default to appending at end of list */
	position?: GraphQLTypes["ConnectPositionInput"] | undefined
};
	/** A connection to a list of items. */
["SeoConnection"]: {
	__typename: "SeoConnection",
	/** Information to aid in pagination. */
	pageInfo: GraphQLTypes["PageInfo"],
	/** A list of edges. */
	edges: Array<GraphQLTypes["SeoEdge"]>,
	aggregate: GraphQLTypes["Aggregate"]
};
	["SeoCreateInput"]: {
		updatedAt?: GraphQLTypes["DateTime"] | undefined,
	createdAt?: GraphQLTypes["DateTime"] | undefined,
	title: string,
	description: string,
	keywords: Array<string>,
	og_image: GraphQLTypes["AssetCreateOneInlineInput"]
};
	["SeoCreateManyInlineInput"]: {
		/** Create and connect multiple existing Seo documents */
	create?: Array<GraphQLTypes["SeoCreateInput"]> | undefined,
	/** Connect multiple existing Seo documents */
	connect?: Array<GraphQLTypes["SeoWhereUniqueInput"]> | undefined
};
	["SeoCreateOneInlineInput"]: {
		/** Create and connect one Seo document */
	create?: GraphQLTypes["SeoCreateInput"] | undefined,
	/** Connect one existing Seo document */
	connect?: GraphQLTypes["SeoWhereUniqueInput"] | undefined
};
	/** An edge in a connection. */
["SeoEdge"]: {
	__typename: "SeoEdge",
	/** The item at the end of the edge. */
	node: GraphQLTypes["Seo"],
	/** A cursor for use in pagination. */
	cursor: string
};
	/** Identifies documents */
["SeoManyWhereInput"]: {
		/** Contains search across all appropriate fields. */
	_search?: string | undefined,
	/** Logical AND on all given filters. */
	AND?: Array<GraphQLTypes["SeoWhereInput"]> | undefined,
	/** Logical OR on all given filters. */
	OR?: Array<GraphQLTypes["SeoWhereInput"]> | undefined,
	/** Logical NOT on all given filters combined by AND. */
	NOT?: Array<GraphQLTypes["SeoWhereInput"]> | undefined,
	publishedAt?: GraphQLTypes["DateTime"] | undefined,
	/** All values that are not equal to given value. */
	publishedAt_not?: GraphQLTypes["DateTime"] | undefined,
	/** All values that are contained in given list. */
	publishedAt_in?: Array<GraphQLTypes["DateTime"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	publishedAt_not_in?: Array<GraphQLTypes["DateTime"] | undefined> | undefined,
	/** All values less than the given value. */
	publishedAt_lt?: GraphQLTypes["DateTime"] | undefined,
	/** All values less than or equal the given value. */
	publishedAt_lte?: GraphQLTypes["DateTime"] | undefined,
	/** All values greater than the given value. */
	publishedAt_gt?: GraphQLTypes["DateTime"] | undefined,
	/** All values greater than or equal the given value. */
	publishedAt_gte?: GraphQLTypes["DateTime"] | undefined,
	updatedAt?: GraphQLTypes["DateTime"] | undefined,
	/** All values that are not equal to given value. */
	updatedAt_not?: GraphQLTypes["DateTime"] | undefined,
	/** All values that are contained in given list. */
	updatedAt_in?: Array<GraphQLTypes["DateTime"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	updatedAt_not_in?: Array<GraphQLTypes["DateTime"] | undefined> | undefined,
	/** All values less than the given value. */
	updatedAt_lt?: GraphQLTypes["DateTime"] | undefined,
	/** All values less than or equal the given value. */
	updatedAt_lte?: GraphQLTypes["DateTime"] | undefined,
	/** All values greater than the given value. */
	updatedAt_gt?: GraphQLTypes["DateTime"] | undefined,
	/** All values greater than or equal the given value. */
	updatedAt_gte?: GraphQLTypes["DateTime"] | undefined,
	createdAt?: GraphQLTypes["DateTime"] | undefined,
	/** All values that are not equal to given value. */
	createdAt_not?: GraphQLTypes["DateTime"] | undefined,
	/** All values that are contained in given list. */
	createdAt_in?: Array<GraphQLTypes["DateTime"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	createdAt_not_in?: Array<GraphQLTypes["DateTime"] | undefined> | undefined,
	/** All values less than the given value. */
	createdAt_lt?: GraphQLTypes["DateTime"] | undefined,
	/** All values less than or equal the given value. */
	createdAt_lte?: GraphQLTypes["DateTime"] | undefined,
	/** All values greater than the given value. */
	createdAt_gt?: GraphQLTypes["DateTime"] | undefined,
	/** All values greater than or equal the given value. */
	createdAt_gte?: GraphQLTypes["DateTime"] | undefined,
	id?: string | undefined,
	/** All values that are not equal to given value. */
	id_not?: string | undefined,
	/** All values that are contained in given list. */
	id_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	id_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	id_contains?: string | undefined,
	/** All values not containing the given string. */
	id_not_contains?: string | undefined,
	/** All values starting with the given string. */
	id_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	id_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	id_ends_with?: string | undefined,
	/** All values not ending with the given string */
	id_not_ends_with?: string | undefined,
	title?: string | undefined,
	/** All values that are not equal to given value. */
	title_not?: string | undefined,
	/** All values that are contained in given list. */
	title_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	title_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	title_contains?: string | undefined,
	/** All values not containing the given string. */
	title_not_contains?: string | undefined,
	/** All values starting with the given string. */
	title_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	title_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	title_ends_with?: string | undefined,
	/** All values not ending with the given string */
	title_not_ends_with?: string | undefined,
	description?: string | undefined,
	/** All values that are not equal to given value. */
	description_not?: string | undefined,
	/** All values that are contained in given list. */
	description_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	description_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	description_contains?: string | undefined,
	/** All values not containing the given string. */
	description_not_contains?: string | undefined,
	/** All values starting with the given string. */
	description_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	description_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	description_ends_with?: string | undefined,
	/** All values not ending with the given string */
	description_not_ends_with?: string | undefined,
	/** Matches if the field array contains *all* items provided to the filter and order does match */
	keywords?: Array<string> | undefined,
	/** Matches if the field array does not contains *all* items provided to the filter or order does not match */
	keywords_not?: Array<string> | undefined,
	/** Matches if the field array contains *all* items provided to the filter */
	keywords_contains_all?: Array<string> | undefined,
	/** Matches if the field array contains at least one item provided to the filter */
	keywords_contains_some?: Array<string> | undefined,
	/** Matches if the field array does not contain any of the items provided to the filter */
	keywords_contains_none?: Array<string> | undefined,
	publishedBy?: GraphQLTypes["UserWhereInput"] | undefined,
	updatedBy?: GraphQLTypes["UserWhereInput"] | undefined,
	createdBy?: GraphQLTypes["UserWhereInput"] | undefined,
	og_image?: GraphQLTypes["AssetWhereInput"] | undefined,
	scheduledIn_every?: GraphQLTypes["ScheduledOperationWhereInput"] | undefined,
	scheduledIn_some?: GraphQLTypes["ScheduledOperationWhereInput"] | undefined,
	scheduledIn_none?: GraphQLTypes["ScheduledOperationWhereInput"] | undefined
};
	["SeoOrderByInput"]: SeoOrderByInput;
	["SeoUpdateInput"]: {
		title?: string | undefined,
	description?: string | undefined,
	keywords?: Array<string> | undefined,
	og_image?: GraphQLTypes["AssetUpdateOneInlineInput"] | undefined
};
	["SeoUpdateManyInlineInput"]: {
		/** Create and connect multiple Seo documents */
	create?: Array<GraphQLTypes["SeoCreateInput"]> | undefined,
	/** Connect multiple existing Seo documents */
	connect?: Array<GraphQLTypes["SeoConnectInput"]> | undefined,
	/** Override currently-connected documents with multiple existing Seo documents */
	set?: Array<GraphQLTypes["SeoWhereUniqueInput"]> | undefined,
	/** Update multiple Seo documents */
	update?: Array<GraphQLTypes["SeoUpdateWithNestedWhereUniqueInput"]> | undefined,
	/** Upsert multiple Seo documents */
	upsert?: Array<GraphQLTypes["SeoUpsertWithNestedWhereUniqueInput"]> | undefined,
	/** Disconnect multiple Seo documents */
	disconnect?: Array<GraphQLTypes["SeoWhereUniqueInput"]> | undefined,
	/** Delete multiple Seo documents */
	delete?: Array<GraphQLTypes["SeoWhereUniqueInput"]> | undefined
};
	["SeoUpdateManyInput"]: {
		title?: string | undefined,
	description?: string | undefined,
	keywords?: Array<string> | undefined
};
	["SeoUpdateManyWithNestedWhereInput"]: {
		/** Document search */
	where: GraphQLTypes["SeoWhereInput"],
	/** Update many input */
	data: GraphQLTypes["SeoUpdateManyInput"]
};
	["SeoUpdateOneInlineInput"]: {
		/** Create and connect one Seo document */
	create?: GraphQLTypes["SeoCreateInput"] | undefined,
	/** Update single Seo document */
	update?: GraphQLTypes["SeoUpdateWithNestedWhereUniqueInput"] | undefined,
	/** Upsert single Seo document */
	upsert?: GraphQLTypes["SeoUpsertWithNestedWhereUniqueInput"] | undefined,
	/** Connect existing Seo document */
	connect?: GraphQLTypes["SeoWhereUniqueInput"] | undefined,
	/** Disconnect currently connected Seo document */
	disconnect?: boolean | undefined,
	/** Delete currently connected Seo document */
	delete?: boolean | undefined
};
	["SeoUpdateWithNestedWhereUniqueInput"]: {
		/** Unique document search */
	where: GraphQLTypes["SeoWhereUniqueInput"],
	/** Document to update */
	data: GraphQLTypes["SeoUpdateInput"]
};
	["SeoUpsertInput"]: {
		/** Create document if it didn't exist */
	create: GraphQLTypes["SeoCreateInput"],
	/** Update document if it exists */
	update: GraphQLTypes["SeoUpdateInput"]
};
	["SeoUpsertWithNestedWhereUniqueInput"]: {
		/** Unique document search */
	where: GraphQLTypes["SeoWhereUniqueInput"],
	/** Upsert data */
	data: GraphQLTypes["SeoUpsertInput"]
};
	/** Identifies documents */
["SeoWhereInput"]: {
		/** Contains search across all appropriate fields. */
	_search?: string | undefined,
	/** Logical AND on all given filters. */
	AND?: Array<GraphQLTypes["SeoWhereInput"]> | undefined,
	/** Logical OR on all given filters. */
	OR?: Array<GraphQLTypes["SeoWhereInput"]> | undefined,
	/** Logical NOT on all given filters combined by AND. */
	NOT?: Array<GraphQLTypes["SeoWhereInput"]> | undefined,
	publishedAt?: GraphQLTypes["DateTime"] | undefined,
	/** All values that are not equal to given value. */
	publishedAt_not?: GraphQLTypes["DateTime"] | undefined,
	/** All values that are contained in given list. */
	publishedAt_in?: Array<GraphQLTypes["DateTime"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	publishedAt_not_in?: Array<GraphQLTypes["DateTime"] | undefined> | undefined,
	/** All values less than the given value. */
	publishedAt_lt?: GraphQLTypes["DateTime"] | undefined,
	/** All values less than or equal the given value. */
	publishedAt_lte?: GraphQLTypes["DateTime"] | undefined,
	/** All values greater than the given value. */
	publishedAt_gt?: GraphQLTypes["DateTime"] | undefined,
	/** All values greater than or equal the given value. */
	publishedAt_gte?: GraphQLTypes["DateTime"] | undefined,
	updatedAt?: GraphQLTypes["DateTime"] | undefined,
	/** All values that are not equal to given value. */
	updatedAt_not?: GraphQLTypes["DateTime"] | undefined,
	/** All values that are contained in given list. */
	updatedAt_in?: Array<GraphQLTypes["DateTime"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	updatedAt_not_in?: Array<GraphQLTypes["DateTime"] | undefined> | undefined,
	/** All values less than the given value. */
	updatedAt_lt?: GraphQLTypes["DateTime"] | undefined,
	/** All values less than or equal the given value. */
	updatedAt_lte?: GraphQLTypes["DateTime"] | undefined,
	/** All values greater than the given value. */
	updatedAt_gt?: GraphQLTypes["DateTime"] | undefined,
	/** All values greater than or equal the given value. */
	updatedAt_gte?: GraphQLTypes["DateTime"] | undefined,
	createdAt?: GraphQLTypes["DateTime"] | undefined,
	/** All values that are not equal to given value. */
	createdAt_not?: GraphQLTypes["DateTime"] | undefined,
	/** All values that are contained in given list. */
	createdAt_in?: Array<GraphQLTypes["DateTime"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	createdAt_not_in?: Array<GraphQLTypes["DateTime"] | undefined> | undefined,
	/** All values less than the given value. */
	createdAt_lt?: GraphQLTypes["DateTime"] | undefined,
	/** All values less than or equal the given value. */
	createdAt_lte?: GraphQLTypes["DateTime"] | undefined,
	/** All values greater than the given value. */
	createdAt_gt?: GraphQLTypes["DateTime"] | undefined,
	/** All values greater than or equal the given value. */
	createdAt_gte?: GraphQLTypes["DateTime"] | undefined,
	id?: string | undefined,
	/** All values that are not equal to given value. */
	id_not?: string | undefined,
	/** All values that are contained in given list. */
	id_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	id_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	id_contains?: string | undefined,
	/** All values not containing the given string. */
	id_not_contains?: string | undefined,
	/** All values starting with the given string. */
	id_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	id_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	id_ends_with?: string | undefined,
	/** All values not ending with the given string */
	id_not_ends_with?: string | undefined,
	title?: string | undefined,
	/** All values that are not equal to given value. */
	title_not?: string | undefined,
	/** All values that are contained in given list. */
	title_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	title_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	title_contains?: string | undefined,
	/** All values not containing the given string. */
	title_not_contains?: string | undefined,
	/** All values starting with the given string. */
	title_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	title_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	title_ends_with?: string | undefined,
	/** All values not ending with the given string */
	title_not_ends_with?: string | undefined,
	description?: string | undefined,
	/** All values that are not equal to given value. */
	description_not?: string | undefined,
	/** All values that are contained in given list. */
	description_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	description_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	description_contains?: string | undefined,
	/** All values not containing the given string. */
	description_not_contains?: string | undefined,
	/** All values starting with the given string. */
	description_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	description_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	description_ends_with?: string | undefined,
	/** All values not ending with the given string */
	description_not_ends_with?: string | undefined,
	/** Matches if the field array contains *all* items provided to the filter and order does match */
	keywords?: Array<string> | undefined,
	/** Matches if the field array does not contains *all* items provided to the filter or order does not match */
	keywords_not?: Array<string> | undefined,
	/** Matches if the field array contains *all* items provided to the filter */
	keywords_contains_all?: Array<string> | undefined,
	/** Matches if the field array contains at least one item provided to the filter */
	keywords_contains_some?: Array<string> | undefined,
	/** Matches if the field array does not contain any of the items provided to the filter */
	keywords_contains_none?: Array<string> | undefined,
	publishedBy?: GraphQLTypes["UserWhereInput"] | undefined,
	updatedBy?: GraphQLTypes["UserWhereInput"] | undefined,
	createdBy?: GraphQLTypes["UserWhereInput"] | undefined,
	og_image?: GraphQLTypes["AssetWhereInput"] | undefined,
	scheduledIn_every?: GraphQLTypes["ScheduledOperationWhereInput"] | undefined,
	scheduledIn_some?: GraphQLTypes["ScheduledOperationWhereInput"] | undefined,
	scheduledIn_none?: GraphQLTypes["ScheduledOperationWhereInput"] | undefined
};
	/** References Seo record uniquely */
["SeoWhereUniqueInput"]: {
		id?: string | undefined
};
	["Skill"]: {
	__typename: "Skill",
	/** System stage field */
	stage: GraphQLTypes["Stage"],
	/** The unique identifier */
	id: string,
	name: string,
	icon: GraphQLTypes["Asset"]
};
	["SkillCategory"]: {
	__typename: "SkillCategory",
	/** System stage field */
	stage: GraphQLTypes["Stage"],
	/** Get the document in other stages */
	documentInStages: Array<GraphQLTypes["SkillCategory"]>,
	/** The time the document was published. Null on documents in draft stage. */
	publishedAt?: GraphQLTypes["DateTime"] | undefined,
	/** The time the document was updated */
	updatedAt: GraphQLTypes["DateTime"],
	/** The time the document was created */
	createdAt: GraphQLTypes["DateTime"],
	/** The unique identifier */
	id: string,
	name: string,
	skillsList: Array<GraphQLTypes["SkillCategoryskillsListUnion"]>,
	/** User that last published this document */
	publishedBy?: GraphQLTypes["User"] | undefined,
	/** User that last updated this document */
	updatedBy?: GraphQLTypes["User"] | undefined,
	/** User that created this document */
	createdBy?: GraphQLTypes["User"] | undefined,
	scheduledIn: Array<GraphQLTypes["ScheduledOperation"]>,
	/** List of SkillCategory versions */
	history: Array<GraphQLTypes["Version"]>
};
	["SkillCategoryConnectInput"]: {
		/** Document to connect */
	where: GraphQLTypes["SkillCategoryWhereUniqueInput"],
	/** Allow to specify document position in list of connected documents, will default to appending at end of list */
	position?: GraphQLTypes["ConnectPositionInput"] | undefined
};
	/** A connection to a list of items. */
["SkillCategoryConnection"]: {
	__typename: "SkillCategoryConnection",
	/** Information to aid in pagination. */
	pageInfo: GraphQLTypes["PageInfo"],
	/** A list of edges. */
	edges: Array<GraphQLTypes["SkillCategoryEdge"]>,
	aggregate: GraphQLTypes["Aggregate"]
};
	["SkillCategoryCreateInput"]: {
		updatedAt?: GraphQLTypes["DateTime"] | undefined,
	createdAt?: GraphQLTypes["DateTime"] | undefined,
	name: string,
	skillsList?: GraphQLTypes["SkillCategoryskillsListUnionCreateManyInlineInput"] | undefined
};
	["SkillCategoryCreateManyInlineInput"]: {
		/** Create and connect multiple existing SkillCategory documents */
	create?: Array<GraphQLTypes["SkillCategoryCreateInput"]> | undefined,
	/** Connect multiple existing SkillCategory documents */
	connect?: Array<GraphQLTypes["SkillCategoryWhereUniqueInput"]> | undefined
};
	["SkillCategoryCreateOneInlineInput"]: {
		/** Create and connect one SkillCategory document */
	create?: GraphQLTypes["SkillCategoryCreateInput"] | undefined,
	/** Connect one existing SkillCategory document */
	connect?: GraphQLTypes["SkillCategoryWhereUniqueInput"] | undefined
};
	/** An edge in a connection. */
["SkillCategoryEdge"]: {
	__typename: "SkillCategoryEdge",
	/** The item at the end of the edge. */
	node: GraphQLTypes["SkillCategory"],
	/** A cursor for use in pagination. */
	cursor: string
};
	/** Identifies documents */
["SkillCategoryManyWhereInput"]: {
		/** Contains search across all appropriate fields. */
	_search?: string | undefined,
	/** Logical AND on all given filters. */
	AND?: Array<GraphQLTypes["SkillCategoryWhereInput"]> | undefined,
	/** Logical OR on all given filters. */
	OR?: Array<GraphQLTypes["SkillCategoryWhereInput"]> | undefined,
	/** Logical NOT on all given filters combined by AND. */
	NOT?: Array<GraphQLTypes["SkillCategoryWhereInput"]> | undefined,
	publishedAt?: GraphQLTypes["DateTime"] | undefined,
	/** All values that are not equal to given value. */
	publishedAt_not?: GraphQLTypes["DateTime"] | undefined,
	/** All values that are contained in given list. */
	publishedAt_in?: Array<GraphQLTypes["DateTime"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	publishedAt_not_in?: Array<GraphQLTypes["DateTime"] | undefined> | undefined,
	/** All values less than the given value. */
	publishedAt_lt?: GraphQLTypes["DateTime"] | undefined,
	/** All values less than or equal the given value. */
	publishedAt_lte?: GraphQLTypes["DateTime"] | undefined,
	/** All values greater than the given value. */
	publishedAt_gt?: GraphQLTypes["DateTime"] | undefined,
	/** All values greater than or equal the given value. */
	publishedAt_gte?: GraphQLTypes["DateTime"] | undefined,
	updatedAt?: GraphQLTypes["DateTime"] | undefined,
	/** All values that are not equal to given value. */
	updatedAt_not?: GraphQLTypes["DateTime"] | undefined,
	/** All values that are contained in given list. */
	updatedAt_in?: Array<GraphQLTypes["DateTime"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	updatedAt_not_in?: Array<GraphQLTypes["DateTime"] | undefined> | undefined,
	/** All values less than the given value. */
	updatedAt_lt?: GraphQLTypes["DateTime"] | undefined,
	/** All values less than or equal the given value. */
	updatedAt_lte?: GraphQLTypes["DateTime"] | undefined,
	/** All values greater than the given value. */
	updatedAt_gt?: GraphQLTypes["DateTime"] | undefined,
	/** All values greater than or equal the given value. */
	updatedAt_gte?: GraphQLTypes["DateTime"] | undefined,
	createdAt?: GraphQLTypes["DateTime"] | undefined,
	/** All values that are not equal to given value. */
	createdAt_not?: GraphQLTypes["DateTime"] | undefined,
	/** All values that are contained in given list. */
	createdAt_in?: Array<GraphQLTypes["DateTime"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	createdAt_not_in?: Array<GraphQLTypes["DateTime"] | undefined> | undefined,
	/** All values less than the given value. */
	createdAt_lt?: GraphQLTypes["DateTime"] | undefined,
	/** All values less than or equal the given value. */
	createdAt_lte?: GraphQLTypes["DateTime"] | undefined,
	/** All values greater than the given value. */
	createdAt_gt?: GraphQLTypes["DateTime"] | undefined,
	/** All values greater than or equal the given value. */
	createdAt_gte?: GraphQLTypes["DateTime"] | undefined,
	id?: string | undefined,
	/** All values that are not equal to given value. */
	id_not?: string | undefined,
	/** All values that are contained in given list. */
	id_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	id_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	id_contains?: string | undefined,
	/** All values not containing the given string. */
	id_not_contains?: string | undefined,
	/** All values starting with the given string. */
	id_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	id_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	id_ends_with?: string | undefined,
	/** All values not ending with the given string */
	id_not_ends_with?: string | undefined,
	name?: string | undefined,
	/** All values that are not equal to given value. */
	name_not?: string | undefined,
	/** All values that are contained in given list. */
	name_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	name_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	name_contains?: string | undefined,
	/** All values not containing the given string. */
	name_not_contains?: string | undefined,
	/** All values starting with the given string. */
	name_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	name_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	name_ends_with?: string | undefined,
	/** All values not ending with the given string */
	name_not_ends_with?: string | undefined,
	publishedBy?: GraphQLTypes["UserWhereInput"] | undefined,
	updatedBy?: GraphQLTypes["UserWhereInput"] | undefined,
	createdBy?: GraphQLTypes["UserWhereInput"] | undefined,
	scheduledIn_every?: GraphQLTypes["ScheduledOperationWhereInput"] | undefined,
	scheduledIn_some?: GraphQLTypes["ScheduledOperationWhereInput"] | undefined,
	scheduledIn_none?: GraphQLTypes["ScheduledOperationWhereInput"] | undefined
};
	["SkillCategoryOrderByInput"]: SkillCategoryOrderByInput;
	["SkillCategoryUpdateInput"]: {
		name?: string | undefined,
	skillsList?: GraphQLTypes["SkillCategoryskillsListUnionUpdateManyInlineInput"] | undefined
};
	["SkillCategoryUpdateManyInlineInput"]: {
		/** Create and connect multiple SkillCategory documents */
	create?: Array<GraphQLTypes["SkillCategoryCreateInput"]> | undefined,
	/** Connect multiple existing SkillCategory documents */
	connect?: Array<GraphQLTypes["SkillCategoryConnectInput"]> | undefined,
	/** Override currently-connected documents with multiple existing SkillCategory documents */
	set?: Array<GraphQLTypes["SkillCategoryWhereUniqueInput"]> | undefined,
	/** Update multiple SkillCategory documents */
	update?: Array<GraphQLTypes["SkillCategoryUpdateWithNestedWhereUniqueInput"]> | undefined,
	/** Upsert multiple SkillCategory documents */
	upsert?: Array<GraphQLTypes["SkillCategoryUpsertWithNestedWhereUniqueInput"]> | undefined,
	/** Disconnect multiple SkillCategory documents */
	disconnect?: Array<GraphQLTypes["SkillCategoryWhereUniqueInput"]> | undefined,
	/** Delete multiple SkillCategory documents */
	delete?: Array<GraphQLTypes["SkillCategoryWhereUniqueInput"]> | undefined
};
	["SkillCategoryUpdateManyInput"]: {
		/** No fields in updateMany data input */
	_?: string | undefined
};
	["SkillCategoryUpdateManyWithNestedWhereInput"]: {
		/** Document search */
	where: GraphQLTypes["SkillCategoryWhereInput"],
	/** Update many input */
	data: GraphQLTypes["SkillCategoryUpdateManyInput"]
};
	["SkillCategoryUpdateOneInlineInput"]: {
		/** Create and connect one SkillCategory document */
	create?: GraphQLTypes["SkillCategoryCreateInput"] | undefined,
	/** Update single SkillCategory document */
	update?: GraphQLTypes["SkillCategoryUpdateWithNestedWhereUniqueInput"] | undefined,
	/** Upsert single SkillCategory document */
	upsert?: GraphQLTypes["SkillCategoryUpsertWithNestedWhereUniqueInput"] | undefined,
	/** Connect existing SkillCategory document */
	connect?: GraphQLTypes["SkillCategoryWhereUniqueInput"] | undefined,
	/** Disconnect currently connected SkillCategory document */
	disconnect?: boolean | undefined,
	/** Delete currently connected SkillCategory document */
	delete?: boolean | undefined
};
	["SkillCategoryUpdateWithNestedWhereUniqueInput"]: {
		/** Unique document search */
	where: GraphQLTypes["SkillCategoryWhereUniqueInput"],
	/** Document to update */
	data: GraphQLTypes["SkillCategoryUpdateInput"]
};
	["SkillCategoryUpsertInput"]: {
		/** Create document if it didn't exist */
	create: GraphQLTypes["SkillCategoryCreateInput"],
	/** Update document if it exists */
	update: GraphQLTypes["SkillCategoryUpdateInput"]
};
	["SkillCategoryUpsertWithNestedWhereUniqueInput"]: {
		/** Unique document search */
	where: GraphQLTypes["SkillCategoryWhereUniqueInput"],
	/** Upsert data */
	data: GraphQLTypes["SkillCategoryUpsertInput"]
};
	/** Identifies documents */
["SkillCategoryWhereInput"]: {
		/** Contains search across all appropriate fields. */
	_search?: string | undefined,
	/** Logical AND on all given filters. */
	AND?: Array<GraphQLTypes["SkillCategoryWhereInput"]> | undefined,
	/** Logical OR on all given filters. */
	OR?: Array<GraphQLTypes["SkillCategoryWhereInput"]> | undefined,
	/** Logical NOT on all given filters combined by AND. */
	NOT?: Array<GraphQLTypes["SkillCategoryWhereInput"]> | undefined,
	publishedAt?: GraphQLTypes["DateTime"] | undefined,
	/** All values that are not equal to given value. */
	publishedAt_not?: GraphQLTypes["DateTime"] | undefined,
	/** All values that are contained in given list. */
	publishedAt_in?: Array<GraphQLTypes["DateTime"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	publishedAt_not_in?: Array<GraphQLTypes["DateTime"] | undefined> | undefined,
	/** All values less than the given value. */
	publishedAt_lt?: GraphQLTypes["DateTime"] | undefined,
	/** All values less than or equal the given value. */
	publishedAt_lte?: GraphQLTypes["DateTime"] | undefined,
	/** All values greater than the given value. */
	publishedAt_gt?: GraphQLTypes["DateTime"] | undefined,
	/** All values greater than or equal the given value. */
	publishedAt_gte?: GraphQLTypes["DateTime"] | undefined,
	updatedAt?: GraphQLTypes["DateTime"] | undefined,
	/** All values that are not equal to given value. */
	updatedAt_not?: GraphQLTypes["DateTime"] | undefined,
	/** All values that are contained in given list. */
	updatedAt_in?: Array<GraphQLTypes["DateTime"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	updatedAt_not_in?: Array<GraphQLTypes["DateTime"] | undefined> | undefined,
	/** All values less than the given value. */
	updatedAt_lt?: GraphQLTypes["DateTime"] | undefined,
	/** All values less than or equal the given value. */
	updatedAt_lte?: GraphQLTypes["DateTime"] | undefined,
	/** All values greater than the given value. */
	updatedAt_gt?: GraphQLTypes["DateTime"] | undefined,
	/** All values greater than or equal the given value. */
	updatedAt_gte?: GraphQLTypes["DateTime"] | undefined,
	createdAt?: GraphQLTypes["DateTime"] | undefined,
	/** All values that are not equal to given value. */
	createdAt_not?: GraphQLTypes["DateTime"] | undefined,
	/** All values that are contained in given list. */
	createdAt_in?: Array<GraphQLTypes["DateTime"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	createdAt_not_in?: Array<GraphQLTypes["DateTime"] | undefined> | undefined,
	/** All values less than the given value. */
	createdAt_lt?: GraphQLTypes["DateTime"] | undefined,
	/** All values less than or equal the given value. */
	createdAt_lte?: GraphQLTypes["DateTime"] | undefined,
	/** All values greater than the given value. */
	createdAt_gt?: GraphQLTypes["DateTime"] | undefined,
	/** All values greater than or equal the given value. */
	createdAt_gte?: GraphQLTypes["DateTime"] | undefined,
	id?: string | undefined,
	/** All values that are not equal to given value. */
	id_not?: string | undefined,
	/** All values that are contained in given list. */
	id_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	id_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	id_contains?: string | undefined,
	/** All values not containing the given string. */
	id_not_contains?: string | undefined,
	/** All values starting with the given string. */
	id_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	id_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	id_ends_with?: string | undefined,
	/** All values not ending with the given string */
	id_not_ends_with?: string | undefined,
	name?: string | undefined,
	/** All values that are not equal to given value. */
	name_not?: string | undefined,
	/** All values that are contained in given list. */
	name_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	name_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	name_contains?: string | undefined,
	/** All values not containing the given string. */
	name_not_contains?: string | undefined,
	/** All values starting with the given string. */
	name_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	name_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	name_ends_with?: string | undefined,
	/** All values not ending with the given string */
	name_not_ends_with?: string | undefined,
	publishedBy?: GraphQLTypes["UserWhereInput"] | undefined,
	updatedBy?: GraphQLTypes["UserWhereInput"] | undefined,
	createdBy?: GraphQLTypes["UserWhereInput"] | undefined,
	scheduledIn_every?: GraphQLTypes["ScheduledOperationWhereInput"] | undefined,
	scheduledIn_some?: GraphQLTypes["ScheduledOperationWhereInput"] | undefined,
	scheduledIn_none?: GraphQLTypes["ScheduledOperationWhereInput"] | undefined
};
	/** References SkillCategory record uniquely */
["SkillCategoryWhereUniqueInput"]: {
		id?: string | undefined,
	name?: string | undefined
};
	["SkillCategoryskillsListUnion"]:{
        	__typename:"Skill"
        	['...on Skill']: '__union' & GraphQLTypes["Skill"];
};
	["SkillCategoryskillsListUnionConnectInput"]: {
		Skill?: GraphQLTypes["SkillConnectInput"] | undefined
};
	["SkillCategoryskillsListUnionCreateInput"]: {
		Skill?: GraphQLTypes["SkillCreateInput"] | undefined
};
	["SkillCategoryskillsListUnionCreateManyInlineInput"]: {
		/** Create and connect multiple existing SkillCategoryskillsListUnion documents */
	create?: Array<GraphQLTypes["SkillCategoryskillsListUnionCreateInput"]> | undefined
};
	["SkillCategoryskillsListUnionCreateOneInlineInput"]: {
		/** Create and connect one SkillCategoryskillsListUnion document */
	create?: GraphQLTypes["SkillCategoryskillsListUnionCreateInput"] | undefined
};
	["SkillCategoryskillsListUnionCreateWithPositionInput"]: {
		Skill?: GraphQLTypes["SkillCreateWithPositionInput"] | undefined
};
	["SkillCategoryskillsListUnionUpdateInput"]: {
		Skill?: GraphQLTypes["SkillUpdateInput"] | undefined
};
	["SkillCategoryskillsListUnionUpdateManyInlineInput"]: {
		/** Create and connect multiple SkillCategoryskillsListUnion component instances */
	create?: Array<GraphQLTypes["SkillCategoryskillsListUnionCreateWithPositionInput"]> | undefined,
	/** Update multiple SkillCategoryskillsListUnion component instances */
	update?: Array<GraphQLTypes["SkillCategoryskillsListUnionUpdateWithNestedWhereUniqueAndPositionInput"]> | undefined,
	/** Upsert multiple SkillCategoryskillsListUnion component instances */
	upsert?: Array<GraphQLTypes["SkillCategoryskillsListUnionUpsertWithNestedWhereUniqueAndPositionInput"]> | undefined,
	/** Delete multiple SkillCategoryskillsListUnion documents */
	delete?: Array<GraphQLTypes["SkillCategoryskillsListUnionWhereUniqueInput"]> | undefined
};
	["SkillCategoryskillsListUnionUpdateManyWithNestedWhereInput"]: {
		Skill?: GraphQLTypes["SkillUpdateManyWithNestedWhereInput"] | undefined
};
	["SkillCategoryskillsListUnionUpdateOneInlineInput"]: {
		/** Create and connect one SkillCategoryskillsListUnion document */
	create?: GraphQLTypes["SkillCategoryskillsListUnionCreateInput"] | undefined,
	/** Update single SkillCategoryskillsListUnion document */
	update?: GraphQLTypes["SkillCategoryskillsListUnionUpdateWithNestedWhereUniqueInput"] | undefined,
	/** Upsert single SkillCategoryskillsListUnion document */
	upsert?: GraphQLTypes["SkillCategoryskillsListUnionUpsertWithNestedWhereUniqueInput"] | undefined,
	/** Delete currently connected SkillCategoryskillsListUnion document */
	delete?: boolean | undefined
};
	["SkillCategoryskillsListUnionUpdateWithNestedWhereUniqueAndPositionInput"]: {
		Skill?: GraphQLTypes["SkillUpdateWithNestedWhereUniqueAndPositionInput"] | undefined
};
	["SkillCategoryskillsListUnionUpdateWithNestedWhereUniqueInput"]: {
		Skill?: GraphQLTypes["SkillUpdateWithNestedWhereUniqueInput"] | undefined
};
	["SkillCategoryskillsListUnionUpsertWithNestedWhereUniqueAndPositionInput"]: {
		Skill?: GraphQLTypes["SkillUpsertWithNestedWhereUniqueAndPositionInput"] | undefined
};
	["SkillCategoryskillsListUnionUpsertWithNestedWhereUniqueInput"]: {
		Skill?: GraphQLTypes["SkillUpsertWithNestedWhereUniqueInput"] | undefined
};
	["SkillCategoryskillsListUnionWhereInput"]: {
		Skill?: GraphQLTypes["SkillWhereInput"] | undefined
};
	["SkillCategoryskillsListUnionWhereUniqueInput"]: {
		Skill?: GraphQLTypes["SkillWhereUniqueInput"] | undefined
};
	["SkillConnectInput"]: {
		/** Document to connect */
	where: GraphQLTypes["SkillWhereUniqueInput"],
	/** Allow to specify document position in list of connected documents, will default to appending at end of list */
	position?: GraphQLTypes["ConnectPositionInput"] | undefined
};
	/** A connection to a list of items. */
["SkillConnection"]: {
	__typename: "SkillConnection",
	/** Information to aid in pagination. */
	pageInfo: GraphQLTypes["PageInfo"],
	/** A list of edges. */
	edges: Array<GraphQLTypes["SkillEdge"]>,
	aggregate: GraphQLTypes["Aggregate"]
};
	["SkillCreateInput"]: {
		name: string,
	icon: GraphQLTypes["AssetCreateOneInlineInput"]
};
	["SkillCreateManyInlineInput"]: {
		/** Create and connect multiple existing Skill documents */
	create?: Array<GraphQLTypes["SkillCreateInput"]> | undefined
};
	["SkillCreateOneInlineInput"]: {
		/** Create and connect one Skill document */
	create?: GraphQLTypes["SkillCreateInput"] | undefined
};
	["SkillCreateWithPositionInput"]: {
		/** Position in the list of existing component instances, will default to appending at the end of list */
	position?: GraphQLTypes["ConnectPositionInput"] | undefined,
	/** Document to create */
	data: GraphQLTypes["SkillCreateInput"]
};
	/** An edge in a connection. */
["SkillEdge"]: {
	__typename: "SkillEdge",
	/** The item at the end of the edge. */
	node: GraphQLTypes["Skill"],
	/** A cursor for use in pagination. */
	cursor: string
};
	/** Identifies documents */
["SkillManyWhereInput"]: {
		/** Contains search across all appropriate fields. */
	_search?: string | undefined,
	/** Logical AND on all given filters. */
	AND?: Array<GraphQLTypes["SkillWhereInput"]> | undefined,
	/** Logical OR on all given filters. */
	OR?: Array<GraphQLTypes["SkillWhereInput"]> | undefined,
	/** Logical NOT on all given filters combined by AND. */
	NOT?: Array<GraphQLTypes["SkillWhereInput"]> | undefined,
	id?: string | undefined,
	/** All values that are not equal to given value. */
	id_not?: string | undefined,
	/** All values that are contained in given list. */
	id_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	id_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	id_contains?: string | undefined,
	/** All values not containing the given string. */
	id_not_contains?: string | undefined,
	/** All values starting with the given string. */
	id_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	id_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	id_ends_with?: string | undefined,
	/** All values not ending with the given string */
	id_not_ends_with?: string | undefined,
	name?: string | undefined,
	/** All values that are not equal to given value. */
	name_not?: string | undefined,
	/** All values that are contained in given list. */
	name_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	name_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	name_contains?: string | undefined,
	/** All values not containing the given string. */
	name_not_contains?: string | undefined,
	/** All values starting with the given string. */
	name_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	name_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	name_ends_with?: string | undefined,
	/** All values not ending with the given string */
	name_not_ends_with?: string | undefined,
	icon?: GraphQLTypes["AssetWhereInput"] | undefined
};
	["SkillOrderByInput"]: SkillOrderByInput;
	["SkillParent"]:{
        	__typename:"SkillCategory"
        	['...on SkillCategory']: '__union' & GraphQLTypes["SkillCategory"];
};
	["SkillParentConnectInput"]: {
		SkillCategory?: GraphQLTypes["SkillCategoryConnectInput"] | undefined
};
	["SkillParentCreateInput"]: {
		SkillCategory?: GraphQLTypes["SkillCategoryCreateInput"] | undefined
};
	["SkillParentCreateManyInlineInput"]: {
		/** Create and connect multiple existing SkillParent documents */
	create?: Array<GraphQLTypes["SkillParentCreateInput"]> | undefined,
	/** Connect multiple existing SkillParent documents */
	connect?: Array<GraphQLTypes["SkillParentWhereUniqueInput"]> | undefined
};
	["SkillParentCreateOneInlineInput"]: {
		/** Create and connect one SkillParent document */
	create?: GraphQLTypes["SkillParentCreateInput"] | undefined,
	/** Connect one existing SkillParent document */
	connect?: GraphQLTypes["SkillParentWhereUniqueInput"] | undefined
};
	["SkillParentUpdateInput"]: {
		SkillCategory?: GraphQLTypes["SkillCategoryUpdateInput"] | undefined
};
	["SkillParentUpdateManyInlineInput"]: {
		/** Create and connect multiple SkillParent documents */
	create?: Array<GraphQLTypes["SkillParentCreateInput"]> | undefined,
	/** Connect multiple existing SkillParent documents */
	connect?: Array<GraphQLTypes["SkillParentConnectInput"]> | undefined,
	/** Override currently-connected documents with multiple existing SkillParent documents */
	set?: Array<GraphQLTypes["SkillParentWhereUniqueInput"]> | undefined,
	/** Update multiple SkillParent documents */
	update?: Array<GraphQLTypes["SkillParentUpdateWithNestedWhereUniqueInput"]> | undefined,
	/** Upsert multiple SkillParent documents */
	upsert?: Array<GraphQLTypes["SkillParentUpsertWithNestedWhereUniqueInput"]> | undefined,
	/** Disconnect multiple SkillParent documents */
	disconnect?: Array<GraphQLTypes["SkillParentWhereUniqueInput"]> | undefined,
	/** Delete multiple SkillParent documents */
	delete?: Array<GraphQLTypes["SkillParentWhereUniqueInput"]> | undefined
};
	["SkillParentUpdateManyWithNestedWhereInput"]: {
		SkillCategory?: GraphQLTypes["SkillCategoryUpdateManyWithNestedWhereInput"] | undefined
};
	["SkillParentUpdateOneInlineInput"]: {
		/** Create and connect one SkillParent document */
	create?: GraphQLTypes["SkillParentCreateInput"] | undefined,
	/** Update single SkillParent document */
	update?: GraphQLTypes["SkillParentUpdateWithNestedWhereUniqueInput"] | undefined,
	/** Upsert single SkillParent document */
	upsert?: GraphQLTypes["SkillParentUpsertWithNestedWhereUniqueInput"] | undefined,
	/** Connect existing SkillParent document */
	connect?: GraphQLTypes["SkillParentWhereUniqueInput"] | undefined,
	/** Disconnect currently connected SkillParent document */
	disconnect?: boolean | undefined,
	/** Delete currently connected SkillParent document */
	delete?: boolean | undefined
};
	["SkillParentUpdateWithNestedWhereUniqueInput"]: {
		SkillCategory?: GraphQLTypes["SkillCategoryUpdateWithNestedWhereUniqueInput"] | undefined
};
	["SkillParentUpsertWithNestedWhereUniqueInput"]: {
		SkillCategory?: GraphQLTypes["SkillCategoryUpsertWithNestedWhereUniqueInput"] | undefined
};
	["SkillParentWhereInput"]: {
		SkillCategory?: GraphQLTypes["SkillCategoryWhereInput"] | undefined
};
	["SkillParentWhereUniqueInput"]: {
		SkillCategory?: GraphQLTypes["SkillCategoryWhereUniqueInput"] | undefined
};
	["SkillUpdateInput"]: {
		name?: string | undefined,
	icon?: GraphQLTypes["AssetUpdateOneInlineInput"] | undefined
};
	["SkillUpdateManyInlineInput"]: {
		/** Create and connect multiple Skill component instances */
	create?: Array<GraphQLTypes["SkillCreateWithPositionInput"]> | undefined,
	/** Update multiple Skill component instances */
	update?: Array<GraphQLTypes["SkillUpdateWithNestedWhereUniqueAndPositionInput"]> | undefined,
	/** Upsert multiple Skill component instances */
	upsert?: Array<GraphQLTypes["SkillUpsertWithNestedWhereUniqueAndPositionInput"]> | undefined,
	/** Delete multiple Skill documents */
	delete?: Array<GraphQLTypes["SkillWhereUniqueInput"]> | undefined
};
	["SkillUpdateManyInput"]: {
		/** No fields in updateMany data input */
	_?: string | undefined
};
	["SkillUpdateManyWithNestedWhereInput"]: {
		/** Document search */
	where: GraphQLTypes["SkillWhereInput"],
	/** Update many input */
	data: GraphQLTypes["SkillUpdateManyInput"]
};
	["SkillUpdateOneInlineInput"]: {
		/** Create and connect one Skill document */
	create?: GraphQLTypes["SkillCreateInput"] | undefined,
	/** Update single Skill document */
	update?: GraphQLTypes["SkillUpdateWithNestedWhereUniqueInput"] | undefined,
	/** Upsert single Skill document */
	upsert?: GraphQLTypes["SkillUpsertWithNestedWhereUniqueInput"] | undefined,
	/** Delete currently connected Skill document */
	delete?: boolean | undefined
};
	["SkillUpdateWithNestedWhereUniqueAndPositionInput"]: {
		/** Unique component instance search */
	where: GraphQLTypes["SkillWhereUniqueInput"],
	/** Position in the list of existing component instances, will default to appending at the end of list */
	position?: GraphQLTypes["ConnectPositionInput"] | undefined,
	/** Document to update */
	data?: GraphQLTypes["SkillUpdateInput"] | undefined
};
	["SkillUpdateWithNestedWhereUniqueInput"]: {
		/** Unique document search */
	where: GraphQLTypes["SkillWhereUniqueInput"],
	/** Document to update */
	data: GraphQLTypes["SkillUpdateInput"]
};
	["SkillUpsertInput"]: {
		/** Create document if it didn't exist */
	create: GraphQLTypes["SkillCreateInput"],
	/** Update document if it exists */
	update: GraphQLTypes["SkillUpdateInput"]
};
	["SkillUpsertWithNestedWhereUniqueAndPositionInput"]: {
		/** Unique component instance search */
	where: GraphQLTypes["SkillWhereUniqueInput"],
	/** Position in the list of existing component instances, will default to appending at the end of list */
	position?: GraphQLTypes["ConnectPositionInput"] | undefined,
	/** Document to upsert */
	data?: GraphQLTypes["SkillUpsertInput"] | undefined
};
	["SkillUpsertWithNestedWhereUniqueInput"]: {
		/** Unique document search */
	where: GraphQLTypes["SkillWhereUniqueInput"],
	/** Upsert data */
	data: GraphQLTypes["SkillUpsertInput"]
};
	/** Identifies documents */
["SkillWhereInput"]: {
		/** Contains search across all appropriate fields. */
	_search?: string | undefined,
	/** Logical AND on all given filters. */
	AND?: Array<GraphQLTypes["SkillWhereInput"]> | undefined,
	/** Logical OR on all given filters. */
	OR?: Array<GraphQLTypes["SkillWhereInput"]> | undefined,
	/** Logical NOT on all given filters combined by AND. */
	NOT?: Array<GraphQLTypes["SkillWhereInput"]> | undefined,
	id?: string | undefined,
	/** All values that are not equal to given value. */
	id_not?: string | undefined,
	/** All values that are contained in given list. */
	id_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	id_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	id_contains?: string | undefined,
	/** All values not containing the given string. */
	id_not_contains?: string | undefined,
	/** All values starting with the given string. */
	id_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	id_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	id_ends_with?: string | undefined,
	/** All values not ending with the given string */
	id_not_ends_with?: string | undefined,
	name?: string | undefined,
	/** All values that are not equal to given value. */
	name_not?: string | undefined,
	/** All values that are contained in given list. */
	name_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	name_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	name_contains?: string | undefined,
	/** All values not containing the given string. */
	name_not_contains?: string | undefined,
	/** All values starting with the given string. */
	name_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	name_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	name_ends_with?: string | undefined,
	/** All values not ending with the given string */
	name_not_ends_with?: string | undefined,
	icon?: GraphQLTypes["AssetWhereInput"] | undefined
};
	/** References Skill record uniquely */
["SkillWhereUniqueInput"]: {
		id?: string | undefined,
	name?: string | undefined
};
	/** Stage system enumeration */
["Stage"]: Stage;
	["SystemDateTimeFieldVariation"]: SystemDateTimeFieldVariation;
	["Technologies"]: Technologies;
	["UnpublishLocaleInput"]: {
		/** Locales to unpublish */
	locale: GraphQLTypes["Locale"],
	/** Stages to unpublish selected locales from */
	stages: Array<GraphQLTypes["Stage"]>
};
	/** User system model */
["User"]: {
	__typename: "User",
	/** System stage field */
	stage: GraphQLTypes["Stage"],
	/** Get the document in other stages */
	documentInStages: Array<GraphQLTypes["User"]>,
	/** Flag to determine if user is active or not */
	isActive: boolean,
	/** Profile Picture url */
	picture?: string | undefined,
	/** The username */
	name: string,
	/** The time the document was published. Null on documents in draft stage. */
	publishedAt?: GraphQLTypes["DateTime"] | undefined,
	/** The time the document was updated */
	updatedAt: GraphQLTypes["DateTime"],
	/** The time the document was created */
	createdAt: GraphQLTypes["DateTime"],
	/** The unique identifier */
	id: string,
	/** User Kind. Can be either MEMBER, PAT or PUBLIC */
	kind: GraphQLTypes["UserKind"]
};
	["UserConnectInput"]: {
		/** Document to connect */
	where: GraphQLTypes["UserWhereUniqueInput"],
	/** Allow to specify document position in list of connected documents, will default to appending at end of list */
	position?: GraphQLTypes["ConnectPositionInput"] | undefined
};
	/** A connection to a list of items. */
["UserConnection"]: {
	__typename: "UserConnection",
	/** Information to aid in pagination. */
	pageInfo: GraphQLTypes["PageInfo"],
	/** A list of edges. */
	edges: Array<GraphQLTypes["UserEdge"]>,
	aggregate: GraphQLTypes["Aggregate"]
};
	["UserCreateManyInlineInput"]: {
		/** Connect multiple existing User documents */
	connect?: Array<GraphQLTypes["UserWhereUniqueInput"]> | undefined
};
	["UserCreateOneInlineInput"]: {
		/** Connect one existing User document */
	connect?: GraphQLTypes["UserWhereUniqueInput"] | undefined
};
	/** An edge in a connection. */
["UserEdge"]: {
	__typename: "UserEdge",
	/** The item at the end of the edge. */
	node: GraphQLTypes["User"],
	/** A cursor for use in pagination. */
	cursor: string
};
	/** System User Kind */
["UserKind"]: UserKind;
	/** Identifies documents */
["UserManyWhereInput"]: {
		/** Contains search across all appropriate fields. */
	_search?: string | undefined,
	/** Logical AND on all given filters. */
	AND?: Array<GraphQLTypes["UserWhereInput"]> | undefined,
	/** Logical OR on all given filters. */
	OR?: Array<GraphQLTypes["UserWhereInput"]> | undefined,
	/** Logical NOT on all given filters combined by AND. */
	NOT?: Array<GraphQLTypes["UserWhereInput"]> | undefined,
	isActive?: boolean | undefined,
	/** All values that are not equal to given value. */
	isActive_not?: boolean | undefined,
	picture?: string | undefined,
	/** All values that are not equal to given value. */
	picture_not?: string | undefined,
	/** All values that are contained in given list. */
	picture_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	picture_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	picture_contains?: string | undefined,
	/** All values not containing the given string. */
	picture_not_contains?: string | undefined,
	/** All values starting with the given string. */
	picture_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	picture_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	picture_ends_with?: string | undefined,
	/** All values not ending with the given string */
	picture_not_ends_with?: string | undefined,
	name?: string | undefined,
	/** All values that are not equal to given value. */
	name_not?: string | undefined,
	/** All values that are contained in given list. */
	name_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	name_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	name_contains?: string | undefined,
	/** All values not containing the given string. */
	name_not_contains?: string | undefined,
	/** All values starting with the given string. */
	name_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	name_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	name_ends_with?: string | undefined,
	/** All values not ending with the given string */
	name_not_ends_with?: string | undefined,
	publishedAt?: GraphQLTypes["DateTime"] | undefined,
	/** All values that are not equal to given value. */
	publishedAt_not?: GraphQLTypes["DateTime"] | undefined,
	/** All values that are contained in given list. */
	publishedAt_in?: Array<GraphQLTypes["DateTime"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	publishedAt_not_in?: Array<GraphQLTypes["DateTime"] | undefined> | undefined,
	/** All values less than the given value. */
	publishedAt_lt?: GraphQLTypes["DateTime"] | undefined,
	/** All values less than or equal the given value. */
	publishedAt_lte?: GraphQLTypes["DateTime"] | undefined,
	/** All values greater than the given value. */
	publishedAt_gt?: GraphQLTypes["DateTime"] | undefined,
	/** All values greater than or equal the given value. */
	publishedAt_gte?: GraphQLTypes["DateTime"] | undefined,
	updatedAt?: GraphQLTypes["DateTime"] | undefined,
	/** All values that are not equal to given value. */
	updatedAt_not?: GraphQLTypes["DateTime"] | undefined,
	/** All values that are contained in given list. */
	updatedAt_in?: Array<GraphQLTypes["DateTime"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	updatedAt_not_in?: Array<GraphQLTypes["DateTime"] | undefined> | undefined,
	/** All values less than the given value. */
	updatedAt_lt?: GraphQLTypes["DateTime"] | undefined,
	/** All values less than or equal the given value. */
	updatedAt_lte?: GraphQLTypes["DateTime"] | undefined,
	/** All values greater than the given value. */
	updatedAt_gt?: GraphQLTypes["DateTime"] | undefined,
	/** All values greater than or equal the given value. */
	updatedAt_gte?: GraphQLTypes["DateTime"] | undefined,
	createdAt?: GraphQLTypes["DateTime"] | undefined,
	/** All values that are not equal to given value. */
	createdAt_not?: GraphQLTypes["DateTime"] | undefined,
	/** All values that are contained in given list. */
	createdAt_in?: Array<GraphQLTypes["DateTime"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	createdAt_not_in?: Array<GraphQLTypes["DateTime"] | undefined> | undefined,
	/** All values less than the given value. */
	createdAt_lt?: GraphQLTypes["DateTime"] | undefined,
	/** All values less than or equal the given value. */
	createdAt_lte?: GraphQLTypes["DateTime"] | undefined,
	/** All values greater than the given value. */
	createdAt_gt?: GraphQLTypes["DateTime"] | undefined,
	/** All values greater than or equal the given value. */
	createdAt_gte?: GraphQLTypes["DateTime"] | undefined,
	id?: string | undefined,
	/** All values that are not equal to given value. */
	id_not?: string | undefined,
	/** All values that are contained in given list. */
	id_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	id_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	id_contains?: string | undefined,
	/** All values not containing the given string. */
	id_not_contains?: string | undefined,
	/** All values starting with the given string. */
	id_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	id_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	id_ends_with?: string | undefined,
	/** All values not ending with the given string */
	id_not_ends_with?: string | undefined,
	kind?: GraphQLTypes["UserKind"] | undefined,
	/** All values that are not equal to given value. */
	kind_not?: GraphQLTypes["UserKind"] | undefined,
	/** All values that are contained in given list. */
	kind_in?: Array<GraphQLTypes["UserKind"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	kind_not_in?: Array<GraphQLTypes["UserKind"] | undefined> | undefined
};
	["UserOrderByInput"]: UserOrderByInput;
	["UserUpdateManyInlineInput"]: {
		/** Connect multiple existing User documents */
	connect?: Array<GraphQLTypes["UserConnectInput"]> | undefined,
	/** Override currently-connected documents with multiple existing User documents */
	set?: Array<GraphQLTypes["UserWhereUniqueInput"]> | undefined,
	/** Disconnect multiple User documents */
	disconnect?: Array<GraphQLTypes["UserWhereUniqueInput"]> | undefined
};
	["UserUpdateOneInlineInput"]: {
		/** Connect existing User document */
	connect?: GraphQLTypes["UserWhereUniqueInput"] | undefined,
	/** Disconnect currently connected User document */
	disconnect?: boolean | undefined
};
	/** Identifies documents */
["UserWhereInput"]: {
		/** Contains search across all appropriate fields. */
	_search?: string | undefined,
	/** Logical AND on all given filters. */
	AND?: Array<GraphQLTypes["UserWhereInput"]> | undefined,
	/** Logical OR on all given filters. */
	OR?: Array<GraphQLTypes["UserWhereInput"]> | undefined,
	/** Logical NOT on all given filters combined by AND. */
	NOT?: Array<GraphQLTypes["UserWhereInput"]> | undefined,
	isActive?: boolean | undefined,
	/** All values that are not equal to given value. */
	isActive_not?: boolean | undefined,
	picture?: string | undefined,
	/** All values that are not equal to given value. */
	picture_not?: string | undefined,
	/** All values that are contained in given list. */
	picture_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	picture_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	picture_contains?: string | undefined,
	/** All values not containing the given string. */
	picture_not_contains?: string | undefined,
	/** All values starting with the given string. */
	picture_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	picture_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	picture_ends_with?: string | undefined,
	/** All values not ending with the given string */
	picture_not_ends_with?: string | undefined,
	name?: string | undefined,
	/** All values that are not equal to given value. */
	name_not?: string | undefined,
	/** All values that are contained in given list. */
	name_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	name_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	name_contains?: string | undefined,
	/** All values not containing the given string. */
	name_not_contains?: string | undefined,
	/** All values starting with the given string. */
	name_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	name_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	name_ends_with?: string | undefined,
	/** All values not ending with the given string */
	name_not_ends_with?: string | undefined,
	publishedAt?: GraphQLTypes["DateTime"] | undefined,
	/** All values that are not equal to given value. */
	publishedAt_not?: GraphQLTypes["DateTime"] | undefined,
	/** All values that are contained in given list. */
	publishedAt_in?: Array<GraphQLTypes["DateTime"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	publishedAt_not_in?: Array<GraphQLTypes["DateTime"] | undefined> | undefined,
	/** All values less than the given value. */
	publishedAt_lt?: GraphQLTypes["DateTime"] | undefined,
	/** All values less than or equal the given value. */
	publishedAt_lte?: GraphQLTypes["DateTime"] | undefined,
	/** All values greater than the given value. */
	publishedAt_gt?: GraphQLTypes["DateTime"] | undefined,
	/** All values greater than or equal the given value. */
	publishedAt_gte?: GraphQLTypes["DateTime"] | undefined,
	updatedAt?: GraphQLTypes["DateTime"] | undefined,
	/** All values that are not equal to given value. */
	updatedAt_not?: GraphQLTypes["DateTime"] | undefined,
	/** All values that are contained in given list. */
	updatedAt_in?: Array<GraphQLTypes["DateTime"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	updatedAt_not_in?: Array<GraphQLTypes["DateTime"] | undefined> | undefined,
	/** All values less than the given value. */
	updatedAt_lt?: GraphQLTypes["DateTime"] | undefined,
	/** All values less than or equal the given value. */
	updatedAt_lte?: GraphQLTypes["DateTime"] | undefined,
	/** All values greater than the given value. */
	updatedAt_gt?: GraphQLTypes["DateTime"] | undefined,
	/** All values greater than or equal the given value. */
	updatedAt_gte?: GraphQLTypes["DateTime"] | undefined,
	createdAt?: GraphQLTypes["DateTime"] | undefined,
	/** All values that are not equal to given value. */
	createdAt_not?: GraphQLTypes["DateTime"] | undefined,
	/** All values that are contained in given list. */
	createdAt_in?: Array<GraphQLTypes["DateTime"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	createdAt_not_in?: Array<GraphQLTypes["DateTime"] | undefined> | undefined,
	/** All values less than the given value. */
	createdAt_lt?: GraphQLTypes["DateTime"] | undefined,
	/** All values less than or equal the given value. */
	createdAt_lte?: GraphQLTypes["DateTime"] | undefined,
	/** All values greater than the given value. */
	createdAt_gt?: GraphQLTypes["DateTime"] | undefined,
	/** All values greater than or equal the given value. */
	createdAt_gte?: GraphQLTypes["DateTime"] | undefined,
	id?: string | undefined,
	/** All values that are not equal to given value. */
	id_not?: string | undefined,
	/** All values that are contained in given list. */
	id_in?: Array<string | undefined> | undefined,
	/** All values that are not contained in given list. */
	id_not_in?: Array<string | undefined> | undefined,
	/** All values containing the given string. */
	id_contains?: string | undefined,
	/** All values not containing the given string. */
	id_not_contains?: string | undefined,
	/** All values starting with the given string. */
	id_starts_with?: string | undefined,
	/** All values not starting with the given string. */
	id_not_starts_with?: string | undefined,
	/** All values ending with the given string. */
	id_ends_with?: string | undefined,
	/** All values not ending with the given string */
	id_not_ends_with?: string | undefined,
	kind?: GraphQLTypes["UserKind"] | undefined,
	/** All values that are not equal to given value. */
	kind_not?: GraphQLTypes["UserKind"] | undefined,
	/** All values that are contained in given list. */
	kind_in?: Array<GraphQLTypes["UserKind"] | undefined> | undefined,
	/** All values that are not contained in given list. */
	kind_not_in?: Array<GraphQLTypes["UserKind"] | undefined> | undefined
};
	/** References User record uniquely */
["UserWhereUniqueInput"]: {
		id?: string | undefined
};
	["Version"]: {
	__typename: "Version",
	id: string,
	stage: GraphQLTypes["Stage"],
	revision: number,
	createdAt: GraphQLTypes["DateTime"]
};
	["VersionWhereInput"]: {
		id: string,
	stage: GraphQLTypes["Stage"],
	revision: number
};
	["_FilterKind"]: _FilterKind;
	["_MutationInputFieldKind"]: _MutationInputFieldKind;
	["_MutationKind"]: _MutationKind;
	["_OrderDirection"]: _OrderDirection;
	["_RelationInputCardinality"]: _RelationInputCardinality;
	["_RelationInputKind"]: _RelationInputKind;
	["_RelationKind"]: _RelationKind;
	["_SystemDateTimeFieldVariation"]: _SystemDateTimeFieldVariation
    }
export const enum AboutMeOrderByInput {
	publishedAt_ASC = "publishedAt_ASC",
	publishedAt_DESC = "publishedAt_DESC",
	updatedAt_ASC = "updatedAt_ASC",
	updatedAt_DESC = "updatedAt_DESC",
	createdAt_ASC = "createdAt_ASC",
	createdAt_DESC = "createdAt_DESC",
	id_ASC = "id_ASC",
	id_DESC = "id_DESC",
	contactEmail_ASC = "contactEmail_ASC",
	contactEmail_DESC = "contactEmail_DESC",
	description_ASC = "description_ASC",
	description_DESC = "description_DESC"
}
export const enum AssetOrderByInput {
	mimeType_ASC = "mimeType_ASC",
	mimeType_DESC = "mimeType_DESC",
	size_ASC = "size_ASC",
	size_DESC = "size_DESC",
	width_ASC = "width_ASC",
	width_DESC = "width_DESC",
	height_ASC = "height_ASC",
	height_DESC = "height_DESC",
	fileName_ASC = "fileName_ASC",
	fileName_DESC = "fileName_DESC",
	handle_ASC = "handle_ASC",
	handle_DESC = "handle_DESC",
	publishedAt_ASC = "publishedAt_ASC",
	publishedAt_DESC = "publishedAt_DESC",
	updatedAt_ASC = "updatedAt_ASC",
	updatedAt_DESC = "updatedAt_DESC",
	createdAt_ASC = "createdAt_ASC",
	createdAt_DESC = "createdAt_DESC",
	id_ASC = "id_ASC",
	id_DESC = "id_DESC"
}
export const enum CompanyOrderByInput {
	id_ASC = "id_ASC",
	id_DESC = "id_DESC",
	companyName_ASC = "companyName_ASC",
	companyName_DESC = "companyName_DESC",
	companyWebsite_ASC = "companyWebsite_ASC",
	companyWebsite_DESC = "companyWebsite_DESC"
}
export const enum DocumentFileTypes {
	jpg = "jpg",
	odp = "odp",
	ods = "ods",
	odt = "odt",
	png = "png",
	svg = "svg",
	txt = "txt",
	webp = "webp",
	docx = "docx",
	pdf = "pdf",
	html = "html",
	doc = "doc",
	xlsx = "xlsx",
	xls = "xls",
	pptx = "pptx",
	ppt = "ppt"
}
export const enum ImageFit {
	clip = "clip",
	crop = "crop",
	scale = "scale",
	max = "max"
}
export const enum LinkOrderByInput {
	id_ASC = "id_ASC",
	id_DESC = "id_DESC",
	name_ASC = "name_ASC",
	name_DESC = "name_DESC",
	url_ASC = "url_ASC",
	url_DESC = "url_DESC"
}
/** Locale system enumeration */
export const enum Locale {
	en = "en"
}
export const enum ProjectOrderByInput {
	publishedAt_ASC = "publishedAt_ASC",
	publishedAt_DESC = "publishedAt_DESC",
	updatedAt_ASC = "updatedAt_ASC",
	updatedAt_DESC = "updatedAt_DESC",
	createdAt_ASC = "createdAt_ASC",
	createdAt_DESC = "createdAt_DESC",
	id_ASC = "id_ASC",
	id_DESC = "id_DESC",
	name_ASC = "name_ASC",
	name_DESC = "name_DESC",
	description_ASC = "description_ASC",
	description_DESC = "description_DESC",
	demo_ASC = "demo_ASC",
	demo_DESC = "demo_DESC",
	sourceCode_ASC = "sourceCode_ASC",
	sourceCode_DESC = "sourceCode_DESC",
	stack_ASC = "stack_ASC",
	stack_DESC = "stack_DESC"
}
export const enum ScheduledOperationOrderByInput {
	errorMessage_ASC = "errorMessage_ASC",
	errorMessage_DESC = "errorMessage_DESC",
	description_ASC = "description_ASC",
	description_DESC = "description_DESC",
	publishedAt_ASC = "publishedAt_ASC",
	publishedAt_DESC = "publishedAt_DESC",
	updatedAt_ASC = "updatedAt_ASC",
	updatedAt_DESC = "updatedAt_DESC",
	createdAt_ASC = "createdAt_ASC",
	createdAt_DESC = "createdAt_DESC",
	id_ASC = "id_ASC",
	id_DESC = "id_DESC",
	status_ASC = "status_ASC",
	status_DESC = "status_DESC"
}
/** System Scheduled Operation Status */
export const enum ScheduledOperationStatus {
	CANCELED = "CANCELED",
	COMPLETED = "COMPLETED",
	FAILED = "FAILED",
	IN_PROGRESS = "IN_PROGRESS",
	PENDING = "PENDING"
}
export const enum ScheduledReleaseOrderByInput {
	releaseAt_ASC = "releaseAt_ASC",
	releaseAt_DESC = "releaseAt_DESC",
	isImplicit_ASC = "isImplicit_ASC",
	isImplicit_DESC = "isImplicit_DESC",
	isActive_ASC = "isActive_ASC",
	isActive_DESC = "isActive_DESC",
	errorMessage_ASC = "errorMessage_ASC",
	errorMessage_DESC = "errorMessage_DESC",
	description_ASC = "description_ASC",
	description_DESC = "description_DESC",
	title_ASC = "title_ASC",
	title_DESC = "title_DESC",
	publishedAt_ASC = "publishedAt_ASC",
	publishedAt_DESC = "publishedAt_DESC",
	updatedAt_ASC = "updatedAt_ASC",
	updatedAt_DESC = "updatedAt_DESC",
	createdAt_ASC = "createdAt_ASC",
	createdAt_DESC = "createdAt_DESC",
	id_ASC = "id_ASC",
	id_DESC = "id_DESC",
	status_ASC = "status_ASC",
	status_DESC = "status_DESC"
}
/** System Scheduled Release Status */
export const enum ScheduledReleaseStatus {
	COMPLETED = "COMPLETED",
	FAILED = "FAILED",
	IN_PROGRESS = "IN_PROGRESS",
	PENDING = "PENDING"
}
export const enum SeoOrderByInput {
	publishedAt_ASC = "publishedAt_ASC",
	publishedAt_DESC = "publishedAt_DESC",
	updatedAt_ASC = "updatedAt_ASC",
	updatedAt_DESC = "updatedAt_DESC",
	createdAt_ASC = "createdAt_ASC",
	createdAt_DESC = "createdAt_DESC",
	id_ASC = "id_ASC",
	id_DESC = "id_DESC",
	title_ASC = "title_ASC",
	title_DESC = "title_DESC",
	description_ASC = "description_ASC",
	description_DESC = "description_DESC",
	keywords_ASC = "keywords_ASC",
	keywords_DESC = "keywords_DESC"
}
export const enum SkillCategoryOrderByInput {
	publishedAt_ASC = "publishedAt_ASC",
	publishedAt_DESC = "publishedAt_DESC",
	updatedAt_ASC = "updatedAt_ASC",
	updatedAt_DESC = "updatedAt_DESC",
	createdAt_ASC = "createdAt_ASC",
	createdAt_DESC = "createdAt_DESC",
	id_ASC = "id_ASC",
	id_DESC = "id_DESC",
	name_ASC = "name_ASC",
	name_DESC = "name_DESC"
}
export const enum SkillOrderByInput {
	id_ASC = "id_ASC",
	id_DESC = "id_DESC",
	name_ASC = "name_ASC",
	name_DESC = "name_DESC"
}
/** Stage system enumeration */
export const enum Stage {
	DRAFT = "DRAFT",
	PUBLISHED = "PUBLISHED"
}
export const enum SystemDateTimeFieldVariation {
	BASE = "BASE",
	LOCALIZATION = "LOCALIZATION",
	COMBINED = "COMBINED"
}
export const enum Technologies {
	Angular = "Angular",
	Auth0 = "Auth0",
	ChakraUI = "ChakraUI",
	CSS = "CSS",
	Firebase = "Firebase",
	Formik = "Formik",
	FramerMotion = "FramerMotion",
	GraphQL = "GraphQL",
	GSAP = "GSAP",
	HTML = "HTML",
	JavaScript = "JavaScript",
	MaterialUI = "MaterialUI",
	MongoDB = "MongoDB",
	NextJS = "NextJS",
	NodeJS = "NodeJS",
	React = "React",
	ReactHookForm = "ReactHookForm",
	Redux = "Redux",
	StyledComponents = "StyledComponents",
	TailwindCSS = "TailwindCSS",
	TypeScript = "TypeScript",
	UnstatedNext = "UnstatedNext",
	VueJS = "VueJS",
	Yup = "Yup"
}
/** System User Kind */
export const enum UserKind {
	MEMBER = "MEMBER",
	PAT = "PAT",
	PUBLIC = "PUBLIC",
	WEBHOOK = "WEBHOOK"
}
export const enum UserOrderByInput {
	isActive_ASC = "isActive_ASC",
	isActive_DESC = "isActive_DESC",
	picture_ASC = "picture_ASC",
	picture_DESC = "picture_DESC",
	name_ASC = "name_ASC",
	name_DESC = "name_DESC",
	publishedAt_ASC = "publishedAt_ASC",
	publishedAt_DESC = "publishedAt_DESC",
	updatedAt_ASC = "updatedAt_ASC",
	updatedAt_DESC = "updatedAt_DESC",
	createdAt_ASC = "createdAt_ASC",
	createdAt_DESC = "createdAt_DESC",
	id_ASC = "id_ASC",
	id_DESC = "id_DESC",
	kind_ASC = "kind_ASC",
	kind_DESC = "kind_DESC"
}
export const enum _FilterKind {
	search = "search",
	AND = "AND",
	OR = "OR",
	NOT = "NOT",
	eq = "eq",
	eq_not = "eq_not",
	in = "in",
	not_in = "not_in",
	lt = "lt",
	lte = "lte",
	gt = "gt",
	gte = "gte",
	contains = "contains",
	not_contains = "not_contains",
	starts_with = "starts_with",
	not_starts_with = "not_starts_with",
	ends_with = "ends_with",
	not_ends_with = "not_ends_with",
	contains_all = "contains_all",
	contains_some = "contains_some",
	contains_none = "contains_none",
	relational_single = "relational_single",
	relational_every = "relational_every",
	relational_some = "relational_some",
	relational_none = "relational_none"
}
export const enum _MutationInputFieldKind {
	scalar = "scalar",
	richText = "richText",
	richTextWithEmbeds = "richTextWithEmbeds",
	enum = "enum",
	relation = "relation",
	union = "union",
	virtual = "virtual"
}
export const enum _MutationKind {
	create = "create",
	publish = "publish",
	unpublish = "unpublish",
	update = "update",
	upsert = "upsert",
	delete = "delete",
	updateMany = "updateMany",
	publishMany = "publishMany",
	unpublishMany = "unpublishMany",
	deleteMany = "deleteMany",
	schedulePublish = "schedulePublish",
	scheduleUnpublish = "scheduleUnpublish"
}
export const enum _OrderDirection {
	asc = "asc",
	desc = "desc"
}
export const enum _RelationInputCardinality {
	one = "one",
	many = "many"
}
export const enum _RelationInputKind {
	create = "create",
	update = "update"
}
export const enum _RelationKind {
	regular = "regular",
	union = "union"
}
export const enum _SystemDateTimeFieldVariation {
	base = "base",
	localization = "localization",
	combined = "combined"
}

type ZEUS_VARIABLES = {
	["AboutMeConnectInput"]: ValueTypes["AboutMeConnectInput"];
	["AboutMeCreateInput"]: ValueTypes["AboutMeCreateInput"];
	["AboutMeCreateManyInlineInput"]: ValueTypes["AboutMeCreateManyInlineInput"];
	["AboutMeCreateOneInlineInput"]: ValueTypes["AboutMeCreateOneInlineInput"];
	["AboutMeManyWhereInput"]: ValueTypes["AboutMeManyWhereInput"];
	["AboutMeOrderByInput"]: ValueTypes["AboutMeOrderByInput"];
	["AboutMeUpdateInput"]: ValueTypes["AboutMeUpdateInput"];
	["AboutMeUpdateManyInlineInput"]: ValueTypes["AboutMeUpdateManyInlineInput"];
	["AboutMeUpdateManyInput"]: ValueTypes["AboutMeUpdateManyInput"];
	["AboutMeUpdateManyWithNestedWhereInput"]: ValueTypes["AboutMeUpdateManyWithNestedWhereInput"];
	["AboutMeUpdateOneInlineInput"]: ValueTypes["AboutMeUpdateOneInlineInput"];
	["AboutMeUpdateWithNestedWhereUniqueInput"]: ValueTypes["AboutMeUpdateWithNestedWhereUniqueInput"];
	["AboutMeUpsertInput"]: ValueTypes["AboutMeUpsertInput"];
	["AboutMeUpsertWithNestedWhereUniqueInput"]: ValueTypes["AboutMeUpsertWithNestedWhereUniqueInput"];
	["AboutMeWhereInput"]: ValueTypes["AboutMeWhereInput"];
	["AboutMeWhereUniqueInput"]: ValueTypes["AboutMeWhereUniqueInput"];
	["AboutMelinksUnionConnectInput"]: ValueTypes["AboutMelinksUnionConnectInput"];
	["AboutMelinksUnionCreateInput"]: ValueTypes["AboutMelinksUnionCreateInput"];
	["AboutMelinksUnionCreateManyInlineInput"]: ValueTypes["AboutMelinksUnionCreateManyInlineInput"];
	["AboutMelinksUnionCreateOneInlineInput"]: ValueTypes["AboutMelinksUnionCreateOneInlineInput"];
	["AboutMelinksUnionCreateWithPositionInput"]: ValueTypes["AboutMelinksUnionCreateWithPositionInput"];
	["AboutMelinksUnionUpdateInput"]: ValueTypes["AboutMelinksUnionUpdateInput"];
	["AboutMelinksUnionUpdateManyInlineInput"]: ValueTypes["AboutMelinksUnionUpdateManyInlineInput"];
	["AboutMelinksUnionUpdateManyWithNestedWhereInput"]: ValueTypes["AboutMelinksUnionUpdateManyWithNestedWhereInput"];
	["AboutMelinksUnionUpdateOneInlineInput"]: ValueTypes["AboutMelinksUnionUpdateOneInlineInput"];
	["AboutMelinksUnionUpdateWithNestedWhereUniqueAndPositionInput"]: ValueTypes["AboutMelinksUnionUpdateWithNestedWhereUniqueAndPositionInput"];
	["AboutMelinksUnionUpdateWithNestedWhereUniqueInput"]: ValueTypes["AboutMelinksUnionUpdateWithNestedWhereUniqueInput"];
	["AboutMelinksUnionUpsertWithNestedWhereUniqueAndPositionInput"]: ValueTypes["AboutMelinksUnionUpsertWithNestedWhereUniqueAndPositionInput"];
	["AboutMelinksUnionUpsertWithNestedWhereUniqueInput"]: ValueTypes["AboutMelinksUnionUpsertWithNestedWhereUniqueInput"];
	["AboutMelinksUnionWhereInput"]: ValueTypes["AboutMelinksUnionWhereInput"];
	["AboutMelinksUnionWhereUniqueInput"]: ValueTypes["AboutMelinksUnionWhereUniqueInput"];
	["AssetConnectInput"]: ValueTypes["AssetConnectInput"];
	["AssetCreateInput"]: ValueTypes["AssetCreateInput"];
	["AssetCreateLocalizationDataInput"]: ValueTypes["AssetCreateLocalizationDataInput"];
	["AssetCreateLocalizationInput"]: ValueTypes["AssetCreateLocalizationInput"];
	["AssetCreateLocalizationsInput"]: ValueTypes["AssetCreateLocalizationsInput"];
	["AssetCreateManyInlineInput"]: ValueTypes["AssetCreateManyInlineInput"];
	["AssetCreateOneInlineInput"]: ValueTypes["AssetCreateOneInlineInput"];
	["AssetManyWhereInput"]: ValueTypes["AssetManyWhereInput"];
	["AssetOrderByInput"]: ValueTypes["AssetOrderByInput"];
	["AssetTransformationInput"]: ValueTypes["AssetTransformationInput"];
	["AssetUpdateInput"]: ValueTypes["AssetUpdateInput"];
	["AssetUpdateLocalizationDataInput"]: ValueTypes["AssetUpdateLocalizationDataInput"];
	["AssetUpdateLocalizationInput"]: ValueTypes["AssetUpdateLocalizationInput"];
	["AssetUpdateLocalizationsInput"]: ValueTypes["AssetUpdateLocalizationsInput"];
	["AssetUpdateManyInlineInput"]: ValueTypes["AssetUpdateManyInlineInput"];
	["AssetUpdateManyInput"]: ValueTypes["AssetUpdateManyInput"];
	["AssetUpdateManyLocalizationDataInput"]: ValueTypes["AssetUpdateManyLocalizationDataInput"];
	["AssetUpdateManyLocalizationInput"]: ValueTypes["AssetUpdateManyLocalizationInput"];
	["AssetUpdateManyLocalizationsInput"]: ValueTypes["AssetUpdateManyLocalizationsInput"];
	["AssetUpdateManyWithNestedWhereInput"]: ValueTypes["AssetUpdateManyWithNestedWhereInput"];
	["AssetUpdateOneInlineInput"]: ValueTypes["AssetUpdateOneInlineInput"];
	["AssetUpdateWithNestedWhereUniqueInput"]: ValueTypes["AssetUpdateWithNestedWhereUniqueInput"];
	["AssetUpsertInput"]: ValueTypes["AssetUpsertInput"];
	["AssetUpsertLocalizationInput"]: ValueTypes["AssetUpsertLocalizationInput"];
	["AssetUpsertWithNestedWhereUniqueInput"]: ValueTypes["AssetUpsertWithNestedWhereUniqueInput"];
	["AssetWhereInput"]: ValueTypes["AssetWhereInput"];
	["AssetWhereUniqueInput"]: ValueTypes["AssetWhereUniqueInput"];
	["ColorInput"]: ValueTypes["ColorInput"];
	["CompanyConnectInput"]: ValueTypes["CompanyConnectInput"];
	["CompanyCreateInput"]: ValueTypes["CompanyCreateInput"];
	["CompanyCreateManyInlineInput"]: ValueTypes["CompanyCreateManyInlineInput"];
	["CompanyCreateOneInlineInput"]: ValueTypes["CompanyCreateOneInlineInput"];
	["CompanyCreateWithPositionInput"]: ValueTypes["CompanyCreateWithPositionInput"];
	["CompanyManyWhereInput"]: ValueTypes["CompanyManyWhereInput"];
	["CompanyOrderByInput"]: ValueTypes["CompanyOrderByInput"];
	["CompanyParentConnectInput"]: ValueTypes["CompanyParentConnectInput"];
	["CompanyParentCreateInput"]: ValueTypes["CompanyParentCreateInput"];
	["CompanyParentCreateManyInlineInput"]: ValueTypes["CompanyParentCreateManyInlineInput"];
	["CompanyParentCreateOneInlineInput"]: ValueTypes["CompanyParentCreateOneInlineInput"];
	["CompanyParentUpdateInput"]: ValueTypes["CompanyParentUpdateInput"];
	["CompanyParentUpdateManyInlineInput"]: ValueTypes["CompanyParentUpdateManyInlineInput"];
	["CompanyParentUpdateManyWithNestedWhereInput"]: ValueTypes["CompanyParentUpdateManyWithNestedWhereInput"];
	["CompanyParentUpdateOneInlineInput"]: ValueTypes["CompanyParentUpdateOneInlineInput"];
	["CompanyParentUpdateWithNestedWhereUniqueInput"]: ValueTypes["CompanyParentUpdateWithNestedWhereUniqueInput"];
	["CompanyParentUpsertWithNestedWhereUniqueInput"]: ValueTypes["CompanyParentUpsertWithNestedWhereUniqueInput"];
	["CompanyParentWhereInput"]: ValueTypes["CompanyParentWhereInput"];
	["CompanyParentWhereUniqueInput"]: ValueTypes["CompanyParentWhereUniqueInput"];
	["CompanyUpdateInput"]: ValueTypes["CompanyUpdateInput"];
	["CompanyUpdateManyInlineInput"]: ValueTypes["CompanyUpdateManyInlineInput"];
	["CompanyUpdateManyInput"]: ValueTypes["CompanyUpdateManyInput"];
	["CompanyUpdateManyWithNestedWhereInput"]: ValueTypes["CompanyUpdateManyWithNestedWhereInput"];
	["CompanyUpdateOneInlineInput"]: ValueTypes["CompanyUpdateOneInlineInput"];
	["CompanyUpdateWithNestedWhereUniqueAndPositionInput"]: ValueTypes["CompanyUpdateWithNestedWhereUniqueAndPositionInput"];
	["CompanyUpdateWithNestedWhereUniqueInput"]: ValueTypes["CompanyUpdateWithNestedWhereUniqueInput"];
	["CompanyUpsertInput"]: ValueTypes["CompanyUpsertInput"];
	["CompanyUpsertWithNestedWhereUniqueAndPositionInput"]: ValueTypes["CompanyUpsertWithNestedWhereUniqueAndPositionInput"];
	["CompanyUpsertWithNestedWhereUniqueInput"]: ValueTypes["CompanyUpsertWithNestedWhereUniqueInput"];
	["CompanyWhereInput"]: ValueTypes["CompanyWhereInput"];
	["CompanyWhereUniqueInput"]: ValueTypes["CompanyWhereUniqueInput"];
	["ConnectPositionInput"]: ValueTypes["ConnectPositionInput"];
	["Date"]: ValueTypes["Date"];
	["DateTime"]: ValueTypes["DateTime"];
	["DocumentFileTypes"]: ValueTypes["DocumentFileTypes"];
	["DocumentOutputInput"]: ValueTypes["DocumentOutputInput"];
	["DocumentTransformationInput"]: ValueTypes["DocumentTransformationInput"];
	["Hex"]: ValueTypes["Hex"];
	["ImageFit"]: ValueTypes["ImageFit"];
	["ImageResizeInput"]: ValueTypes["ImageResizeInput"];
	["ImageTransformationInput"]: ValueTypes["ImageTransformationInput"];
	["Json"]: ValueTypes["Json"];
	["LinkConnectInput"]: ValueTypes["LinkConnectInput"];
	["LinkCreateInput"]: ValueTypes["LinkCreateInput"];
	["LinkCreateManyInlineInput"]: ValueTypes["LinkCreateManyInlineInput"];
	["LinkCreateOneInlineInput"]: ValueTypes["LinkCreateOneInlineInput"];
	["LinkCreateWithPositionInput"]: ValueTypes["LinkCreateWithPositionInput"];
	["LinkManyWhereInput"]: ValueTypes["LinkManyWhereInput"];
	["LinkOrderByInput"]: ValueTypes["LinkOrderByInput"];
	["LinkParentConnectInput"]: ValueTypes["LinkParentConnectInput"];
	["LinkParentCreateInput"]: ValueTypes["LinkParentCreateInput"];
	["LinkParentCreateManyInlineInput"]: ValueTypes["LinkParentCreateManyInlineInput"];
	["LinkParentCreateOneInlineInput"]: ValueTypes["LinkParentCreateOneInlineInput"];
	["LinkParentUpdateInput"]: ValueTypes["LinkParentUpdateInput"];
	["LinkParentUpdateManyInlineInput"]: ValueTypes["LinkParentUpdateManyInlineInput"];
	["LinkParentUpdateManyWithNestedWhereInput"]: ValueTypes["LinkParentUpdateManyWithNestedWhereInput"];
	["LinkParentUpdateOneInlineInput"]: ValueTypes["LinkParentUpdateOneInlineInput"];
	["LinkParentUpdateWithNestedWhereUniqueInput"]: ValueTypes["LinkParentUpdateWithNestedWhereUniqueInput"];
	["LinkParentUpsertWithNestedWhereUniqueInput"]: ValueTypes["LinkParentUpsertWithNestedWhereUniqueInput"];
	["LinkParentWhereInput"]: ValueTypes["LinkParentWhereInput"];
	["LinkParentWhereUniqueInput"]: ValueTypes["LinkParentWhereUniqueInput"];
	["LinkUpdateInput"]: ValueTypes["LinkUpdateInput"];
	["LinkUpdateManyInlineInput"]: ValueTypes["LinkUpdateManyInlineInput"];
	["LinkUpdateManyInput"]: ValueTypes["LinkUpdateManyInput"];
	["LinkUpdateManyWithNestedWhereInput"]: ValueTypes["LinkUpdateManyWithNestedWhereInput"];
	["LinkUpdateOneInlineInput"]: ValueTypes["LinkUpdateOneInlineInput"];
	["LinkUpdateWithNestedWhereUniqueAndPositionInput"]: ValueTypes["LinkUpdateWithNestedWhereUniqueAndPositionInput"];
	["LinkUpdateWithNestedWhereUniqueInput"]: ValueTypes["LinkUpdateWithNestedWhereUniqueInput"];
	["LinkUpsertInput"]: ValueTypes["LinkUpsertInput"];
	["LinkUpsertWithNestedWhereUniqueAndPositionInput"]: ValueTypes["LinkUpsertWithNestedWhereUniqueAndPositionInput"];
	["LinkUpsertWithNestedWhereUniqueInput"]: ValueTypes["LinkUpsertWithNestedWhereUniqueInput"];
	["LinkWhereInput"]: ValueTypes["LinkWhereInput"];
	["LinkWhereUniqueInput"]: ValueTypes["LinkWhereUniqueInput"];
	["Locale"]: ValueTypes["Locale"];
	["LocationInput"]: ValueTypes["LocationInput"];
	["Long"]: ValueTypes["Long"];
	["ProjectConnectInput"]: ValueTypes["ProjectConnectInput"];
	["ProjectCreateInput"]: ValueTypes["ProjectCreateInput"];
	["ProjectCreateManyInlineInput"]: ValueTypes["ProjectCreateManyInlineInput"];
	["ProjectCreateOneInlineInput"]: ValueTypes["ProjectCreateOneInlineInput"];
	["ProjectManyWhereInput"]: ValueTypes["ProjectManyWhereInput"];
	["ProjectOrderByInput"]: ValueTypes["ProjectOrderByInput"];
	["ProjectUpdateInput"]: ValueTypes["ProjectUpdateInput"];
	["ProjectUpdateManyInlineInput"]: ValueTypes["ProjectUpdateManyInlineInput"];
	["ProjectUpdateManyInput"]: ValueTypes["ProjectUpdateManyInput"];
	["ProjectUpdateManyWithNestedWhereInput"]: ValueTypes["ProjectUpdateManyWithNestedWhereInput"];
	["ProjectUpdateOneInlineInput"]: ValueTypes["ProjectUpdateOneInlineInput"];
	["ProjectUpdateWithNestedWhereUniqueInput"]: ValueTypes["ProjectUpdateWithNestedWhereUniqueInput"];
	["ProjectUpsertInput"]: ValueTypes["ProjectUpsertInput"];
	["ProjectUpsertWithNestedWhereUniqueInput"]: ValueTypes["ProjectUpsertWithNestedWhereUniqueInput"];
	["ProjectWhereInput"]: ValueTypes["ProjectWhereInput"];
	["ProjectWhereUniqueInput"]: ValueTypes["ProjectWhereUniqueInput"];
	["PublishLocaleInput"]: ValueTypes["PublishLocaleInput"];
	["RGBAHue"]: ValueTypes["RGBAHue"];
	["RGBAInput"]: ValueTypes["RGBAInput"];
	["RGBATransparency"]: ValueTypes["RGBATransparency"];
	["RichTextAST"]: ValueTypes["RichTextAST"];
	["ScheduledOperationConnectInput"]: ValueTypes["ScheduledOperationConnectInput"];
	["ScheduledOperationCreateManyInlineInput"]: ValueTypes["ScheduledOperationCreateManyInlineInput"];
	["ScheduledOperationCreateOneInlineInput"]: ValueTypes["ScheduledOperationCreateOneInlineInput"];
	["ScheduledOperationManyWhereInput"]: ValueTypes["ScheduledOperationManyWhereInput"];
	["ScheduledOperationOrderByInput"]: ValueTypes["ScheduledOperationOrderByInput"];
	["ScheduledOperationStatus"]: ValueTypes["ScheduledOperationStatus"];
	["ScheduledOperationUpdateManyInlineInput"]: ValueTypes["ScheduledOperationUpdateManyInlineInput"];
	["ScheduledOperationUpdateOneInlineInput"]: ValueTypes["ScheduledOperationUpdateOneInlineInput"];
	["ScheduledOperationWhereInput"]: ValueTypes["ScheduledOperationWhereInput"];
	["ScheduledOperationWhereUniqueInput"]: ValueTypes["ScheduledOperationWhereUniqueInput"];
	["ScheduledReleaseConnectInput"]: ValueTypes["ScheduledReleaseConnectInput"];
	["ScheduledReleaseCreateInput"]: ValueTypes["ScheduledReleaseCreateInput"];
	["ScheduledReleaseCreateManyInlineInput"]: ValueTypes["ScheduledReleaseCreateManyInlineInput"];
	["ScheduledReleaseCreateOneInlineInput"]: ValueTypes["ScheduledReleaseCreateOneInlineInput"];
	["ScheduledReleaseManyWhereInput"]: ValueTypes["ScheduledReleaseManyWhereInput"];
	["ScheduledReleaseOrderByInput"]: ValueTypes["ScheduledReleaseOrderByInput"];
	["ScheduledReleaseStatus"]: ValueTypes["ScheduledReleaseStatus"];
	["ScheduledReleaseUpdateInput"]: ValueTypes["ScheduledReleaseUpdateInput"];
	["ScheduledReleaseUpdateManyInlineInput"]: ValueTypes["ScheduledReleaseUpdateManyInlineInput"];
	["ScheduledReleaseUpdateManyInput"]: ValueTypes["ScheduledReleaseUpdateManyInput"];
	["ScheduledReleaseUpdateManyWithNestedWhereInput"]: ValueTypes["ScheduledReleaseUpdateManyWithNestedWhereInput"];
	["ScheduledReleaseUpdateOneInlineInput"]: ValueTypes["ScheduledReleaseUpdateOneInlineInput"];
	["ScheduledReleaseUpdateWithNestedWhereUniqueInput"]: ValueTypes["ScheduledReleaseUpdateWithNestedWhereUniqueInput"];
	["ScheduledReleaseUpsertInput"]: ValueTypes["ScheduledReleaseUpsertInput"];
	["ScheduledReleaseUpsertWithNestedWhereUniqueInput"]: ValueTypes["ScheduledReleaseUpsertWithNestedWhereUniqueInput"];
	["ScheduledReleaseWhereInput"]: ValueTypes["ScheduledReleaseWhereInput"];
	["ScheduledReleaseWhereUniqueInput"]: ValueTypes["ScheduledReleaseWhereUniqueInput"];
	["SeoConnectInput"]: ValueTypes["SeoConnectInput"];
	["SeoCreateInput"]: ValueTypes["SeoCreateInput"];
	["SeoCreateManyInlineInput"]: ValueTypes["SeoCreateManyInlineInput"];
	["SeoCreateOneInlineInput"]: ValueTypes["SeoCreateOneInlineInput"];
	["SeoManyWhereInput"]: ValueTypes["SeoManyWhereInput"];
	["SeoOrderByInput"]: ValueTypes["SeoOrderByInput"];
	["SeoUpdateInput"]: ValueTypes["SeoUpdateInput"];
	["SeoUpdateManyInlineInput"]: ValueTypes["SeoUpdateManyInlineInput"];
	["SeoUpdateManyInput"]: ValueTypes["SeoUpdateManyInput"];
	["SeoUpdateManyWithNestedWhereInput"]: ValueTypes["SeoUpdateManyWithNestedWhereInput"];
	["SeoUpdateOneInlineInput"]: ValueTypes["SeoUpdateOneInlineInput"];
	["SeoUpdateWithNestedWhereUniqueInput"]: ValueTypes["SeoUpdateWithNestedWhereUniqueInput"];
	["SeoUpsertInput"]: ValueTypes["SeoUpsertInput"];
	["SeoUpsertWithNestedWhereUniqueInput"]: ValueTypes["SeoUpsertWithNestedWhereUniqueInput"];
	["SeoWhereInput"]: ValueTypes["SeoWhereInput"];
	["SeoWhereUniqueInput"]: ValueTypes["SeoWhereUniqueInput"];
	["SkillCategoryConnectInput"]: ValueTypes["SkillCategoryConnectInput"];
	["SkillCategoryCreateInput"]: ValueTypes["SkillCategoryCreateInput"];
	["SkillCategoryCreateManyInlineInput"]: ValueTypes["SkillCategoryCreateManyInlineInput"];
	["SkillCategoryCreateOneInlineInput"]: ValueTypes["SkillCategoryCreateOneInlineInput"];
	["SkillCategoryManyWhereInput"]: ValueTypes["SkillCategoryManyWhereInput"];
	["SkillCategoryOrderByInput"]: ValueTypes["SkillCategoryOrderByInput"];
	["SkillCategoryUpdateInput"]: ValueTypes["SkillCategoryUpdateInput"];
	["SkillCategoryUpdateManyInlineInput"]: ValueTypes["SkillCategoryUpdateManyInlineInput"];
	["SkillCategoryUpdateManyInput"]: ValueTypes["SkillCategoryUpdateManyInput"];
	["SkillCategoryUpdateManyWithNestedWhereInput"]: ValueTypes["SkillCategoryUpdateManyWithNestedWhereInput"];
	["SkillCategoryUpdateOneInlineInput"]: ValueTypes["SkillCategoryUpdateOneInlineInput"];
	["SkillCategoryUpdateWithNestedWhereUniqueInput"]: ValueTypes["SkillCategoryUpdateWithNestedWhereUniqueInput"];
	["SkillCategoryUpsertInput"]: ValueTypes["SkillCategoryUpsertInput"];
	["SkillCategoryUpsertWithNestedWhereUniqueInput"]: ValueTypes["SkillCategoryUpsertWithNestedWhereUniqueInput"];
	["SkillCategoryWhereInput"]: ValueTypes["SkillCategoryWhereInput"];
	["SkillCategoryWhereUniqueInput"]: ValueTypes["SkillCategoryWhereUniqueInput"];
	["SkillCategoryskillsListUnionConnectInput"]: ValueTypes["SkillCategoryskillsListUnionConnectInput"];
	["SkillCategoryskillsListUnionCreateInput"]: ValueTypes["SkillCategoryskillsListUnionCreateInput"];
	["SkillCategoryskillsListUnionCreateManyInlineInput"]: ValueTypes["SkillCategoryskillsListUnionCreateManyInlineInput"];
	["SkillCategoryskillsListUnionCreateOneInlineInput"]: ValueTypes["SkillCategoryskillsListUnionCreateOneInlineInput"];
	["SkillCategoryskillsListUnionCreateWithPositionInput"]: ValueTypes["SkillCategoryskillsListUnionCreateWithPositionInput"];
	["SkillCategoryskillsListUnionUpdateInput"]: ValueTypes["SkillCategoryskillsListUnionUpdateInput"];
	["SkillCategoryskillsListUnionUpdateManyInlineInput"]: ValueTypes["SkillCategoryskillsListUnionUpdateManyInlineInput"];
	["SkillCategoryskillsListUnionUpdateManyWithNestedWhereInput"]: ValueTypes["SkillCategoryskillsListUnionUpdateManyWithNestedWhereInput"];
	["SkillCategoryskillsListUnionUpdateOneInlineInput"]: ValueTypes["SkillCategoryskillsListUnionUpdateOneInlineInput"];
	["SkillCategoryskillsListUnionUpdateWithNestedWhereUniqueAndPositionInput"]: ValueTypes["SkillCategoryskillsListUnionUpdateWithNestedWhereUniqueAndPositionInput"];
	["SkillCategoryskillsListUnionUpdateWithNestedWhereUniqueInput"]: ValueTypes["SkillCategoryskillsListUnionUpdateWithNestedWhereUniqueInput"];
	["SkillCategoryskillsListUnionUpsertWithNestedWhereUniqueAndPositionInput"]: ValueTypes["SkillCategoryskillsListUnionUpsertWithNestedWhereUniqueAndPositionInput"];
	["SkillCategoryskillsListUnionUpsertWithNestedWhereUniqueInput"]: ValueTypes["SkillCategoryskillsListUnionUpsertWithNestedWhereUniqueInput"];
	["SkillCategoryskillsListUnionWhereInput"]: ValueTypes["SkillCategoryskillsListUnionWhereInput"];
	["SkillCategoryskillsListUnionWhereUniqueInput"]: ValueTypes["SkillCategoryskillsListUnionWhereUniqueInput"];
	["SkillConnectInput"]: ValueTypes["SkillConnectInput"];
	["SkillCreateInput"]: ValueTypes["SkillCreateInput"];
	["SkillCreateManyInlineInput"]: ValueTypes["SkillCreateManyInlineInput"];
	["SkillCreateOneInlineInput"]: ValueTypes["SkillCreateOneInlineInput"];
	["SkillCreateWithPositionInput"]: ValueTypes["SkillCreateWithPositionInput"];
	["SkillManyWhereInput"]: ValueTypes["SkillManyWhereInput"];
	["SkillOrderByInput"]: ValueTypes["SkillOrderByInput"];
	["SkillParentConnectInput"]: ValueTypes["SkillParentConnectInput"];
	["SkillParentCreateInput"]: ValueTypes["SkillParentCreateInput"];
	["SkillParentCreateManyInlineInput"]: ValueTypes["SkillParentCreateManyInlineInput"];
	["SkillParentCreateOneInlineInput"]: ValueTypes["SkillParentCreateOneInlineInput"];
	["SkillParentUpdateInput"]: ValueTypes["SkillParentUpdateInput"];
	["SkillParentUpdateManyInlineInput"]: ValueTypes["SkillParentUpdateManyInlineInput"];
	["SkillParentUpdateManyWithNestedWhereInput"]: ValueTypes["SkillParentUpdateManyWithNestedWhereInput"];
	["SkillParentUpdateOneInlineInput"]: ValueTypes["SkillParentUpdateOneInlineInput"];
	["SkillParentUpdateWithNestedWhereUniqueInput"]: ValueTypes["SkillParentUpdateWithNestedWhereUniqueInput"];
	["SkillParentUpsertWithNestedWhereUniqueInput"]: ValueTypes["SkillParentUpsertWithNestedWhereUniqueInput"];
	["SkillParentWhereInput"]: ValueTypes["SkillParentWhereInput"];
	["SkillParentWhereUniqueInput"]: ValueTypes["SkillParentWhereUniqueInput"];
	["SkillUpdateInput"]: ValueTypes["SkillUpdateInput"];
	["SkillUpdateManyInlineInput"]: ValueTypes["SkillUpdateManyInlineInput"];
	["SkillUpdateManyInput"]: ValueTypes["SkillUpdateManyInput"];
	["SkillUpdateManyWithNestedWhereInput"]: ValueTypes["SkillUpdateManyWithNestedWhereInput"];
	["SkillUpdateOneInlineInput"]: ValueTypes["SkillUpdateOneInlineInput"];
	["SkillUpdateWithNestedWhereUniqueAndPositionInput"]: ValueTypes["SkillUpdateWithNestedWhereUniqueAndPositionInput"];
	["SkillUpdateWithNestedWhereUniqueInput"]: ValueTypes["SkillUpdateWithNestedWhereUniqueInput"];
	["SkillUpsertInput"]: ValueTypes["SkillUpsertInput"];
	["SkillUpsertWithNestedWhereUniqueAndPositionInput"]: ValueTypes["SkillUpsertWithNestedWhereUniqueAndPositionInput"];
	["SkillUpsertWithNestedWhereUniqueInput"]: ValueTypes["SkillUpsertWithNestedWhereUniqueInput"];
	["SkillWhereInput"]: ValueTypes["SkillWhereInput"];
	["SkillWhereUniqueInput"]: ValueTypes["SkillWhereUniqueInput"];
	["Stage"]: ValueTypes["Stage"];
	["SystemDateTimeFieldVariation"]: ValueTypes["SystemDateTimeFieldVariation"];
	["Technologies"]: ValueTypes["Technologies"];
	["UnpublishLocaleInput"]: ValueTypes["UnpublishLocaleInput"];
	["UserConnectInput"]: ValueTypes["UserConnectInput"];
	["UserCreateManyInlineInput"]: ValueTypes["UserCreateManyInlineInput"];
	["UserCreateOneInlineInput"]: ValueTypes["UserCreateOneInlineInput"];
	["UserKind"]: ValueTypes["UserKind"];
	["UserManyWhereInput"]: ValueTypes["UserManyWhereInput"];
	["UserOrderByInput"]: ValueTypes["UserOrderByInput"];
	["UserUpdateManyInlineInput"]: ValueTypes["UserUpdateManyInlineInput"];
	["UserUpdateOneInlineInput"]: ValueTypes["UserUpdateOneInlineInput"];
	["UserWhereInput"]: ValueTypes["UserWhereInput"];
	["UserWhereUniqueInput"]: ValueTypes["UserWhereUniqueInput"];
	["VersionWhereInput"]: ValueTypes["VersionWhereInput"];
	["_FilterKind"]: ValueTypes["_FilterKind"];
	["_MutationInputFieldKind"]: ValueTypes["_MutationInputFieldKind"];
	["_MutationKind"]: ValueTypes["_MutationKind"];
	["_OrderDirection"]: ValueTypes["_OrderDirection"];
	["_RelationInputCardinality"]: ValueTypes["_RelationInputCardinality"];
	["_RelationInputKind"]: ValueTypes["_RelationInputKind"];
	["_RelationKind"]: ValueTypes["_RelationKind"];
	["_SystemDateTimeFieldVariation"]: ValueTypes["_SystemDateTimeFieldVariation"];
}